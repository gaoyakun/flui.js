{"version":3,"sources":["webpack://flui/webpack/universalModuleDefinition","webpack://flui/webpack/bootstrap","webpack://flui/../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://flui/../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://flui/../node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://flui/../node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://flui/../node_modules/@babel/runtime/helpers/createClass.js","webpack://flui/../node_modules/@babel/runtime/helpers/defineProperty.js","webpack://flui/../node_modules/@babel/runtime/helpers/extends.js","webpack://flui/../node_modules/@babel/runtime/helpers/get.js","webpack://flui/../node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://flui/../node_modules/@babel/runtime/helpers/inherits.js","webpack://flui/../node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://flui/../node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://flui/../node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://flui/../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://flui/../node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://flui/../node_modules/@babel/runtime/helpers/superPropBase.js","webpack://flui/../node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://flui/../node_modules/@babel/runtime/helpers/typeof.js","webpack://flui/../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://flui/../node_modules/@babel/runtime/regenerator/index.js","webpack://flui/../node_modules/regenerator-runtime/runtime.js","webpack://flui/./asset/asseturl.ts","webpack://flui/./asset/file_loader.ts","webpack://flui/./asset/image_loader.ts","webpack://flui/./asset/index.ts","webpack://flui/./asset/load_manager.ts","webpack://flui/./asset/loader.ts","webpack://flui/./atlas_manager.ts","webpack://flui/./components/button.ts","webpack://flui/./components/input.ts","webpack://flui/./components/scrollbar.ts","webpack://flui/./components/select.ts","webpack://flui/./components/slider.ts","webpack://flui/./components/text.ts","webpack://flui/./document.ts","webpack://flui/./dummy_element.ts","webpack://flui/./element.ts","webpack://flui/./events.ts","webpack://flui/./flow_element.ts","webpack://flui/./font.ts","webpack://flui/./glyph_manager.ts","webpack://flui/./gui.ts","webpack://flui/./hittest_visitor.ts","webpack://flui/./image_manager.ts","webpack://flui/./index.ts","webpack://flui/./layout.ts","webpack://flui/./maxrects-packer/abstract-bin.ts","webpack://flui/./maxrects-packer/geom/Rectangle.ts","webpack://flui/./maxrects-packer/index.ts","webpack://flui/./maxrects-packer/maxrects-bin.ts","webpack://flui/./maxrects-packer/maxrects-packer.ts","webpack://flui/./maxrects-packer/oversized-element-bin.ts","webpack://flui/./misc/index.ts","webpack://flui/./misc/linkedlist.ts","webpack://flui/./misc/string_utils.ts","webpack://flui/./misc/visitor.ts","webpack://flui/./node.ts","webpack://flui/./nodelist.ts","webpack://flui/./primitive.ts","webpack://flui/./renderer.ts","webpack://flui/./selector.ts","webpack://flui/./style.ts","webpack://flui/./style_element.ts","webpack://flui/./texture_atlas.ts","webpack://flui/./typeflex/api.ts","webpack://flui/./typeflex/enums.ts","webpack://flui/./typeflex/internal.ts","webpack://flui/./typeflex/utils.ts","webpack://flui/./typeflex/ygconfig.ts","webpack://flui/./typeflex/ygfloatoptional.ts","webpack://flui/./typeflex/yglayout.ts","webpack://flui/./typeflex/ygnode.ts","webpack://flui/./typeflex/ygstyle.ts","webpack://flui/./typeflex/ygvalue.ts","webpack://flui/./typeflex/yoga.ts","webpack://flui/./types.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,GAAG;;QAEH;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA;QACA,MAAM;QACN;QACA;QACA,MAAM;QACN;QACA;QACA;QACA,OAAO;QACP;QACA;QACA;QACA;QACA;QACA;QACA,IAAI;QACJ;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;;QAEL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA,6BAA6B;QAC7B,6BAA6B;QAC7B;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA,qBAAqB,gBAAgB;QACrC;QACA;QACA,KAAK;QACL;QACA;QACA;QACA,qBAAqB,gBAAgB;QACrC;QACA;QACA,KAAK;QACL;QACA;QACA,KAAK;QACL;QACA;QACA,KAAK;QACL;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;;QAEL;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;QACA,KAAK;QACL;QACA;QACA;QACA,KAAK;;QAEL;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA,kBAAkB,8BAA8B;QAChD;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAI;QACJ;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA,IAAI;QACJ;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA;QACA;QACA,OAAO;QACP;QACA;QACA;QACA;QACA,IAAI;QACJ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,oBAAoB,2BAA2B;QAC/C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,OAAO;QACP;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA,mBAAmB,cAAc;QACjC;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA,gBAAgB,KAAK;QACrB;QACA;QACA;QACA,MAAM;QACN;QACA;QACA;QACA;QACA;QACA,gBAAgB,YAAY;QAC5B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA,cAAc,4BAA4B;QAC1C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA,IAAI;;QAEJ;QACA;QACA;QACA;QACA;QACA;;QAEA;;QAEA;QACA;QACA,eAAe,4BAA4B;QAC3C;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA,eAAe,4BAA4B;QAC3C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,iBAAiB,uCAAuC;QACxD;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,iBAAiB,uCAAuC;QACxD;QACA;QACA;QACA;QACA;QACA;QACA;QACA,iBAAiB,sBAAsB;QACvC;QACA;QACA;QACA,QAAQ;QACR;QACA;QACA;QACA;QACA;QACA;QACA,UAAU;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA,cAAc,wCAAwC;QACtD;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA,OAAO;QACP;QACA;QACA;QACA;QACA;QACA;QACA,SAAS;QACT;QACA;QACA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA;QACA;QACA;QACA;QACA,QAAQ;QACR;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA,MAAM;QACN;QACA,KAAK;QACL;;QAEA;QACA;QACA;QACA,IAAI;QACJ;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,eAAe;QACf;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA,sCAAsC,uBAAuB;;;QAG7D;QACA;;;;;;;;;;;;ACv1BA;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA;;AAEA;AACA;;AAEA,mC;;;;;;;;;;;ACVA,uBAAuB,mBAAO,CAAC,sFAAoB;;AAEnD;AACA;AACA;;AAEA,oC;;;;;;;;;;;ACNA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wC;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;;;;;;ACNA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,iC;;;;;;;;;;;ACfA;AACA;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0B;;;;;;;;;;;AClBA,oBAAoB,mBAAO,CAAC,gFAAiB;;AAE7C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,sB;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;;;;;;ACPA,qBAAqB,mBAAO,CAAC,kFAAkB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,2B;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;;AAEA,wC;;;;;;;;;;;ACNA;AACA;AACA;;AAEA,kC;;;;;;;;;;;ACJA;AACA;AACA;;AAEA,oC;;;;;;;;;;;ACJA,cAAc,mBAAO,CAAC,2EAAmB;;AAEzC,4BAA4B,mBAAO,CAAC,gGAAyB;;AAE7D;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4C;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iC;;;;;;;;;;;ACTA,qBAAqB,mBAAO,CAAC,kFAAkB;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gC;;;;;;;;;;;ACXA,wBAAwB,mBAAO,CAAC,wFAAqB;;AAErD,sBAAsB,mBAAO,CAAC,oFAAmB;;AAEjD,iCAAiC,mBAAO,CAAC,0GAA8B;;AAEvE,wBAAwB,mBAAO,CAAC,wFAAqB;;AAErD;AACA;AACA;;AAEA,oC;;;;;;;;;;;ACZA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yB;;;;;;;;;;;AChBA,uBAAuB,mBAAO,CAAC,sFAAoB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6C;;;;;;;;;;;ACXA,iBAAiB,mBAAO,CAAC,2EAAqB;;;;;;;;;;;;ACA9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;A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","file":"flui.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"flui\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flui\"] = factory();\n\telse\n\t\troot[\"flui\"] = factory();\n})(window, function() {\nreturn "," \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdateflui\"];\n \twindow[\"webpackHotUpdateflui\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"f7ae7f9234e867757ae5\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_selfInvalidated: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n \t\t\tinvalidate: function() {\n \t\t\t\tthis._selfInvalidated = true;\n \t\t\t\tswitch (hotStatus) {\n \t\t\t\t\tcase \"idle\":\n \t\t\t\t\t\thotUpdate = {};\n \t\t\t\t\t\thotUpdate[moduleId] = modules[moduleId];\n \t\t\t\t\t\thotSetStatus(\"ready\");\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"ready\":\n \t\t\t\t\t\thotApplyInvalidatedModule(moduleId);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"prepare\":\n \t\t\t\t\tcase \"check\":\n \t\t\t\t\tcase \"dispose\":\n \t\t\t\t\tcase \"apply\":\n \t\t\t\t\t\t(hotQueuedInvalidatedModules =\n \t\t\t\t\t\t\thotQueuedInvalidatedModules || []).push(moduleId);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\t// ignore requests in error states\n \t\t\t\t\t\tbreak;\n \t\t\t\t}\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash, hotQueuedInvalidatedModules;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(hotApplyInvalidatedModules() ? \"ready\" : \"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = \"flui\";\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n \t\treturn hotApplyInternal(options);\n \t}\n\n \tfunction hotApplyInternal(options) {\n \t\thotApplyInvalidatedModules();\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (\n \t\t\t\t\t!module ||\n \t\t\t\t\t(module.hot._selfAccepted && !module.hot._selfInvalidated)\n \t\t\t\t)\n \t\t\t\t\tcontinue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted &&\n \t\t\t\t// removed self-accepted modules should not be required\n \t\t\t\tappliedUpdate[moduleId] !== warnUnexpectedRequire &&\n \t\t\t\t// when called invalidate self-accepting is not possible\n \t\t\t\t!installedModules[moduleId].hot._selfInvalidated\n \t\t\t) {\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\tparents: installedModules[moduleId].parents.slice(),\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\tif (hotUpdateNewHash !== undefined) {\n \t\t\thotCurrentHash = hotUpdateNewHash;\n \t\t\thotUpdateNewHash = undefined;\n \t\t}\n \t\thotUpdate = undefined;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = item.parents;\n \t\t\thotCurrentChildModule = moduleId;\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\tif (hotQueuedInvalidatedModules) {\n \t\t\treturn hotApplyInternal(options).then(function(list) {\n \t\t\t\toutdatedModules.forEach(function(moduleId) {\n \t\t\t\t\tif (list.indexOf(moduleId) < 0) list.push(moduleId);\n \t\t\t\t});\n \t\t\t\treturn list;\n \t\t\t});\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \tfunction hotApplyInvalidatedModules() {\n \t\tif (hotQueuedInvalidatedModules) {\n \t\t\tif (!hotUpdate) hotUpdate = {};\n \t\t\thotQueuedInvalidatedModules.forEach(hotApplyInvalidatedModule);\n \t\t\thotQueuedInvalidatedModules = undefined;\n \t\t\treturn true;\n \t\t}\n \t}\n\n \tfunction hotApplyInvalidatedModule(moduleId) {\n \t\tif (!Object.prototype.hasOwnProperty.call(hotUpdate, moduleId))\n \t\t\thotUpdate[moduleId] = modules[moduleId];\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(\"./index.ts\")(__webpack_require__.s = \"./index.ts\");\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { base64ToU8 } from '../misc';\r\nimport { LoadManager } from './load_manager';\r\n\r\nexport class AssetURL {\r\n    private static readonly DATAURI_REGEX = /^data:([^;,]+)?((?:;(?:[^;,]+))*?)(;base64)?,(.*)$/;\r\n    private _url: string;\r\n    private _urlObject: URL;\r\n    private _media: string;\r\n    private _mimeType: string;\r\n    private _charset: string;\r\n    private _decodedBody: string|Uint8Array;\r\n    private _body: string;\r\n    private _base64: boolean;\r\n    constructor (url: string) {\r\n        this._url = url ? LoadManager.resolveURL(url) : null;\r\n        this._urlObject = this._url ? new URL(this._url) : null;\r\n        this._parseDataURI ();\r\n    }\r\n    get scheme (): string {\r\n        return this._urlObject ? this._urlObject.protocol : null;\r\n    }\r\n    get port (): number {\r\n        return this._urlObject ? Number(this._urlObject.port) : null;\r\n    }\r\n    get host (): string {\r\n        return this._urlObject ? this._urlObject.hostname : null;\r\n    }\r\n    get path (): string {\r\n        return this._urlObject ? this._urlObject.pathname : null;\r\n    }\r\n    get hash (): string {\r\n        return this._urlObject ? this._urlObject.hash : null;\r\n    }\r\n    get origin (): string {\r\n        return this._urlObject ? this._urlObject.origin : null;\r\n    }\r\n    get href (): string {\r\n        return this._urlObject ? this._urlObject.href : null;\r\n    }\r\n    get media (): string {\r\n        return this._media;\r\n    }\r\n    get mimeType (): string {\r\n        return this._mimeType;\r\n    }\r\n    get charset (): string {\r\n        return this._charset;\r\n    }\r\n    get body (): string {\r\n        return this._body;\r\n    }\r\n    get decodedBody (): string|Uint8Array {\r\n        if (this.isDataURI() && !this._decodedBody) {\r\n            this._decodedBody = this._base64 ? base64ToU8 (this._body) : decodeURIComponent (this._body);\r\n        }\r\n        return this._decodedBody;\r\n    }\r\n    isDataURI (): boolean {\r\n        return !!this._mimeType;\r\n    }\r\n    private _parseDataURI () {\r\n        this._media = null;\r\n        this._mimeType = null;\r\n        this._charset = null;\r\n        this._decodedBody = null;   \r\n        this._body = null;     \r\n        this._base64 = false;\r\n        const m = this._url && AssetURL.DATAURI_REGEX.exec (this._url) || null;\r\n        if (m) {\r\n            this._base64 = !!m[3];\r\n            this._body = m[4];\r\n            if (m[1]) {\r\n                this._mimeType = m[1];\r\n                this._media = `${this._mimeType}${m[2]||''}`;\r\n            } else {\r\n                this._mimeType = 'text/plain';\r\n                if (m[2]) {\r\n                    this._media = `${this._mimeType}${m[2]}`;\r\n                } else {\r\n                    this._charset = 'US-ASCII';\r\n                    this._media = `${this._mimeType};charset=${this._charset}`;\r\n                }\r\n            }\r\n            if (!this._charset && m[2]) {\r\n                const cm = /;charset=([^;,]+)/.exec(m[2]);\r\n                if (cm) {\r\n                    this._charset = cm[1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { LoadManager } from './load_manager';\r\nimport { AbstractLoader } from './loader';\r\nimport { AssetURL } from './asseturl';\r\nimport { stringToU8, u8ToString } from '../misc';\r\n\r\ntype FileContentType = ArrayBuffer|Blob|Document|object|string;\r\nexport class FileLoader extends AbstractLoader<FileContentType> {\r\n    private _responseType: XMLHttpRequestResponseType;\r\n    private _mimeType: string;\r\n    private _headers: { [name:string]: string };\r\n    constructor (manager?: LoadManager, responseType?: XMLHttpRequestResponseType, mimeType?: string, headers?: { [name:string]: string }) {\r\n        super (manager);\r\n        this._responseType = responseType || null;\r\n        this._mimeType = mimeType || null;\r\n        this._headers = headers || {};\r\n    }\r\n    get responseType () {\r\n        return this._responseType;\r\n    }\r\n    set responseType (val: XMLHttpRequestResponseType) {\r\n        this._responseType = val;\r\n    }\r\n    get mimeType () {\r\n        return this._mimeType;\r\n    }\r\n    set mimeType (val: string) {\r\n        this._mimeType = val;\r\n    }\r\n    get headers () {\r\n        return this._headers;\r\n    }\r\n    set headers (val) {\r\n        this._headers = val;\r\n    }\r\n    async load (url: string, options?: any) {\r\n        this._manager && this._manager.beginLoad (url);\r\n        return new Promise<FileContentType>((resolve, reject)=>{\r\n            const assetURL = new AssetURL (url);\r\n            if (assetURL.isDataURI()) {\r\n                // adapt from THREE.js\r\n                const mimeType = assetURL.mimeType;\r\n                const decodedBody = assetURL.decodedBody;\r\n                try {\r\n                    let responseType = (this._responseType || '').toLowerCase ();\r\n                    switch (responseType) {\r\n                        case 'arraybuffer':\r\n                        case 'blob': {\r\n                            let view: Uint8Array = null;\r\n                            if (typeof decodedBody === 'string') {\r\n                                view = stringToU8 (decodedBody);\r\n                            } else {\r\n                                view = decodedBody;\r\n                            }\r\n                            if (responseType === 'blob') {\r\n                                this._object = new Blob ([view.buffer], { type: mimeType });\r\n                            } else {\r\n                                this._object = view.buffer;\r\n                            }\r\n                            break;\r\n                        }\r\n                        case 'document': {\r\n                            const doc = typeof decodedBody === 'string' ? decodedBody : u8ToString(decodedBody);\r\n                            const parser = new DOMParser();\r\n                            this._object = parser.parseFromString (doc, mimeType as any);\r\n                            break;\r\n                        }\r\n                        case 'json': {\r\n                            const doc = typeof decodedBody === 'string' ? decodedBody : u8ToString(decodedBody);\r\n                            this._object = JSON.parse (doc);\r\n                            break;\r\n                        }\r\n                        case 'text': {\r\n                            this._object = typeof decodedBody === 'string' ? decodedBody : u8ToString(decodedBody);\r\n                            break;\r\n                        }\r\n                        default:\r\n                            this._object = assetURL.decodedBody;\r\n                            break;\r\n                    }\r\n                    this._manager && this._manager.endLoad (url, true);\r\n                    resolve (this._object);\r\n                } catch (error) {\r\n                    this._manager && this._manager.endLoad (url, false);\r\n                    reject (error);\r\n                }\r\n            } else {\r\n                const that = this;\r\n                const request = new XMLHttpRequest ();\r\n                request.open ('GET', url, true);\r\n                request.addEventListener ('load', function(event) {\r\n                    that._object = this.response;\r\n                    if (this.status === 200 || this.status === 0) {\r\n                        that._manager && that._manager.endLoad (url, true);\r\n                        resolve (that._object);\r\n                    } else {\r\n                        that._manager && that._manager.endLoad (url, false);\r\n                        reject (event);\r\n                    }\r\n                });\r\n                request.addEventListener ('error', function(event) {\r\n                    that._manager && that._manager.endLoad (url, false);\r\n                    reject (event);\r\n                });\r\n                request.addEventListener ('abort', function(event) {\r\n                    that._manager && that._manager.endLoad (url, false);\r\n                    reject (event);\r\n                });\r\n                if (that._responseType !== null) {\r\n                    request.responseType = that._responseType;\r\n                }\r\n                if (request.overrideMimeType && this._mimeType) {\r\n                    request.overrideMimeType (this._mimeType);\r\n                }\r\n                for (const k in that._headers) {\r\n                    request.setRequestHeader (k, that._headers[k]);\r\n                }\r\n                request.send (null);\r\n            }\r\n        });\r\n    }\r\n}","import { LoadManager } from './load_manager';\r\nimport { AbstractLoader } from './loader';\r\n\r\nexport class ImageLoader extends AbstractLoader<HTMLImageElement> {\r\n    constructor (manager?: LoadManager, object?: HTMLImageElement) {\r\n        super (manager, object);\r\n    }\r\n    async load (url: string, options?: any) {\r\n        this._manager && this._manager.beginLoad (url);\r\n        return new Promise<HTMLImageElement>((resolve, reject)=>{\r\n            const onImageLoaded = function (this: ImageLoader, ev: Event) {\r\n                this._manager && this._manager.endLoad (url, true);\r\n                this._object.removeEventListener ('load', onImageLoaded);\r\n                this._object.removeEventListener ('error', onImageLoadError);\r\n                resolve (this._object);\r\n            };            \r\n            const onImageLoadError = function (this: ImageLoader, ev: Event) {\r\n                this._manager && this._manager.endLoad (url, false);\r\n                this._object.removeEventListener ('load', onImageLoaded);\r\n                this._object.removeEventListener ('error', onImageLoadError);\r\n                reject (ev);\r\n            };            \r\n            if (!this._object) {\r\n                this._object = new Image();\r\n            }\r\n            this._object.src = url;\r\n            this._object.addEventListener ('load', onImageLoaded.bind(this));\r\n            this._object.addEventListener ('error', onImageLoadError.bind(this));\r\n        });\r\n    }\r\n}","export * from './load_manager';\r\nexport * from './asseturl';\r\nexport * from './loader';\r\nexport * from './image_loader';\r\nexport * from './file_loader';","import { eventtarget, EventTarget, Event } from '../types';\r\n\r\nexport class LoadBegin extends Event {\r\n    static readonly NAME = 'loadbegin';\r\n    manager: LoadManager;\r\n    url: string;\r\n    constructor (manager: LoadManager, url: string) {\r\n        super (LoadBegin.NAME);\r\n        this.manager = manager;\r\n        this.url = url;\r\n    }\r\n}\r\n\r\nexport class LoadEnd extends Event {\r\n    static readonly NAME = 'loadend';\r\n    manager: LoadManager;\r\n    url: string;\r\n    success: boolean;\r\n    constructor (manager: LoadManager, url: string, success: boolean) {\r\n        super (LoadEnd.NAME);\r\n        this.manager = manager;\r\n        this.url = url;\r\n        this.success = success;\r\n    }\r\n}\r\n\r\nexport interface LoadManager extends EventTarget {}\r\n\r\n@eventtarget()\r\nexport class LoadManager {\r\n    private _numItems: number;\r\n    private _numLoadedItems: number;\r\n    private static _tempElement: HTMLAnchorElement = null;\r\n    constructor () {\r\n        this._numItems = 0;\r\n        this._numLoadedItems = 0;\r\n    }\r\n    get numItems () {\r\n        return this._numItems;\r\n    }\r\n    get numLoadedItems () {\r\n        return this._numLoadedItems;\r\n    }\r\n    beginLoad (url: string): string {\r\n        url = LoadManager.resolveURL (url);\r\n        this._numItems++;\r\n        this.dispatchEvent (new LoadBegin(this, url))\r\n        return url;\r\n    }\r\n    endLoad (url: string, succ: boolean) {\r\n        if (succ) {\r\n            this._numLoadedItems++;\r\n        }\r\n        url = LoadManager.resolveURL (url);\r\n        this.dispatchEvent (new LoadEnd (this, url, succ));\r\n    }\r\n    static resolveURL (url: string): string {\r\n        if (!this._tempElement) {\r\n            this._tempElement = document.createElement('a');\r\n        }\r\n        this._tempElement.href = url;\r\n        return this._tempElement.href;\r\n    }\r\n}","import { LoadManager } from './load_manager';\r\n\r\nexport abstract class AbstractLoader<T = any> {\r\n    protected _object: T;\r\n    protected _manager: LoadManager;\r\n    protected _crossOrigin: string;\r\n    constructor (manager?: LoadManager, object?: T) {\r\n        this._object = object || null;\r\n        this._manager = manager || null;\r\n        this._crossOrigin = 'anonymous';\r\n    }\r\n    get object () {\r\n        return this._object;\r\n    }\r\n    set object (obj: T) {\r\n        this._object = obj;\r\n    }\r\n    get manager () {\r\n        return this._manager;\r\n    }\r\n    set manager (mngr: LoadManager) {\r\n        this._manager = mngr;\r\n    }\r\n    get crossOrigin () {\r\n        return this._crossOrigin;\r\n    }\r\n    set crossOrigin (val: string) {\r\n        this._crossOrigin = val;\r\n    }\r\n    abstract async load (url: string, options?: any);\r\n}","import { MaxRectsPacker } from './maxrects-packer';\r\nimport { Texture } from './types';\r\nimport { Renderer } from './renderer'; \r\n\r\nexport interface IAtlasInfo {\r\n    atlasIndex: number;\r\n    width: number;\r\n    height: number;\r\n    uMin: number;\r\n    vMin: number;\r\n    uMax: number;\r\n    vMax: number;\r\n}\r\n\r\nexport class AtlasManager<U extends AtlasManager<any> = AtlasManager<any> > {\r\n    /** @internal */\r\n    protected static readonly ATLAS_WIDTH = 1024;\r\n    /** @internal */\r\n    protected static readonly ATLAS_HEIGHT = 1024;\r\n    /** @internal */\r\n    protected _renderer: Renderer;\r\n    /** @internal */\r\n    protected _packer: MaxRectsPacker;\r\n    /** @internal */\r\n    protected _cachePadding: number;\r\n    /** @internal */\r\n    protected _cacheWidth: number;\r\n    /** @internal */\r\n    protected _cacheHeight: number;\r\n    /** @internal */\r\n    protected _linearSpace: boolean;\r\n    /** @internal */\r\n    protected _atlasList: Texture[];\r\n    /** @internal */\r\n    protected _atlasInfoMap: { [hash:string]: IAtlasInfo };\r\n    constructor (renderer: Renderer, cacheWidth?: number, cacheHeight?: number, cachePadding?: number, linearSpace?: boolean) {\r\n        this._renderer = renderer;\r\n        this._cacheWidth = typeof cacheWidth === 'number' ? (cacheWidth||AtlasManager.ATLAS_WIDTH) : AtlasManager.ATLAS_WIDTH;\r\n        this._cacheHeight = typeof cacheHeight === 'number' ? (cacheHeight||AtlasManager.ATLAS_HEIGHT) : AtlasManager.ATLAS_HEIGHT;\r\n        this._cachePadding = 1; // typeof cachePadding === 'number' ? cachePadding : 2;\r\n        this._linearSpace = !!linearSpace;\r\n        this._packer = new MaxRectsPacker (this._cacheWidth, this._cacheHeight, this._cachePadding, { smart: true, pot: false, square: false, allowRotation: false, tag: false });\r\n        this._atlasList = [];\r\n        this._atlasInfoMap = {};\r\n    }\r\n    getAtlasTexture (index: number): Texture {\r\n        return this._atlasList[index];\r\n    }\r\n    getAtlasInfo (key: string): IAtlasInfo {\r\n        return this._atlasInfoMap[key] || null;\r\n    }\r\n    dispose () {\r\n        for (const tex of this._atlasList) {\r\n            this._renderer.disposeTexture(tex);\r\n        }\r\n        this._atlasList = null;\r\n    }\r\n    pushCanvas (key: string, ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) {\r\n        if (ctx) {\r\n            const rc = this._packer.add (w, h, null);\r\n            if (rc) {\r\n                this._updateAtlasTextureCanvas (this._packer.bins.length - 1, ctx, rc.x, rc.y, rc.width, rc.height, x, y);\r\n                const info: IAtlasInfo = {\r\n                    atlasIndex: this._packer.bins.length - 1,\r\n                    uMin: rc.x / (this._cacheWidth + this._cachePadding),\r\n                    vMin: rc.y / (this._cacheHeight + this._cachePadding),\r\n                    uMax: (rc.x + rc.width) / (this._cacheWidth + this._cachePadding),\r\n                    vMax: (rc.y + rc.height) / (this._cacheHeight + this._cachePadding),\r\n                    width: rc.width,\r\n                    height: rc.height\r\n                }\r\n                this._atlasInfoMap[key] = info;\r\n                return info;\r\n            }\r\n        }\r\n    }\r\n    pushBitmap (key: string, bitmap: ImageData): IAtlasInfo {\r\n        if (bitmap) {\r\n            const rc = this._packer.add (bitmap.width, bitmap.height, null);\r\n            if (rc) {\r\n                this._updateAtlasTexture (this._packer.bins.length - 1, bitmap, rc.x, rc.y, rc.width, rc.height);\r\n                const info: IAtlasInfo = {\r\n                    atlasIndex: this._packer.bins.length - 1,\r\n                    uMin: rc.x / (this._cacheWidth + this._cachePadding),\r\n                    vMin: rc.y / (this._cacheHeight + this._cachePadding),\r\n                    uMax: (rc.x + rc.width) / (this._cacheWidth + this._cachePadding),\r\n                    vMax: (rc.y + rc.height) / (this._cacheHeight + this._cachePadding),\r\n                    width: rc.width,\r\n                    height: rc.height\r\n                }\r\n                this._atlasInfoMap[key] = info;\r\n                return info;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    private _updateAtlasTextureCanvas (atlasIndex: number, bitmap: CanvasRenderingContext2D, x: number, y: number, w: number, h: number, xOffset: number, yOffset: number) {\r\n        let textureAtlas: Texture = null;\r\n        if (atlasIndex === this._atlasList.length) {\r\n            textureAtlas = this._renderer.createTexture (this._cacheWidth + this._cachePadding, this._cacheHeight + this._cachePadding, {x:0,y:0,z:0,w:0}, this._linearSpace);\r\n            this._atlasList.push (textureAtlas);\r\n        } else {\r\n            textureAtlas = this._atlasList[atlasIndex];\r\n        }\r\n        this._renderer.updateTextureWithCanvas (textureAtlas, bitmap.canvas, xOffset, yOffset, w, h, x, y);\r\n    }\r\n    private _updateAtlasTexture (atlasIndex: number, bitmap: ImageData, x: number, y: number, w: number, h: number) {\r\n        let textureAtlas: Texture = null;\r\n        if (atlasIndex === this._atlasList.length) {\r\n            textureAtlas = this._renderer.createTexture (this._cacheWidth + this._cachePadding, this._cacheHeight + this._cachePadding, {x:0,y:0,z:0,w:0}, this._linearSpace);\r\n            this._atlasList.push (textureAtlas);\r\n        } else {\r\n            textureAtlas = this._atlasList[atlasIndex];\r\n        }\r\n        this._renderer.updateTextureWithImage (textureAtlas, bitmap, x, y);\r\n    }\r\n}","import { RMLElement, GUI, tagname, IStyleSheet } from '..';\r\n\r\n@tagname ('button')\r\nexport class Button extends RMLElement<Button> {\r\n    constructor (uiscene: GUI) {\r\n        super (uiscene);\r\n    }\r\n    /** @internal */\r\n    _applyInlineStyles () {\r\n        super._applyInlineStyles ();\r\n    }\r\n    /** @internal */\r\n    _init () {\r\n    }\r\n    /** @internal */\r\n    _getDefaultStyleSheet (): IStyleSheet {\r\n        const style = super._getDefaultStyleSheet ();\r\n        style.flexDirection = 'row';\r\n        style.padding = '2';\r\n        style.justifyContent = 'center';\r\n        style.backgroundColor = '#1074e7';\r\n        return style;\r\n    }\r\n}\r\n","import { assert, RMLRectPrimitive, RMLPrimitiveBatchList, Text, GUI, tagname, Event, ElementLayoutEvent, GUIMouseEvent, RMLElement, IStyleSheet, GUIFocusEvent, TextEvent, Renderer } from '..';\r\n\r\n@tagname ('input')\r\nexport class Input extends RMLElement<Input> {\r\n    private _hiddenInput: HTMLInputElement;\r\n    private _selectionStart: number;\r\n    private _selectionEnd: number;\r\n    private _drawCursor: boolean;\r\n    private _cursorTimer: number;\r\n    private _cursorBatch: RMLPrimitiveBatchList;\r\n    private _text: Text;\r\n    constructor (uiscene: GUI) {\r\n        super (uiscene);\r\n        this._selectionStart = 0;\r\n        this._selectionEnd = 0;\r\n        this._drawCursor = false;\r\n        this._cursorTimer = null;\r\n        this._cursorBatch = null;\r\n        this._text = new Text (this._uiscene);\r\n        this._text._setInternal ();\r\n        this._text.style.backgroundColor = 'transparent';\r\n        this._text.style.flex = '1 0 auto';\r\n        this.appendChild (this._text);\r\n        this._hiddenInput = document.createElement ('input');\r\n        this._hiddenInput.type = 'text';\r\n        this._hiddenInput.style.position = 'absolute';\r\n        this._hiddenInput.style.boxSizing = 'border-box';\r\n        this._hiddenInput.style.opacity = '0';\r\n        this._hiddenInput.style.outline = 'none';\r\n        this._hiddenInput.style.pointerEvents = 'none';\r\n        this._hiddenInput.style.zIndex = '0';\r\n        this._hiddenInput.style.transform = 'scaleY(0)';\r\n        this._hiddenInput.style.transformOrigin = 'top';\r\n        this._updateHiddenInput ();\r\n        this._setHiddenInputSelection (this._selectionStart, this._selectionEnd);\r\n        this._updateCursorVertices ();\r\n        document.body.appendChild (this._hiddenInput);\r\n        this.addEventListener (ElementLayoutEvent.NAME, function (this: Input) {\r\n            this._updateHiddenInput ();\r\n        });\r\n        this.addEventListener (GUIFocusEvent.NAME_FOCUS, function (this: Input) {\r\n            if (this.type === 'text') {\r\n                this._hiddenInput.focus ();\r\n                this._restartCursorTimer ();\r\n            }\r\n        });\r\n        this.addEventListener (GUIFocusEvent.NAME_BLUR, function (this: Input) {\r\n            if (this.type === 'text') {\r\n                this._hiddenInput.blur ();\r\n                this._stopCursorTimer ();\r\n                this._drawCursor = false;\r\n            }\r\n        });\r\n        this.addEventListener (GUIMouseEvent.NAME_MOUSEDOWN, function (this: Input, e: Event) {\r\n            const data = e as GUIMouseEvent;\r\n            if (data.button === 1) {\r\n                if (this.type === 'text') {\r\n                    this._hiddenInput.focus ();\r\n                    const loc = this._text.measureTextLocation (data.x - this.getClientRect().x - this._text.getRect().x, data.y - this.getClientRect().y - this._text.getRect().y);\r\n                    if (loc) {\r\n                        assert (loc.line === 0);\r\n                        this._selectionStart = loc.pos;\r\n                        this._selectionEnd = loc.pos;\r\n                        this._updateCursorVertices ();\r\n                        this._setHiddenInputCaretPosition (loc.pos);\r\n                    }\r\n                } else if (this.type === 'color') {\r\n                    const evt = new MouseEvent ('click', {\r\n                        bubbles: true,\r\n                        cancelable: true,\r\n                        view: window\r\n                    });\r\n                    this._hiddenInput.dispatchEvent (evt);\r\n                }\r\n            }\r\n        });\r\n        this.addEventListener (TextEvent.NAME_CONTENT_CHANGE, function (this: Input, e: Event) {\r\n            const data = e as TextEvent;\r\n            if (this._hiddenInput.value !== this.textContent && this.type === 'text') {\r\n                this._hiddenInput.value = this.textContent;\r\n                this._selectionStart = Math.min (this._selectionStart, this.textContent.length);\r\n                this._selectionEnd = Math.max (this._selectionStart, Math.min (this._selectionEnd, this.textContent.length));\r\n                this._setHiddenInputSelection (this._selectionStart, this._selectionEnd);\r\n                this._updateCursorVertices ();\r\n            }\r\n        });\r\n        this.addEventListener (TextEvent.NAME_FONT_CHANGE, function (this: Input) {\r\n            that._updateHiddenInput ();\r\n        });\r\n        const that = this;\r\n        this._hiddenInput.addEventListener ('keydown', function() {\r\n            if (this.type === 'text') {\r\n                setTimeout (function() {\r\n                    const lastSelection = that._selectionStart;\r\n                    that._selectionStart = that._hiddenInput.selectionStart;\r\n                    that._selectionEnd = that._hiddenInput.selectionEnd;\r\n                    if (that._selectionStart !== lastSelection) {\r\n                        that._updateCursorVertices ();\r\n                        that._drawCursor = true;\r\n                    }\r\n                }, 0);\r\n            }\r\n        });\r\n        this._hiddenInput.addEventListener ('input', function () {\r\n            that._oninput ();\r\n        });\r\n        // this._restartCursorTimer ();\r\n    }\r\n    private _oninput () {\r\n        if (this.type === 'text') {\r\n            this._text.textContent = this._hiddenInput.value;\r\n            this._selectionStart = this._hiddenInput.selectionStart;\r\n            this._selectionEnd = this._hiddenInput.selectionEnd;\r\n            this._updateCursorVertices ();\r\n        } else if (this.type === 'color') {\r\n            this._text.style.backgroundColor = this._hiddenInput.value;\r\n        }\r\n    }\r\n    protected _draw (renderer: Renderer) {\r\n        super._draw (renderer);\r\n        if (this._drawCursor && this._cursorBatch) {\r\n            this._uiscene._drawBatchList (this._cursorBatch);\r\n        }\r\n    }\r\n    get type(): string {\r\n        return this.getAttribute ('type') || 'text';\r\n    }\r\n    set type(val: string) {\r\n        if (val !== this.type) {\r\n            if (val === 'text' || val === 'color') {\r\n                this.setAttribute ('type', val);\r\n                this._hiddenInput.type = val;\r\n                if (val === 'text') {\r\n                    this._text.textContent = this._hiddenInput.value;\r\n                    this._text.style.backgroundColor = 'transparent';\r\n                    this._selectionStart = 0;\r\n                    this._selectionEnd = 0;\r\n                    this.style.cursor = 'text';\r\n                    if (this === this._uiscene.getFocus()) {\r\n                        this._uiscene.setFocus (null);\r\n                    }\r\n                    this._invalidateContent ();\r\n                } else {\r\n                    this._stopCursorTimer ();\r\n                    this._drawCursor = false;\r\n                    this.style.cursor = 'default';\r\n                    if (val === 'color') {\r\n                        this._text.textContent = '';\r\n                        this._text.style.backgroundColor = this._hiddenInput.value;\r\n                    }\r\n                }\r\n            }\r\n            this._updateHiddenInput ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    _init (): void {\r\n    }\r\n    /** @internal */\r\n    _getDefaultStyleSheet (): IStyleSheet {\r\n        const style = super._getDefaultStyleSheet ();\r\n        style.width = '150px';\r\n        style.height = 'auto';\r\n        style.cursor = 'text';\r\n        style.color = '#000000';\r\n        style.padding = '5';\r\n        style.justifyContent = 'flex-start';\r\n        style.backgroundColor = '#fff';\r\n        style.borderWidth = '1px';\r\n        style.borderColor = '#000';\r\n        style.overflow = 'hidden';\r\n        return style;\r\n    }\r\n    /** @internal */\r\n    _updateHiddenInput () {\r\n        let el: any = this._uiscene.renderer.getCanvas();\r\n        let v = this.toAbsolute({ x:0, y:0 });\r\n        let t = v.y + this.getRect().height;\r\n        let l = v.x;\r\n        if (el instanceof HTMLCanvasElement) {\r\n            t += el.offsetTop;\r\n            l += el.offsetLeft;\r\n            while (el = el.offsetParent) {\r\n                t += el.offsetTop;\r\n                l += el.offsetLeft;\r\n            }\r\n        }\r\n        if (this.type === 'color') {\r\n            t -= this.getRect().height;\r\n            this._hiddenInput.style.transform = '';\r\n            this._hiddenInput.style.pointerEvents = 'auto';\r\n        } else {\r\n            this._hiddenInput.style.transform = 'scaleY(0)';\r\n            this._hiddenInput.style.pointerEvents = 'none';\r\n        }\r\n        this._hiddenInput.style.left = `${l}px`;\r\n        this._hiddenInput.style.top = `${t}px`;\r\n        this._hiddenInput.style.width = `${this.getRect().width}px`;\r\n        this._hiddenInput.style.height = `${this.getRect().height}px`;\r\n        this._hiddenInput.style.font = `${this._getCachedFont().size}px ${this._getCachedFont().family}`;\r\n    }\r\n    protected _buildVertexData () {\r\n        super._buildVertexData ();\r\n        this._updateCursorVertices ();\r\n    }\r\n    private _setHiddenInputSelection (start: number, end: number) {\r\n        if (this._hiddenInput.setSelectionRange) {\r\n            this._hiddenInput.focus ();\r\n            this._hiddenInput.selectionStart = start;\r\n            this._hiddenInput.selectionEnd = end;\r\n        } else {\r\n            const ieInput = this._hiddenInput as any;\r\n            if (ieInput.createTextRange) {\r\n                const range = ieInput.createTextRange();\r\n                range.collapse (true);\r\n                range.moveEnd ('character', start);\r\n                range.moveStart ('character', end);\r\n                range.select ();\r\n            }\r\n        }\r\n    }\r\n    private _setHiddenInputCaretPosition (pos: number) {\r\n        this._setHiddenInputSelection (pos, pos);\r\n    }\r\n    private _calcCursorPos (pos: number): number {\r\n        let x = this.style.getPaddingLeft();\r\n        for (let i = 0; i < pos; i++) {\r\n            const glyph = this._uiscene._getGlyphInfo (this._text.textContent[i], this._getCachedFont());\r\n            if (glyph) {\r\n                x += glyph.width + this._text.charMargin;\r\n            }\r\n        }\r\n        return x;\r\n    }\r\n    private _updateCursorVertices () {\r\n        const clipper = this._getClipper (true);\r\n        if (clipper) {\r\n            const x = this._calcCursorPos (this._selectionStart);\r\n            const v = this.toAbsolute ({ x:0, y:0 });\r\n            this._cursorBatch = new RMLPrimitiveBatchList (v.x, v.y);\r\n            this._cursorBatch.addPrimitive (new RMLRectPrimitive(x, this.style.getPaddingTop() - 2, 1, this._getCachedFont().size + 4, 0, 0, 0, 0), clipper, null, this._getCachedFontColor());\r\n            // this._restartCursorTimer ();\r\n        }\r\n    }\r\n    private _stopCursorTimer () {\r\n        if (this._cursorTimer) {\r\n            window.clearInterval (this._cursorTimer);\r\n            this._cursorTimer = null;\r\n        }\r\n    }\r\n    private _restartCursorTimer () {\r\n        this._stopCursorTimer ();\r\n        this._drawCursor = true;\r\n        this._cursorTimer = window.setInterval (() => {\r\n            this._drawCursor = !this._drawCursor;\r\n        }, 500);\r\n    }\r\n}","import { GUI, tagname, Button, Slider, IStyleSheet, Event, GUIMouseEvent } from '..';\r\n\r\n@tagname ('scrollbar')\r\nexport class ScrollBar extends Slider {\r\n    private _buttonUp: Button;\r\n    private _buttonDown: Button;\r\n    constructor (uiscene: GUI) {\r\n        super (uiscene);\r\n        this._buttonUp = new Button (uiscene);\r\n        this._buttonUp._setInternal ();\r\n        this.appendChild (this._buttonUp);\r\n        this._buttonUp.addEventListener (GUIMouseEvent.NAME_MOUSECLICK, () => {\r\n            this.value -= this.stepValue;\r\n        });\r\n        this._buttonDown = new Button (uiscene);\r\n        this._buttonDown._setInternal ();\r\n        this.appendChild (this._buttonDown);\r\n        this._buttonDown.addEventListener (GUIMouseEvent.NAME_MOUSECLICK, () => {\r\n            this.value += this.stepValue;\r\n        });\r\n        this._updateOrientationStyle ();\r\n    }\r\n    get buttonSize (): number {\r\n        return this._getNumberAttribute ('buttonSize', 8);\r\n    }\r\n    set buttonSize (val: number) {\r\n        this._setNumberAttribute ('buttonSize', val);\r\n    }\r\n    /** @internal */\r\n    _init (): void {\r\n    }\r\n    /** @internal */\r\n    _getDefaultStyleSheet (): IStyleSheet {\r\n        const style = super._getDefaultStyleSheet ();\r\n        style.overflow = 'visible';\r\n        if (this.orientation === 'vertical') {\r\n            style.paddingTop = String(this.buttonSize);\r\n            style.paddingBottom = String(this.buttonSize);\r\n        } else {\r\n            style.paddingLeft = String(this.buttonSize);\r\n            style.paddingRight = String(this.buttonSize);\r\n        }\r\n        return style;\r\n    }\r\n    protected _onAttributeChange (name: string) {\r\n        super._onAttributeChange (name);\r\n        if (name === 'rangeStart' || name === 'rangeEnd') {\r\n            this._invalidateLayout ();\r\n        } else if (name === 'buttonSize' || name === 'orientation') {\r\n            if (name === 'orientation') {\r\n                this._updateOrientationStyle ();\r\n            }\r\n            this._invalidateLayout ();\r\n        }\r\n}\r\n    protected _updateScrollState (): void {\r\n    }\r\n    private _updateOrientationStyle () {\r\n        const vertical = this.orientation === 'vertical';\r\n        this._buttonUp.setAttribute ('style', vertical \r\n            ? `position:absolute;left:0;right:0;top:0;height:${this.buttonSize};background-image:default.scrollbar.up` \r\n            : `position:absolute;left:0;top:0;bottom:0;width:${this.buttonSize};background-image:default.scrollbar.left`);\r\n        this._buttonDown.setAttribute ('style', vertical \r\n            ? `position:absolute;left:0;right:0;bottom:0;height:${this.buttonSize};background-image:default.scrollbar.down;` \r\n            : `position:absolute;right:0;top:0;bottom:0;width:${this.buttonSize};background-image:default.scrollbar.right`);\r\n        this._invalidateLayout ();\r\n        this._uiscene._markStyleRefreshForElement (this);\r\n    }\r\n}","import { Text, GUI, tagname, ElementLayoutEvent, RMLNode, RMLElement, IStyleSheet, Event, TextEvent, Vec2 } from '..';\r\n\r\n@tagname ('option')\r\nexport class Option extends RMLElement<Option> {\r\n    private _hiddenOption: HTMLOptionElement;\r\n    constructor (uiscene: GUI) {\r\n        super (uiscene);\r\n        this._hiddenOption = document.createElement ('option');\r\n    }\r\n    /** @internal */\r\n    _getHiddenOption (): HTMLOptionElement {\r\n        return this._hiddenOption;\r\n    }\r\n    /** @internal */\r\n    _getDefaultStyleSheet (): IStyleSheet {\r\n        const style = super._getDefaultStyleSheet ();\r\n        style.width = '0px';\r\n        style.height = '0px';\r\n        style.backgroundColor = 'transparent';\r\n        style.display = 'none';\r\n        return style;\r\n    }\r\n    setAttribute (k: string, v?: string) {\r\n        this._hiddenOption.setAttribute (k, v || '');\r\n        super.setAttribute (k, v);\r\n    }\r\n    /** @internal */\r\n    _reparent (p: RMLNode, at?: RMLNode): RMLNode {\r\n        const ret = super._reparent (p, at);\r\n        if (p.nodeType === RMLNode.ELEMENT_NODE && (p as RMLElement).tagName === 'select') {\r\n            let nextOption: RMLNode;\r\n            for (nextOption = this._getNextSibling(true); nextOption && (nextOption as RMLElement).tagName !== 'option'; nextOption = nextOption._getNextSibling(true))\r\n                ;\r\n            if (nextOption) {\r\n                (p as Select)._getHiddenInput().insertBefore (this._hiddenOption, (nextOption as Option)._getHiddenOption());\r\n            } else {\r\n                (p as Select)._getHiddenInput().appendChild (this._hiddenOption);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    /** @internal */\r\n    protected _remove (): RMLNode {\r\n        if (this._parent && this._parent.nodeType === RMLNode.ELEMENT_NODE && (this._parent as RMLElement).tagName === 'select') {\r\n            (this._parent as Select)._getHiddenInput().removeChild (this._hiddenOption);\r\n        }\r\n        return super._remove ();\r\n    }\r\n    /** @internal */\r\n    _insertChild (child: RMLNode, index: number) {\r\n        super._insertChild (child, index);\r\n        this._hiddenOption.textContent = this.textContent;\r\n    }\r\n    /** @internal */\r\n    _removeChild (index: number) {\r\n        super._removeChild (index);\r\n        this._hiddenOption.textContent = this.textContent;\r\n    }\r\n}\r\n\r\n@tagname ('select')\r\nexport class Select extends RMLElement<Select> {\r\n    private _hiddenInput: HTMLSelectElement;\r\n    private _text: Text;\r\n    constructor (uiscene: GUI) {\r\n        super (uiscene);\r\n        this._text = new Text (this._uiscene);\r\n        this._text._setInternal ();\r\n        this._text.style.backgroundColor = 'transparent';\r\n        this._text.style.flex = '1 0 auto';\r\n        this.appendChild (this._text);\r\n        this._hiddenInput = document.createElement ('select');\r\n        this._hiddenInput.style.position = 'absolute';\r\n        this._hiddenInput.style.boxSizing = 'border-box';\r\n        this._hiddenInput.style.opacity = '0';\r\n        this._hiddenInput.style.outline = 'none';\r\n        this._hiddenInput.style.pointerEvents = 'none';\r\n        this._hiddenInput.style.zIndex = '0';\r\n        this._hiddenInput.style.transform = 'scaleY(0)';\r\n        this._hiddenInput.style.transformOrigin = 'top';\r\n        this._updateHiddenInput ();\r\n        document.body.appendChild (this._hiddenInput);\r\n        this.addEventListener (ElementLayoutEvent.NAME, function (this: Select, evt: Event) {\r\n            this._updateHiddenInput ();\r\n        });\r\n        this.addEventListener (TextEvent.NAME_FONT_CHANGE, function (this: Select, evt: Event) {\r\n            that._updateHiddenInput ();\r\n        });\r\n        const that = this;\r\n        this._hiddenInput.addEventListener ('input', function () {\r\n            that._oninput ();\r\n        });\r\n    }\r\n    private _oninput () {\r\n        this._text.textContent = this._hiddenInput.options[this._hiddenInput.selectedIndex].textContent;\r\n    }\r\n    /** @internal */\r\n    _init (): void {\r\n    }\r\n    /** @internal */\r\n    _getDefaultStyleSheet (): IStyleSheet {\r\n        const style = super._getDefaultStyleSheet ();\r\n        style.width = '150px';\r\n        style.height = 'auto';\r\n        style.color = '#000000';\r\n        style.padding = '5';\r\n        style.justifyContent = 'flex-start';\r\n        style.backgroundColor = '#fff';\r\n        style.borderWidth = '1px';\r\n        style.borderColor = '#000';\r\n        style.overflow = 'hidden';\r\n        return style;\r\n    }\r\n    /** @internal */\r\n    _getHiddenInput (): HTMLSelectElement {\r\n        return this._hiddenInput;\r\n    }\r\n    /** @internal */\r\n    _updateHiddenInput () {\r\n        let el: any = this._uiscene.renderer.getCanvas();\r\n        let v = this.toAbsolute({x:0, y:0});\r\n        let t = v.y;\r\n        let l = v.x;\r\n        if (el instanceof HTMLCanvasElement) {\r\n            t += el.offsetTop;\r\n            l += el.offsetLeft;\r\n            while (el = el.offsetParent) {\r\n                t += el.offsetTop;\r\n                l += el.offsetLeft;\r\n            }\r\n        }\r\n        this._hiddenInput.style.transform = '';\r\n        this._hiddenInput.style.pointerEvents = 'auto';\r\n        this._hiddenInput.style.left = `${l}px`;\r\n        this._hiddenInput.style.top = `${t}px`;\r\n        this._hiddenInput.style.width = `${this.getRect().width}px`;\r\n        this._hiddenInput.style.height = `${this.getRect().height}px`;\r\n        this._hiddenInput.style.font = `${this._getCachedFont().size}px ${this._getCachedFont().family}`;\r\n    }\r\n    /** @internal */\r\n    _insertChild (child: RMLNode, index: number) {\r\n        super._insertChild (child, index);\r\n        this._text.textContent = this._hiddenInput?.options ? this._hiddenInput.options[this._hiddenInput.selectedIndex]?.textContent : '';\r\n    }\r\n    /** @internal */\r\n    _removeChild (index: number) {\r\n        super._removeChild (index);\r\n        this._text.textContent = this._hiddenInput?.options ? this._hiddenInput.options[this._hiddenInput.selectedIndex]?.textContent : '';\r\n    }\r\n}","import { RMLRectPrimitive, RMLElement, GUI, tagname, AttributeChangeEvent, IStyleSheet, Event, GUIMouseEvent, ValueChangeEvent, ElementLayoutEvent, UIRect, Vec4 } from '..';\r\n\r\n@tagname ('slider')\r\nexport class Slider extends RMLElement<Slider> {\r\n    /** @internal */\r\n    protected _blockRect: UIRect;\r\n    /** @internal */\r\n    protected _lastX: number;\r\n    /** @internal */\r\n    protected _lastY: number;\r\n    /** @internal */\r\n    protected _lastRectX: number;\r\n    /** @internal */\r\n    protected _lastRectY: number;\r\n    /** @internal */\r\n    protected _blockPos: number;\r\n    /** @internal */\r\n    protected _draggingBlock: boolean;\r\n    /** @internal */\r\n    protected _blockColor: Vec4;\r\n    constructor (uiscene: GUI) {\r\n        super (uiscene);\r\n        this._blockRect = null;\r\n        this._lastX = 0;\r\n        this._lastY = 0;\r\n        this._lastRectX = 0;\r\n        this._lastRectY = 0;\r\n        this._draggingBlock = false;\r\n        this._blockPos = 0;\r\n        this._blockColor = this.style.parseColor ('#555555');\r\n        this.addEventListener (GUIMouseEvent.NAME_MOUSEDOWN, function (this: Slider, evt:Event) {\r\n            const data: GUIMouseEvent = evt as GUIMouseEvent;\r\n            if (data.button === 1 // left button \r\n                && !this._draggingBlock \r\n                && this._blockRect \r\n                && data.x >= this._blockRect.x \r\n                && data.y >= this._blockRect.y \r\n                && data.x < this._blockRect.x + this._blockRect.width \r\n                && data.y < this._blockRect.y + this._blockRect.height) {\r\n                this.setCapture ();\r\n                this._lastX = data.x;\r\n                this._lastY = data.y;\r\n                this._lastRectX = this._blockRect.x;\r\n                this._lastRectY = this._blockRect.y;\r\n                this._draggingBlock = true;\r\n            }\r\n        });\r\n        this.addEventListener (GUIMouseEvent.NAME_MOUSEUP, function (this: Slider, evt: Event) {\r\n            const data: GUIMouseEvent = evt as GUIMouseEvent;\r\n            if (data.button === 1 && this._draggingBlock) {\r\n                this.releaseCapture ();\r\n                this._draggingBlock = false;\r\n            }\r\n        });\r\n        this.addEventListener (GUIMouseEvent.NAME_MOUSEMOVE, function (this: Slider, evt: Event) {\r\n            const data: GUIMouseEvent = evt as GUIMouseEvent;\r\n            if (this._draggingBlock && this._blockRect) {\r\n                const isVertical = this.orientation === 'vertical';\r\n                const clientRect = this.getClientRect ();\r\n                const mx = data.x;\r\n                const my = data.y;\r\n                let ratio: number;\r\n                if (isVertical) {\r\n                    const freeSpace = clientRect.height - this.blockSize;\r\n                    this._blockRect.y = Math.max (clientRect.y, Math.min (clientRect.y + freeSpace, this._lastRectY + my - this._lastY));\r\n                    ratio = (this._blockRect.y - clientRect.y) / freeSpace;\r\n                } else {\r\n                    const freeSpace = clientRect.width - this.blockSize;\r\n                    this._blockRect.x = Math.max (clientRect.x, Math.min (clientRect.x + freeSpace, this._lastRectX + mx - this._lastX));\r\n                    ratio = (this._blockRect.x - clientRect.x) / freeSpace;\r\n                }\r\n                this.value = Math.floor (this.rangeStart + (this.rangeEnd - this.rangeStart) * ratio);\r\n                const blockPos = isVertical ? this._blockRect.y - clientRect.y : this._blockRect.x - clientRect.x;\r\n                if (blockPos !== this._blockPos) {\r\n                    this._blockPos = blockPos;\r\n                    this._invalidateContent ();\r\n                }\r\n            }\r\n        });\r\n        this.addEventListener (ElementLayoutEvent.NAME, (evt: Event) => {\r\n            this._blockPos = this._computeBlockPos ();\r\n        });\r\n        this.addEventListener (AttributeChangeEvent.NAME, (evt: Event) => {\r\n            const data: AttributeChangeEvent = evt as AttributeChangeEvent;\r\n            this._onAttributeChange (data.name);\r\n        });\r\n    }\r\n    get value (): number {\r\n        return this._getNumberAttribute ('value', 0);\r\n    }\r\n    set value (val: number) {\r\n        const oldVal = this.value;\r\n        this._setNumberAttribute ('value', val);\r\n        val = Math.max (this.rangeStart, Math.min(this.rangeEnd, this.value));\r\n        if (this.value !== oldVal) {\r\n            this._blockPos = this._computeBlockPos ();\r\n            this._invalidateContent ();\r\n            this.dispatchEvent (new ValueChangeEvent(this.value));\r\n        }\r\n    }\r\n    get rangeStart (): number {\r\n        return this._getNumberAttribute ('rangeStart', 0);\r\n    }\r\n    set rangeStart (val: number) {\r\n        this._setNumberAttribute ('rangeStart', val);\r\n    }\r\n    get rangeEnd (): number {\r\n        return this._getNumberAttribute ('rangeEnd', 100);\r\n    }\r\n    set rangeEnd (val: number) {\r\n        this._setNumberAttribute ('rangeEnd', val);\r\n    }\r\n    get blockSize (): number {\r\n        return this._getNumberAttribute ('blockSize', 8);\r\n    }\r\n    set blockSize (val: number) {\r\n        this._setNumberAttribute ('blockSize', val);\r\n    }\r\n    get stepValue (): number {\r\n        return this._getNumberAttribute ('stepValue', 1);\r\n    }\r\n    set stepValue (val: number) {\r\n        this._setNumberAttribute ('stepValue', val);\r\n    }\r\n    get pageValue (): number {\r\n        return this._getNumberAttribute ('pageValue', 10);\r\n    }\r\n    set pageValue (val: number) {\r\n        this._setNumberAttribute ('pageValue', val);\r\n    }\r\n    get orientation (): string {\r\n        return this._getStringAttribute ('orientation', 'vertical');\r\n    }\r\n    set orientation (val: string) {\r\n        this._setStringAttribute ('orientation', val);\r\n    }\r\n    get blockColor (): string {\r\n        return this._getStringAttribute ('blockColor', '#555555');\r\n    }\r\n    set blockColor (val: string) {\r\n        this._setStringAttribute ('blockColor', val);\r\n        this._blockColor = this.style.parseColor (this.blockColor) || this.style.parseColor ('#555555');\r\n        this._invalidateContent ();\r\n    }\r\n    get blockImage (): string {\r\n        return this._getStringAttribute ('blockImage', '');\r\n    }\r\n    set blockImage (val: string) {\r\n        this._setStringAttribute ('blockImage', val);\r\n        this._invalidateContent ();\r\n    }\r\n    /** @internal */\r\n    protected _onAttributeChange (name: string) {\r\n        if (name === 'rangeStart' || name === 'rangeEnd') {\r\n            this._blockPos = this._computeBlockPos ();\r\n            this._invalidateContent ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    protected _buildBlockVertexData () {\r\n        const clipper = this._getClipper (false);\r\n        if (clipper) {\r\n            const blockColor = this._blockColor;\r\n            const blockImage = this.blockImage ? this._uiscene.imageManager.getImage(this.blockImage) : null;\r\n            const uvMin = blockImage?.uvMin || null;\r\n            const uvMax = blockImage?.uvMax || null;\r\n            this._batchList.addPrimitive (new RMLRectPrimitive(\r\n                this._blockRect.x, \r\n                this._blockRect.y, \r\n                this._blockRect.width, \r\n                this._blockRect.height, \r\n                uvMin?.x || 0,\r\n                uvMin?.y || 0,\r\n                uvMax?.x || 0,\r\n                uvMax?.y || 0),\r\n            clipper,\r\n            blockImage?.texture || null,\r\n            blockColor);\r\n        }\r\n    }\r\n    /** @internal */\r\n    protected _computeBlockPos () {\r\n        const isVertical = this.orientation === 'vertical';\r\n        const rangeMin = this.rangeStart < this.rangeEnd ? this.rangeStart : this.rangeEnd;\r\n        const rangeMax = this.rangeStart < this.rangeEnd ? this.rangeEnd : this.rangeStart;\r\n        const value = Math.max (Math.min (this.value, rangeMax), rangeMin);\r\n        const clientRect = this._layout.clientRect;\r\n        const freeSpace = (isVertical ? clientRect.height : clientRect.width) - this.blockSize;\r\n        if (freeSpace < 0) {\r\n            return -1;\r\n        }\r\n        return Math.floor(freeSpace * (value - this.rangeStart) / (this.rangeEnd - this.rangeStart));\r\n    }\r\n    /** @internal */\r\n    protected _buildVertexData () {\r\n        super._buildVertexData ();\r\n        if (this.rangeStart === this.rangeEnd) {\r\n            this._blockRect = null;\r\n            return;\r\n        }\r\n        const blockSize = Math.floor (this.blockSize);\r\n        if (blockSize <= 0) {\r\n            this._blockRect = null;\r\n            return;\r\n        }\r\n        const isVertical = this.orientation === 'vertical';\r\n        const clientRect = this.getClientRect ();\r\n        const freeSpace = (isVertical ? clientRect.height : clientRect.width) - this.blockSize;\r\n        if (freeSpace < 0) {\r\n            this._blockRect = null;\r\n            return;\r\n        }\r\n        this._blockRect = {\r\n            x: isVertical ? clientRect.x : clientRect.x + this._blockPos,\r\n            y: isVertical ? clientRect.y + this._blockPos : clientRect.y,\r\n            width: isVertical ? clientRect.width : blockSize,\r\n            height: isVertical ? blockSize : clientRect.height\r\n        };\r\n        this._buildBlockVertexData ();\r\n    }\r\n    /** @internal */\r\n    _init (): void {\r\n    }\r\n    /** @internal */\r\n    _getDefaultStyleSheet (): IStyleSheet {\r\n        const style = super._getDefaultStyleSheet ();\r\n        style.padding = '0';\r\n        style.backgroundColor = '#ffffff';\r\n        return style;\r\n    }\r\n}","import { RMLRectPrimitive, RMLNode, GUI, IStyleSheet, UIRect, TextEvent, AttributeChangeEvent, assert, Vec2, Event } from '..';\r\n\r\nexport class Text<U extends Text<any> = Text<any> > extends RMLNode<U> {\r\n    private _actualContent: string;\r\n    private _textContent: string;\r\n    private _autoWrap: boolean;\r\n    private _charMargin: number;\r\n    private _lineHeight: number;\r\n    private _inlineStyle: string;\r\n    constructor (uiscene: GUI) {\r\n        super (uiscene);\r\n        this._actualContent = '';\r\n        this._textContent = '';\r\n        this._autoWrap = false;\r\n        this._charMargin = 0;\r\n        this._lineHeight = -1;\r\n        this._inlineStyle = '';\r\n        this.addEventListener (AttributeChangeEvent.NAME, function (this: Text<U>, evt: Event) {\r\n            const e: AttributeChangeEvent = evt as AttributeChangeEvent;\r\n            if (e.name === 'autoWrap' || e.name === 'charMargin' || e.name === 'lineHeight') {\r\n                this._invalidateLayout ();\r\n                this._invalidateContent ();\r\n            }\r\n        });\r\n    }\r\n    get nodeType (): number {\r\n        return RMLNode.TEXT_NODE;\r\n    }\r\n    cloneNode (deep: boolean): RMLNode {\r\n        const clone = new Text (this._uiscene);\r\n        clone.textContent = this.textContent;\r\n        return clone;\r\n    }\r\n    /** @internal */\r\n    get actualContent (): string {\r\n        return this._actualContent;\r\n    }\r\n    /** @internal */\r\n    set actualContent (text: string) {\r\n        text = String(text) || '';\r\n        if (this._actualContent !== text) {\r\n            this._actualContent = text;\r\n            this._invalidateLayout ();\r\n            this._invalidateContent ();\r\n            this.dispatchEvent (new TextEvent(TextEvent.NAME_CONTENT_CHANGE));\r\n        }\r\n    }\r\n    get textContent (): string {\r\n        return this._textContent;\r\n    }\r\n    set textContent (text: string) {\r\n        text = String(text) || '';\r\n        if (this._textContent !== text) {\r\n            this._textContent = text;\r\n            if (this._isText()) {\r\n                this._findFirstTextNode ()._styleChange ();\r\n            } else {\r\n                this.actualContent = text;\r\n            }\r\n            if (this._parent) {\r\n                this._parent._notifyTextContentEvents ();\r\n            }\r\n        }\r\n    }\r\n    get autoWrap (): boolean {\r\n        return this._autoWrap;\r\n    }\r\n    set autoWrap (val: boolean) {\r\n        this._autoWrap = !!val;\r\n    }\r\n    get charMargin (): number {\r\n        return this._charMargin;\r\n    }\r\n    set charMargin (val: number) {\r\n        this._charMargin = Number(val);\r\n    }\r\n    // FIXME: lineHeight is style\r\n    get lineHeight (): number {\r\n        return this._lineHeight;\r\n    }\r\n    set lineHeight (val: number) {\r\n        this._lineHeight = val <= 0 ? -1 : val;\r\n    }\r\n    /** @internal */\r\n    _updateStyle (val: string) {\r\n        super._updateStyle (val);\r\n        this._inlineStyle = val;\r\n    }\r\n    /** @internal */\r\n    _applyInlineStyles () {\r\n        this.style.applyStyles (this._inlineStyle, true);\r\n    }\r\n    /** @internal */\r\n    _getDefaultStyleSheet (): IStyleSheet {\r\n        const style = super._getDefaultStyleSheet ();\r\n        style.backgroundColor = 'transparent';\r\n        style.flex = '0 0 auto';\r\n        style.display = this._findFirstTextNode() === this ? 'flex' : 'none';\r\n        return style;\r\n    }\r\n    /** @internal */\r\n    measureTextLocation (px: number, py: number): { line: number, pos: number } {\r\n        const lines = this._splitContent ();\r\n        const font = this._getCachedFont();\r\n        const lineHeight = (this.lineHeight >= 0 ? this.lineHeight : -this.lineHeight * font.maxHeight)|0;\r\n        const charMargin = this.charMargin;\r\n        const l = Math.floor((py - this.style.getPaddingTop()) / lineHeight);\r\n        if (l < 0 || l >= lines.length) {\r\n            return null;\r\n        }\r\n        let t = this.style.getPaddingLeft();\r\n        let c = 0;\r\n        for (let i = 0; i < l; i++) {\r\n            c += lines[i].length;\r\n        }\r\n        for (let i = 0; i < lines[l].length; i++) {\r\n            const glyph = this._uiscene._getGlyphInfo (lines[l][i], font);\r\n            if (glyph) {\r\n                if (px <= t + (glyph.width >> 1)) {\r\n                    break;\r\n                }\r\n                t += glyph.width + charMargin;\r\n                c++;\r\n            }\r\n        }\r\n        return { line: l, pos: c };\r\n    }\r\n    /** @internal */\r\n    _measureContentSize (rc: UIRect): UIRect {\r\n        const lines = this._splitContent ();\r\n        const font = this._getCachedFont();\r\n        const lineHeight = (this.lineHeight >= 0 ? this.lineHeight : -this.lineHeight * font.maxHeight)|0;\r\n        const charMargin = this.charMargin;\r\n        const autoWrap = this.autoWrap;\r\n        if (rc.width === 0 && rc.height === 0) {\r\n            for (const line of lines) {\r\n                rc.width = Math.max (rc.width, this._uiscene._measureStringWidth(line, charMargin, font));\r\n                rc.height += lineHeight;\r\n            }\r\n        } else if (rc.height === 0) {\r\n            for (const line of lines) {\r\n                let start = 0;\r\n                if (line.length === 0) {\r\n                    rc.height += lineHeight;\r\n                } else {\r\n                    while (start < line.length) {\r\n                        start += autoWrap ? Math.max(1, this._uiscene._clipStringToWidth (line, rc.width, charMargin, start, font)) : line.length;\r\n                        rc.height += lineHeight;\r\n                    }\r\n                }\r\n            }\r\n        } else if (rc.width === 0) {\r\n            for (const line of lines) {\r\n                rc.width = Math.max (rc.width, this._uiscene._measureStringWidth(line, charMargin, font));\r\n            }\r\n        }\r\n        return rc;\r\n    }\r\n    /** @internal */\r\n    _isText (): boolean {\r\n        return true;\r\n    }\r\n    /** @internal */\r\n    _normalize (): RMLNode {\r\n        assert (!this.previousSibling || !this.previousSibling._isText(), 'Failed to execute _normalize: text node must be the first', true);\r\n        this._textContent = this._actualContent;\r\n        const textSiblings: RMLNode[] = [];\r\n        let next = this.nextSibling;\r\n        while (next && next._isText()) {\r\n            textSiblings.push (next);\r\n            next = next.nextSibling;\r\n        }\r\n        for (const sibling of textSiblings) {\r\n            this.parentNode.removeChild (sibling);\r\n        }\r\n        if (!this._textContent) {\r\n            this._remove ();\r\n        }\r\n        return next;\r\n    }\r\n    /** @internal */\r\n    _remove (): RMLNode {\r\n        const parent = this._parent;\r\n        if (this._isText()) {\r\n            const first = this._findFirstTextNode ();\r\n            const next = this.nextSibling;\r\n            const nextTextNode: Text = next && next._isText() ? next as Text : null;\r\n            super._remove ();\r\n            if (first !== this) {\r\n                first._styleChange ();\r\n            } else if (nextTextNode) {\r\n                nextTextNode._styleChange ();\r\n            }\r\n        } else {\r\n            super._remove ();\r\n        }\r\n        if (parent) {\r\n            parent._notifyTextContentEvents ();\r\n        }\r\n        return this;\r\n    }\r\n    /** @internal */\r\n    _init (): void {\r\n    }\r\n    /** @internal */\r\n    _reparent (p: RMLNode, at?: RMLNode): RMLNode {\r\n        if (this._parent !== p) {\r\n            super._reparent (p, at);\r\n            if (this._isText() && this._getPseudo() === RMLNode.PSEUDO_NONE) {\r\n                const first = this._findFirstTextNode ();\r\n                first._styleChange ();\r\n                if (first !== this) {\r\n                    this.style.display = 'none';\r\n                }\r\n                const next = this.nextSibling;\r\n                if (next && next._isText() && next._getPseudo() === RMLNode.PSEUDO_NONE) {\r\n                    next.style.display = 'none';\r\n                }\r\n            }\r\n            if (this._parent) {\r\n                this._parent._notifyTextContentEvents ();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /** @internal */\r\n    protected _buildVertexData () {\r\n        super._buildVertexData ();\r\n        const clipper = this._getClipper (true);\r\n        if (clipper) {\r\n            const lines = this._splitContent ();\r\n            const font = this._getCachedFont ();\r\n            const lineHeight = (this.lineHeight >= 0 ? this.lineHeight : -this.lineHeight * font.maxHeight)|0;\r\n            const autoWrap = this.autoWrap;\r\n            const charMargin = this.charMargin;\r\n            const fontColor = this._getCachedFontColor ();\r\n            const uvMin = { x:0, y:0 };\r\n            const uvMax = { x:0, y:0 };\r\n            let y = this.style.getPaddingTop();\r\n            for (const line of lines) {\r\n                let start = 0;\r\n                if (line.length === 0) {\r\n                    y += lineHeight;\r\n                } else {\r\n                    while (start < line.length) {\r\n                        let x = this.style.getPaddingLeft();\r\n                        const n = autoWrap ? Math.max(1, this._uiscene._clipStringToWidth (line, this._layout.clientRect.width, charMargin, start, font)) : line.length;\r\n                        for (let i = start; i < start + n; i++) {\r\n                            const glyph = this._uiscene._getGlyphInfo (line[i], font);\r\n                            if (glyph) {\r\n                                const tex = this._uiscene._getGlyphTexture (glyph.atlasIndex);\r\n                                uvMin.x = glyph.uMin;\r\n                                uvMin.y = glyph.vMin;\r\n                                uvMax.x = glyph.uMax;\r\n                                uvMax.y = glyph.vMax;\r\n                                this._batchList.addPrimitive (new RMLRectPrimitive(x, y, glyph.width, glyph.height, uvMin.x, uvMin.y, uvMax.x, uvMax.y), clipper, tex, fontColor);\r\n                                x += glyph.width + charMargin;\r\n                            }\r\n                        }\r\n                        start += n;\r\n                        y += lineHeight;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    private _splitContent (): string[] {\r\n        const content = this.actualContent || '';\r\n        const tab2space = Array.from({length:4}).map(()=>' ').join('');\r\n        return content.replace (/\\t/g, tab2space).split('\\n');\r\n    }\r\n    /** @internal */\r\n    private _findFirstTextNode (): Text {\r\n        let el: RMLNode = this;\r\n        while (el.previousSibling?._isText() && el.previousSibling?._getPseudo() === RMLNode.PSEUDO_NONE) {\r\n            el = el.previousSibling;\r\n        }\r\n        return el as Text;\r\n    }\r\n    /** @internal */\r\n    private _styleChange () {\r\n        assert (!this.previousSibling || !this.previousSibling._isText(), 'Failed to execute _updateStyle: text node must be the first', true);\r\n        this.style.display = 'flex';\r\n        let content = this.textContent;\r\n        for (let next = this.nextSibling; next && next._isText() && next._getPseudo() === RMLNode.PSEUDO_NONE; next = next.nextSibling) {\r\n            content += next.textContent;\r\n        }\r\n        this.actualContent = content;\r\n    }\r\n}\r\n","import { RMLNode, RMLElement, GUI, IStyleSheet, RMLNodeList, RMLStaticNodeList } from '.';\r\n\r\nexport class RMLDocument extends RMLNode<RMLDocument> {\r\n    private _textContent: string;\r\n    constructor (uiscene: GUI) {\r\n        super (uiscene);\r\n        this._textContent = '';\r\n    }\r\n    get nodeType (): number {\r\n        return RMLNode.DOCUMENT_NODE;\r\n    }\r\n    get nodeName (): string {\r\n        return '#document';\r\n    }\r\n    get head (): RMLElement {\r\n        return this.querySelector ('head');\r\n    }\r\n    get body (): RMLElement {\r\n        return this.querySelector ('body');\r\n    }\r\n    get baseURI (): string {\r\n        return this._uiscene.baseURI;;\r\n    }\r\n    set baseURI (val: string) {\r\n        this._uiscene.baseURI = val;\r\n    }\r\n    get textContent (): string {\r\n        return this._textContent;\r\n    }\r\n    set textContent (val: string) {\r\n        this._textContent = val;\r\n    }\r\n    get documentElement (): RMLElement {\r\n        return this.firstElementChild || null;\r\n    }\r\n    get children (): RMLNodeList {\r\n        return this._childrenElements;\r\n    }\r\n    get childElementCount (): number {\r\n        return this._childrenElements.length;\r\n    }\r\n    get firstElementChild (): RMLElement {\r\n        return this._getFirstChild (true) as RMLElement;\r\n    }\r\n    get lastElementChild (): RMLElement {\r\n        return this._getLastChild (true) as RMLElement;\r\n    }\r\n    appendChild (child: RMLNode): RMLNode {\r\n        if (child.nodeType !== RMLNode.ELEMENT_NODE) {\r\n            throw new Error ('Failed to execute appendChild: only element can be inserted into document');\r\n        } else if (this.childElementCount > 0) {\r\n            throw new Error ('Failed to execute appendChild: only one element can be inserted into document');\r\n        }\r\n        return super.appendChild (child);\r\n    }\r\n    insertBefore (newElement: RMLNode, referenceElement: RMLNode) {\r\n        if (!newElement || newElement.nodeType !== RMLNode.ELEMENT_NODE) {\r\n            throw new Error ('Failed to execute insertBefore: only element can be inserted into document');\r\n        } else if (referenceElement || this.childElementCount > 0) {\r\n            throw new Error ('Failed to execute insertBefore: only one element can be inserted into document');\r\n        }\r\n        return super.appendChild (newElement);\r\n    }\r\n    append (...nodes: (RMLNode|string)[]): void {\r\n        this._append (...nodes);\r\n    }\r\n    prepend (...nodes: (RMLNode|string)[]): void {\r\n        this._prepend (...nodes);\r\n    }\r\n    querySelectorAll (selectors: string): RMLNodeList {\r\n        return new RMLStaticNodeList(this._uiscene._querySelectorAll (this, selectors, true, false));\r\n    }\r\n    querySelector (selectors: string): RMLElement {\r\n        return this._uiscene._querySelectorOne (this, selectors, true, false);\r\n    }\r\n    getElementsByTagName (tagname: string): RMLNodeList {\r\n        const results: RMLElement[] = [];\r\n        for (let child = this.firstElementChild; child; child = child.nextElementSibling) {\r\n            this._uiscene._getElementsByTagName (child, tagname, results);\r\n        }\r\n        return new RMLStaticNodeList(results);\r\n    }\r\n    getElementsByClassName (classnames: string): RMLNodeList {\r\n        const results: RMLElement[] = [];\r\n        classnames = classnames || '';\r\n        const classNameList = classnames.split (/\\s+/).filter(val => !!val);\r\n        if (classNameList.length > 0) {\r\n            for (let child = this.firstElementChild; child; child = child.nextElementSibling) {\r\n                this._uiscene._getElementsByClassName (child, classNameList, results);\r\n            }\r\n        }\r\n        return new RMLStaticNodeList(results);\r\n    }\r\n    getElementById (id: string): RMLElement {\r\n        return this._uiscene._getElementById (this, id);\r\n    }\r\n    createElement<T extends RMLElement = RMLElement>(tagname: string): T {\r\n        return this._uiscene.createElement<T> (tagname);\r\n    }\r\n    /** @internal */\r\n    _getDefaultStyleSheet (): IStyleSheet {\r\n        return { \r\n            position: 'absolute',\r\n            flexDirection: 'column',\r\n            left: '0px',\r\n            top: '0px',\r\n            right: '0px',\r\n            bottom: '0px',\r\n            overflow: 'auto',\r\n            backgroundColor: 'rgba(0,0,0,0)'\r\n        };\r\n    }\r\n}","import { RMLElement, GUI, tagname, IStyleSheet } from '.';\r\n\r\n@tagname ('link')\r\n@tagname ('head')\r\n@tagname ('meta')\r\nexport class DummyElement extends RMLElement<DummyElement> {\r\n    constructor (uiscene: GUI) {\r\n        super (uiscene);\r\n    }\r\n    /** @internal */\r\n    _getDefaultStyleSheet (): IStyleSheet {\r\n        return { display: 'none' };\r\n    }\r\n}","import { RMLNode, GUI, tagname, AttributeChangeEvent, RMLNodeList, RMLStaticNodeList, Event } from '.';\r\n\r\nexport interface RMLClassList {\r\n    [n: number]: string;\r\n}\r\n\r\nexport class RMLClassList {\r\n    private static _elementMap: WeakMap<RMLClassList, RMLElement> = new WeakMap();\r\n    private _classList: string[];\r\n    private _value: string;\r\n    private _valueChanged: boolean;\r\n    constructor (el: RMLElement) {\r\n        this._classList = [];\r\n        this._value = '';\r\n        this._valueChanged = false;\r\n        const proxy = new Proxy (this, {\r\n            get: function (target, name) {\r\n                if (typeof name === 'string' && /^\\d+$/.test(name)) {\r\n                    return target._classList[parseInt(name)];\r\n                } else {\r\n                    return target[name];\r\n                }\r\n            }\r\n        });\r\n        RMLClassList._elementMap.set (proxy, el);\r\n        return proxy;\r\n    }\r\n    get value (): string {\r\n        if (this._valueChanged) {\r\n            this._valueChanged = false;\r\n            this._value = this._classList.join (' ');\r\n        }\r\n        return this._value;\r\n    }\r\n    set value (val: string) {\r\n        this._setValue (val, true);\r\n    }\r\n    get length (): number {\r\n        return this._classList.length;\r\n    }\r\n    /** @internal */\r\n    _setValue (val: string, dispatch: boolean) {\r\n        this._classList = val.split (/\\s+/).filter(val => !!val);\r\n        this._valueChanged = true;\r\n        if (dispatch) {\r\n            this._notify();\r\n        }\r\n    }\r\n    /** @internal */\r\n    _notify () {\r\n        const el = RMLClassList._elementMap.get (this);\r\n        el.dispatchEvent (new AttributeChangeEvent('class', false));\r\n    }\r\n    add (...args: string[]) {\r\n        for (const arg of args) {\r\n            if (!arg || arg.indexOf(' ')>=0) {\r\n                throw new Error ('Failed to add class: class name is invalid');\r\n            }\r\n            if (arg === '') {\r\n                throw new Error ('Failed to add class: class name is empty');\r\n            }\r\n            if (this._classList.indexOf (arg) < 0) {\r\n                this._classList.push (arg);\r\n                this._valueChanged = true;\r\n                this._notify ();\r\n            }\r\n        }\r\n    }\r\n    remove (...args: string[]) {\r\n        for (const arg of args) {\r\n            const index = this._classList.indexOf (arg);\r\n            if (index >= 0) {\r\n                this._classList.splice (index, 1);\r\n                this._valueChanged = true;\r\n                this._notify ();\r\n            }\r\n        }\r\n    }\r\n    toggle (className: string): boolean {\r\n        this._valueChanged = true;\r\n        const index = this._classList.indexOf (className);\r\n        if (index >= 0) {\r\n            this._classList.splice (index, 1);\r\n            this._notify ();\r\n            return false;\r\n        } else {\r\n            this._classList.push (className);\r\n            this._notify ();\r\n            return true;\r\n        }\r\n    }\r\n    contains (className: string): boolean {\r\n        return this._classList.indexOf (className) >= 0;\r\n    }\r\n    replace (oldClassName: string, newClassName: string) {\r\n        if (newClassName !== oldClassName) {\r\n            if (!oldClassName || oldClassName.indexOf(' ')>=0) {\r\n                throw new Error ('Failed to replace class: old class name is invalid');\r\n            }\r\n            oldClassName = oldClassName.trim();\r\n            if (oldClassName === '') {\r\n                throw new Error ('Failed to replace class: old class name is empty');\r\n            }\r\n            const index = this._classList.indexOf (oldClassName);\r\n            if (index < 0) {\r\n                throw new Error ('Failed to replace class: old class name not exists');\r\n            }\r\n            newClassName = newClassName || '';\r\n            newClassName = newClassName.trim ();\r\n            const newClassNames = newClassName.split (/\\s+/).filter (val => !!val);\r\n            this._classList.splice (index, 1, ...newClassNames);\r\n\r\n            this._notify ();\r\n        }\r\n    }\r\n}\r\n\r\nexport interface RMLAttr {\r\n    name: string;\r\n    value: string;\r\n}\r\n\r\n@tagname('div')\r\nexport class RMLElement<U extends RMLElement<any> = RMLElement<any> > extends RMLNode<U> {\r\n    /** @internal */\r\n    protected _tagname: string;\r\n    /** @internal */\r\n    protected _attributes: { [name: string]: string };\r\n    /** @internal */\r\n    protected _classList: RMLClassList;\r\n    constructor (uiscene: GUI) {\r\n        super (uiscene);\r\n        this._tagname = null;\r\n        this._attributes = {};\r\n        this._classList = new RMLClassList(this);\r\n        this.addEventListener (AttributeChangeEvent.NAME, (e: Event) => {\r\n            const data = e as AttributeChangeEvent;\r\n            if (data.name === 'class') {\r\n                this._uiscene._markStyleRefreshForElement (this);\r\n            }\r\n        });\r\n    }\r\n    get children (): RMLNodeList {\r\n        return this._childrenElements;\r\n    }\r\n    get childElementCount (): number {\r\n        return this._childrenElements.length;\r\n    }\r\n    get nodeType (): number {\r\n        return RMLNode.ELEMENT_NODE;\r\n    }\r\n    get localName (): string {\r\n        return this._tagname;\r\n    }\r\n    get tagName (): string {\r\n        return this._tagname;\r\n    }\r\n    get id (): string {\r\n        return this._attributes.id || '';\r\n    }\r\n    set id (id: string) {\r\n        this._attributes.id = id || '';\r\n    }\r\n    get classList (): RMLClassList {\r\n        return this._classList;\r\n    }\r\n    get className (): string {\r\n        return this._classList.value;\r\n    }\r\n    get attributes (): RMLAttr[] {\r\n        const result: RMLAttr[] = [];\r\n        for (const name in this._attributes) {\r\n            result.push ({name: name, value: this._attributes[name]});\r\n        }\r\n        return result;\r\n    }\r\n    get firstElementChild (): RMLElement {\r\n        return this._getFirstChild (true) as RMLElement;\r\n    }\r\n    get lastElementChild (): RMLElement {\r\n        return this._getLastChild (true) as RMLElement;\r\n    }\r\n    get nextElementSibling (): RMLElement {\r\n        return this._getNextSibling (true) as RMLElement;\r\n    }\r\n    get previousElementSibling (): RMLElement {\r\n        return this._getPreviousSibling (true) as RMLElement;\r\n    }\r\n    getAttribute (k: string): string {\r\n        return k === 'class' ? this._classList.value : this._attributes && this._attributes[k] || null;\r\n    }\r\n    setAttribute (k: string, v?: string) {\r\n        v = v || null;\r\n        if (this._attributes[k] !== v) {\r\n            this._attributes[k] = v;\r\n            if (k === 'class') {\r\n                this._classList._setValue (v || '', false);\r\n            } else if (k === 'style') {\r\n                this._uiscene._markStyleRefreshForElement (this);\r\n            }\r\n            this.dispatchEvent (new AttributeChangeEvent(k, false));\r\n        }\r\n    }\r\n    removeAttribute (k: string) {\r\n        if (this._attributes[k] !== undefined) {\r\n            delete this._attributes[k];\r\n            if (k === 'style') {\r\n                this._uiscene._markStyleRefreshForElement (this);\r\n            }\r\n            this.dispatchEvent (new AttributeChangeEvent(k, true));\r\n        }\r\n    }\r\n    hasAttribute (k: string): boolean {\r\n        return this._attributes[k] !== undefined;\r\n    }\r\n    hasAttributes (): boolean {\r\n        return Object.getOwnPropertyNames(this._attributes).length !== 0;\r\n    }\r\n    insertAdjacentElement(position: string, element: RMLElement) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        if (position === 'beforebegin') {\r\n            this.before (element);\r\n            return element;\r\n        } else if (position === 'afterend') {\r\n            this.after (element);\r\n            return element;\r\n        } else if (position === 'afterbegin') {\r\n            this.prepend (element);\r\n            return element;\r\n        } else if (position === 'beforeend') {\r\n            this.append (element);\r\n            return element;\r\n        }\r\n        return null;\r\n    }\r\n    insertAdjacentText(position: string, text: string) {\r\n        if (!text) {\r\n            return null;\r\n        }\r\n        if (position === 'beforebegin') {\r\n            this.before (text);\r\n            return text;\r\n        } else if (position === 'afterend') {\r\n            this.after (text);\r\n            return text;\r\n        } else if (position === 'afterbegin') {\r\n            this.prepend (text);\r\n            return text;\r\n        } else if (position === 'beforeend') {\r\n            this.append (text);\r\n            return text;\r\n        }\r\n        return null;\r\n    }\r\n    matches (selectorString: string): boolean {\r\n        return this.ownerDocument.querySelectorAll (selectorString).indexOf (this) >= 0;\r\n    }\r\n    cloneNode (deep: boolean): RMLNode {\r\n        const clone = this._uiscene.createElement (this.tagName);\r\n        clone.classList._setValue (this.classList.value, false);\r\n        clone._attributes = Object.assign ({}, this._attributes);\r\n        if (deep) {\r\n            for (let child = this.firstChild; child; child = child.nextSibling) {\r\n                clone.appendChild (child.cloneNode (deep));\r\n            }\r\n        }\r\n        return clone;\r\n    }\r\n    replaceWith (...nodes: (RMLNode|string)[]): void {\r\n        for (const node of nodes) {\r\n            this.before (...nodes);\r\n        }\r\n        this.remove ();\r\n    }\r\n    /** @internal */\r\n    _updateStyle (val: string) {\r\n        super._updateStyle (val);\r\n        this._rawSetStyleAttribute (val);\r\n    }\r\n    /** @internal */\r\n    _applyInlineStyles () {\r\n        this.style.applyStyles (this.getAttribute('style')||'', true);\r\n    }\r\n     /** @internal */\r\n     protected _getNumberAttribute (name: string, defaultValue: number): number {\r\n        let val = this.getAttribute (name);\r\n        const num = val === null ? defaultValue : Number(val);\r\n        return Number.isNaN(num) ? defaultValue : num;\r\n    }\r\n    /** @internal */\r\n    protected _setNumberAttribute (name: string, val: number) {\r\n        this.setAttribute (name, String(val));\r\n    }\r\n    /** @internal */\r\n    protected _getStringAttribute (name: string, defaultValue: string): string {\r\n        const val = this.getAttribute (name);\r\n        return val ? String(val) : defaultValue;\r\n    }\r\n    /** @internal */\r\n    protected _setStringAttribute (name: string, val: string) {\r\n        this.setAttribute (name, String(val));\r\n    }\r\n    /** @internal */\r\n    _rawSetStyleAttribute (style: string) {\r\n        style = style || '';\r\n        if (this._attributes['style'] !== style) {\r\n            this._attributes['style'] = style;\r\n            this.dispatchEvent (new AttributeChangeEvent('style', false));\r\n        }\r\n    }\r\n    /** @internal */\r\n    _setTagName (name: string) {\r\n        this._tagname = name;\r\n    }\r\n    remove (): RMLNode {\r\n        this._remove ();\r\n        return this;\r\n    }\r\n    before (...nodes: (RMLNode|string)[]): void {\r\n        this._before (...nodes);\r\n    }\r\n    after (...nodes: (RMLNode|string)[]): void {\r\n        this._after (...nodes);\r\n    }\r\n    append (...nodes: (RMLNode|string)[]): void {\r\n        this._append (...nodes);\r\n    }\r\n    prepend (...nodes: (RMLNode|string)[]): void {\r\n        this._prepend (...nodes);\r\n    }\r\n    querySelectorAll (selectors: string): RMLNodeList {\r\n        return new RMLStaticNodeList(this._uiscene._querySelectorAll (this, selectors, true, false));\r\n    }\r\n    querySelector (selectors: string): RMLElement {\r\n        return this._uiscene._querySelectorOne (this, selectors, true, false);\r\n    }\r\n    getElementById (id: string): RMLElement {\r\n        for (let child = this.firstElementChild; child; child = child.nextElementSibling) {\r\n            const el = this._uiscene._getElementById (child, id);\r\n            if (el) {\r\n                return el;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getElementsByTagName (tagname: string): RMLNodeList {\r\n        const results: RMLElement[] = [];\r\n        for (let child = this.firstElementChild; child; child = child.nextElementSibling) {\r\n            this._uiscene._getElementsByTagName (child, tagname, results);\r\n        }\r\n        return new RMLStaticNodeList(results);\r\n    }\r\n    getElementsByClassName (classnames: string): RMLNodeList {\r\n        const results: RMLElement[] = [];\r\n        classnames = classnames || '';\r\n        const classNameList = classnames.split (/\\s+/).filter(val => !!val);\r\n        if (classNameList.length > 0) {\r\n            for (let child = this.firstElementChild; child; child = child.nextElementSibling) {\r\n                this._uiscene._getElementsByClassName (child, classNameList, results);\r\n            }\r\n        }\r\n        return new RMLStaticNodeList(results);\r\n    }\r\n}","import { RMLNode, RMLPrimitiveBatchList, Event } from '.';\r\n\r\nexport class GUIMouseEvent extends Event {\r\n    static readonly NAME_MOUSEDOWN = 'mousedown';\r\n    static readonly NAME_MOUSEUP = 'mouseup';\r\n    static readonly NAME_MOUSEMOVE = 'mousemove';\r\n    static readonly NAME_MOUSECLICK = 'click';\r\n    static readonly NAME_MOUSEDBLCLICK = 'dblclick';\r\n    static readonly NAME_MOUSEENTER = 'mouseenter';\r\n    static readonly NAME_MOUSELEAVE = 'mouseleave';\r\n    static readonly NAME_MOUSEIN = 'mousein';\r\n    static readonly NAME_MOUSEOUT = 'mouseout';\r\n    x: number;\r\n    y: number;\r\n    button: number;\r\n    keymod: number;\r\n    constructor (type: string, x: number, y: number, button: number, keymod: number) {\r\n        super (type, { bubbles: true, cancelable: true });\r\n        this.x = x;\r\n        this.y = y;\r\n        this.button = button;\r\n        this.keymod = keymod;\r\n    }\r\n}\r\n\r\nexport class GUIKeyEvent extends Event {\r\n    static readonly NAME_KEYDOWN = 'keydown';\r\n    static readonly NAME_KEYUP = 'keyup';\r\n    static readonly NAME_KEYPRESS = 'keypress';\r\n    key: number;\r\n    name: string;\r\n    charCode: number;\r\n    repeat: boolean;\r\n    keymod: number;\r\n    constructor (type: string, key: number, name: string, charcode: number, repeat: boolean, keymod: number) {\r\n        super (type, { bubbles: true, cancelable: true });\r\n        this.key = key;\r\n        this.name = name;\r\n        this.charCode = charcode;\r\n        this.repeat = repeat;\r\n        this.keymod = keymod;\r\n    }\r\n}\r\n\r\nexport class GUIFocusEvent extends Event {\r\n    static readonly NAME_FOCUS = 'focus';\r\n    static readonly NAME_BLUR = 'blur';\r\n    constructor (type: string) {\r\n        super (type);\r\n    }\r\n}\r\n\r\nexport class ElementLayoutEvent extends Event {\r\n    static readonly NAME = 'layout';\r\n    constructor () {\r\n        super (ElementLayoutEvent.NAME);\r\n    }\r\n}\r\n\r\nexport class ElementBuildContentEvent extends Event {\r\n    static readonly NAME_PREBUILD = 'prebuildcontent';\r\n    static readonly NAME_POSTBUILD = 'postbuildcontent';\r\n    batchList: RMLPrimitiveBatchList;\r\n    constructor (type: string, batchList: RMLPrimitiveBatchList) {\r\n        super (type);\r\n        this.batchList = batchList;\r\n    }\r\n}\r\n\r\nexport class ElementHittestEvent extends Event {\r\n    static readonly NAME = 'hittest';\r\n    x: number;\r\n    y: number;\r\n    allow: boolean;\r\n    constructor (x: number, y: number) {\r\n        super (ElementHittestEvent.NAME);\r\n        this.x = x;\r\n        this.y = y;\r\n        this.allow = true;\r\n    }\r\n}\r\n\r\nexport class TextEvent extends Event {\r\n    static readonly NAME_CONTENT_CHANGE = 'textcontentchange';\r\n    static readonly NAME_FONT_CHANGE = 'textfontchange';\r\n    constructor (type: string) {\r\n        super (type);\r\n    }\r\n}\r\n\r\nexport class ValueChangeEvent extends Event {\r\n    static readonly NAME = 'valuechange';\r\n    value: number;\r\n    constructor (value: number) {\r\n        super (ValueChangeEvent.NAME);\r\n        this.value = value;\r\n    }\r\n}\r\n\r\nexport class AttributeChangeEvent extends Event {\r\n    static readonly NAME = 'attributechange';\r\n    name: string;\r\n    removed: boolean;\r\n    constructor (name: string, removed: boolean) {\r\n        super (AttributeChangeEvent.NAME);\r\n        this.name = name;\r\n        this.removed = removed;\r\n    }\r\n}\r\n\r\nexport class TextContentChangeEvent extends Event {\r\n    static readonly NAME = 'elementtextcontentchange';\r\n    constructor () {\r\n        super (TextContentChangeEvent.NAME, { bubbles: true, cancelable: true });\r\n    }\r\n}\r\n\r\nexport class DOMTreeEvent extends Event {\r\n    static readonly NAME_INSERTED = 'elementinserted';\r\n    static readonly NAME_REMOVED = 'elementremoved';\r\n    static readonly NAME_FOCUSED = 'elementfocused';\r\n    parent: RMLNode;\r\n    constructor (type: string, parent: RMLNode) {\r\n        super (type, { bubbles: type !== DOMTreeEvent.NAME_FOCUSED, cancelable: type !== DOMTreeEvent.NAME_FOCUSED });\r\n        this.parent = parent;\r\n    }\r\n}\r\n\r\n\r\n","import { RMLElement, GUI, tagname, RMLSelector, IStyleSheet, TextContentChangeEvent, parseStyleSheet } from '.';\r\n\r\n@tagname ('html')\r\n@tagname ('body')\r\nexport class FlowElement extends RMLElement<FlowElement> {\r\n    constructor (uiscene: GUI) {\r\n        super (uiscene);\r\n    }\r\n    /** @internal */\r\n    _getDefaultStyleSheet (): IStyleSheet {\r\n        const style = {} as IStyleSheet;\r\n        style.width = '100%';\r\n        style.height = 'auto';\r\n        style.flexDirection = 'column';\r\n        style.justifyContent = 'flex-start';\r\n        style.alignItems = 'stretch';\r\n        style.flex = '0 0 auto';\r\n        style.overflow = 'auto';\r\n        return style;\r\n    }\r\n}","import { assert } from './types';\r\n\r\nexport class FontCanvas {\r\n    private static _canvas: HTMLCanvasElement = null;\r\n    private static _context: CanvasRenderingContext2D = null;\r\n    private static _currentFont: Font = null;\r\n    static get canvas () {\r\n        this._realize ();\r\n        return this._canvas;\r\n    }\r\n    static get context () {\r\n        this._realize ();\r\n        return this._context;\r\n    }\r\n    static get font () {\r\n        return this._currentFont;\r\n    }\r\n    static set font (font: Font) {\r\n        if (font && font !== this._currentFont) {\r\n            this.context.font = font.fontName;\r\n            this._currentFont = font;\r\n        }\r\n    }\r\n    private static _realize () {\r\n        if (!this._canvas) {\r\n            this._canvas = document.createElement ('canvas');\r\n            this._canvas.width = 512;\r\n            this._canvas.height = 512;\r\n            this._canvas.style.left = '-10000px';\r\n            this._canvas.style.position = 'absolute';\r\n            document.body.appendChild (this._canvas);\r\n            this._context = this._canvas.getContext ('2d');\r\n            this._context.textBaseline = 'top';\r\n            this._context.textAlign = 'left';\r\n            this._context.fillStyle = 'transparent';\r\n            this._context.fillRect (0, 0, this._canvas.width, this._canvas.height);\r\n            this._context.fillStyle = '#ffffff';\r\n            this._context.imageSmoothingEnabled = true;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Font {\r\n    private _name;\r\n    private _size: number;\r\n    private _family: string;\r\n    private _top: number;\r\n    private _bottom: number;\r\n    constructor (name: string) {\r\n        this.fontName = name;\r\n        this._top = 0;\r\n        this._bottom = 0;\r\n        this._size = 0;\r\n        this._family = '';\r\n        this._name = name;\r\n        if (this._name) {\r\n            this._normalizeFont ();\r\n        }\r\n    }\r\n    get fontName (): string {\r\n        return this._name;\r\n    }\r\n    set fontName (name: string) {\r\n        this._name = name;\r\n        this._normalizeFont ();\r\n    }\r\n    get size (): number {\r\n        return this._size;\r\n    }\r\n    get family (): string {\r\n        return this._family;\r\n    }\r\n    get top (): number {\r\n        return this._top;\r\n    }\r\n    get bottom (): number {\r\n        return this._bottom;\r\n    }\r\n    get maxHeight (): number {\r\n        return this._bottom - this._top + 1;\r\n    }\r\n    equalTo (other: Font): boolean {\r\n        return this._size === other._size && this._family === other._family;\r\n    }\r\n    private _measureFontHeight (): number[] {\r\n        const oldFont = FontCanvas.context.font;\r\n        const oldTextBaseline = FontCanvas.context.textBaseline;\r\n        const oldFillStyle = FontCanvas.context.fillStyle;\r\n        FontCanvas.context.font = this._name;\r\n        const testString = 'bdfghijklpq国美|_~';\r\n        const metric = FontCanvas.context.measureText (testString);\r\n        let top: number, bottom: number;\r\n        if (typeof metric.fontBoundingBoxAscent === 'number' && typeof metric.fontBoundingBoxDescent === 'number') {\r\n            top = Math.floor(metric.fontBoundingBoxAscent);\r\n            bottom = Math.ceil(metric.fontBoundingBoxDescent);\r\n        } else {\r\n            top = 0;\r\n            bottom = this._size - 1;\r\n            const extra = 10;\r\n            const halfExtra = extra >>1;\r\n            const maxWidth = Math.ceil(metric.width) + extra;\r\n            const maxHeight = this._size + extra;\r\n            FontCanvas.context.clearRect (0, 0, maxWidth, maxHeight);\r\n            FontCanvas.context.textBaseline = 'top';\r\n            FontCanvas.context.fillStyle = '#ffffff';\r\n            FontCanvas.context.fillText (testString, halfExtra, halfExtra);\r\n            const bitmap = FontCanvas.context.getImageData (0, 0, maxWidth, maxHeight);\r\n            const pixels = bitmap.data;\r\n            for (let i = 0; i < maxWidth * maxHeight; i++) {\r\n                if (pixels[i*4+3] > 0) {\r\n                    top = Math.floor(i / maxWidth);\r\n                    break;\r\n                }\r\n            }\r\n            for (let i = maxWidth * maxHeight - 1; i >= 0; i--) {\r\n                if (pixels[i*4+3] > 0) {\r\n                    bottom = Math.floor(i / maxWidth);\r\n                    break;\r\n                }\r\n            }\r\n            top -= halfExtra;\r\n            bottom -= halfExtra;\r\n        }\r\n        FontCanvas.context.font = oldFont;\r\n        FontCanvas.context.textBaseline = oldTextBaseline;\r\n        FontCanvas.context.fillStyle = oldFillStyle;\r\n\r\n        return [top, bottom];\r\n    }\r\n    private _normalizeFont (): void {\r\n        const oldFont = FontCanvas.context.font;\r\n        FontCanvas.context.font = this._name;\r\n        this._name = FontCanvas.context.font;\r\n        const fontParts = this._name.split(/\\s+/);\r\n        assert (fontParts.length >= 2, 'normalize font failed', true);\r\n        let sizePart = fontParts[fontParts.length-2];\r\n        assert (sizePart.substr (sizePart.length-2) === 'px', 'normalize font failed', true);\r\n        this._size = parseInt(sizePart.substr(0, sizePart.length-2));\r\n        this._family = fontParts[fontParts.length-1];\r\n        [this._top, this._bottom] = [...this._measureFontHeight ()];\r\n        FontCanvas.context.font = oldFont;\r\n    }\r\n}","import { Renderer, Texture, Font, FontCanvas, AtlasManager } from '.';\r\n\r\nexport interface IGlyphInfo {\r\n    atlasIndex: number;\r\n    width: number;\r\n    height: number;\r\n    uMin: number;\r\n    vMin: number;\r\n    uMax: number;\r\n    vMax: number;\r\n}\r\n\r\nconst updateByCanvas: boolean = false;\r\n\r\nexport class GlyphManager extends AtlasManager<GlyphManager> {\r\n    constructor (renderer: Renderer, cacheWidth?: number, cacheHeight?: number, cachePadding?: number) {\r\n        super (renderer, Math.max (cacheWidth, 2), cacheHeight, cachePadding, true);\r\n    }\r\n    getGlyphTexture (index: number): Texture {\r\n        return this.getAtlasTexture (index);\r\n    }\r\n    getGlyphInfo (char: string, font: Font): IGlyphInfo {\r\n        if (!char || !font) {\r\n            return null;\r\n        }\r\n        let glyphInfo = this.getAtlasInfo(this._hash(char, font));\r\n        if (!glyphInfo) {\r\n            glyphInfo = this._cacheGlyph (char, font);\r\n        }\r\n        return glyphInfo;\r\n    }\r\n    measureStringWidth (str: string, charMargin: number, font: Font) {\r\n        let w = 0;\r\n        for (let i = 0; i < str.length; i++) {\r\n            const margin = i === 0 ? 0 : charMargin;\r\n            const glyphInfo = this.getGlyphInfo (str[i], font);\r\n            w += margin + (glyphInfo ? glyphInfo.width : 0);\r\n        }\r\n        return w;\r\n    }\r\n    clipStringToWidth (str: string, width: number, charMargin: number, start: number, font: Font) {\r\n        let sum = 0;\r\n        let i = start;\r\n        for (; i < str.length; i++) {\r\n            const margin = i === start ? 0 : charMargin;\r\n            const glyphInfo = this.getGlyphInfo (str[i], font);\r\n            const charWidth = margin + (glyphInfo ? glyphInfo.width : 0);\r\n            sum += charWidth;\r\n            if (sum > width) {\r\n                break;\r\n            }\r\n        }\r\n        return i - start;\r\n    }\r\n    private _hash (char: string, font: Font) {\r\n        return `${font.family}@${font.size}&${char}`;\r\n    }\r\n    private _cacheGlyph (char: string, font: Font): IGlyphInfo {\r\n        if (updateByCanvas) {\r\n            const bitmap = this._getGlyphBitmap (char, font) as {x:number,y:number,w:number,h:number };\r\n            return this.pushCanvas (this._hash(char, font), FontCanvas.context, bitmap.x, bitmap.y, bitmap.w, bitmap.h);\r\n        } else {\r\n            const bitmap = this._getGlyphBitmap (char, font) as ImageData;\r\n            return this.pushBitmap (this._hash(char, font), bitmap);\r\n        }\r\n        /*\r\n        if (bitmap) {\r\n            const rc = this._packer.add (bitmap.width, bitmap.height, null);\r\n            if (rc) {\r\n                this._updateAtlasTexture (this._packer.bins.length - 1, bitmap, rc.x, rc.y, rc.width, rc.height);\r\n                const glyphInfo: IGlyphInfo = {\r\n                    atlasIndex: this._packer.bins.length - 1,\r\n                    uMin: rc.x / (this._cacheWidth + this._cachePadding),\r\n                    vMin: rc.y / (this._cacheHeight + this._cachePadding),\r\n                    uMax: (rc.x + rc.width) / (this._cacheWidth + this._cachePadding),\r\n                    vMax: (rc.y + rc.height) / (this._cacheHeight + this._cachePadding),\r\n                    width: rc.width,\r\n                    height: rc.height\r\n                }\r\n                this._glyphInfoMap[this._hash(char, font)] = glyphInfo;\r\n                return glyphInfo;\r\n            }\r\n        }\r\n        return null;\r\n        */\r\n    }\r\n    private _getGlyphBitmap (char: string, font: Font): ImageData|{x:number,y:number,w:number,h:number} {\r\n        if (!font) {\r\n            return null;\r\n        }\r\n        FontCanvas.font = font;\r\n        const metric = FontCanvas.context.measureText (char);\r\n        let w = metric.width;\r\n        if (w === 0) {\r\n            return null;\r\n        }\r\n        if (typeof metric.actualBoundingBoxRight === 'number') {\r\n            w = Math.floor(Math.max(w, metric.actualBoundingBoxRight) + 0.8);\r\n        }\r\n        let h = font.bottom - font.top + 1;\r\n        if (updateByCanvas) {\r\n            FontCanvas.canvas.width = w;\r\n            FontCanvas.canvas.height = h;\r\n            FontCanvas.context.textBaseline = 'top';\r\n            FontCanvas.context.fillStyle = '#ffffff';\r\n        }\r\n        FontCanvas.context.clearRect (0, 0, w + 2, h);\r\n        FontCanvas.context.fillText (char, 0, -font.top);\r\n        if (updateByCanvas) {\r\n            return { x: 0, y: 0, w: w, h: h };\r\n        } else {\r\n            const bitmap = FontCanvas.context.getImageData(0, 0, w, h);\r\n            return bitmap;\r\n        }\r\n    }\r\n}","import * as Yoga from './typeflex/api';\r\nimport { Renderer, Texture, Font, GlyphManager, IGlyphInfo, ImageManager, GUIHitTestVisitor, UILayout, UIRect, RMLNode, RMLElement, Input, RMLDocument, StyleElement, IStyleSheet, parseStyleSheet, Event, DOMTreeEvent, GUIMouseEvent, GUIKeyEvent, GUIFocusEvent, RMLSelector, Rule, Vec2, assert, EventTarget, eventtarget, RMLPrimitiveBatchList } from '.';\r\nimport { FileLoader, LoadManager } from './asset';\r\n\r\ninterface IElementConstructor {\r\n    new (gui: GUI, ...args: any[]): any;\r\n}\r\n\r\ninterface ITagNameGetter {\r\n    (element: RMLElement): string;\r\n}\r\n\r\nclass GUIDrawVisitor {\r\n    private _renderer: Renderer;\r\n    constructor (renderer: Renderer) {\r\n        this._renderer = renderer;\r\n    }\r\n    visitNode (w: RMLNode) {\r\n        if (w._isVisible()) {\r\n            w.draw (this._renderer);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ElementRegistry {\r\n    private _constructors: { [tagname: string]: IElementConstructor };\r\n    constructor () {\r\n        this._constructors = {};\r\n    }\r\n    register (ctor: IElementConstructor, tagname: string|ITagNameGetter) {\r\n        assert (!!ctor, 'Failed to register element type with null constructor', true);\r\n        assert (!!tagname, 'Failed to register element type with null tag name getter', true);\r\n        if (typeof tagname === 'string') {\r\n            assert (!this._constructors[tagname], 'Failed to register element type: tagname already registered', true);\r\n            this._constructors[tagname] = ctor;\r\n        }\r\n    }\r\n    createElement (gui: GUI, tagname: string): RMLElement {\r\n        let ctor = this._constructors[tagname] || this._constructors['div'];\r\n        const el = new ctor (gui);\r\n        el._setTagName (tagname);\r\n        return el;\r\n    }\r\n}\r\n\r\nconst elementRegistry = new ElementRegistry ();\r\n\r\nexport function tagname (name: string) {\r\n    return function (ctor: IElementConstructor) {\r\n        elementRegistry.register (ctor, name);\r\n    }\r\n}\r\n\r\nexport interface GUI extends EventTarget {}\r\n\r\nconst deviceMouseEvents = [\r\n    GUIMouseEvent.NAME_MOUSEDOWN,\r\n    GUIMouseEvent.NAME_MOUSEUP,\r\n    GUIMouseEvent.NAME_MOUSEMOVE, \r\n    GUIMouseEvent.NAME_MOUSECLICK, \r\n    GUIMouseEvent.NAME_MOUSEDBLCLICK\r\n];\r\n\r\nconst deviceKeyEvents = [\r\n    GUIKeyEvent.NAME_KEYDOWN,\r\n    GUIKeyEvent.NAME_KEYUP,\r\n    GUIKeyEvent.NAME_KEYPRESS\r\n];\r\n\r\n@eventtarget()\r\nexport class GUI {\r\n    /** @internal */\r\n    protected _renderer: Renderer;\r\n    /** @internal */\r\n    protected _imageManager: ImageManager;\r\n    /** @internal */\r\n    protected _glyphManager: GlyphManager;\r\n    /** @internal */\r\n    protected _document: RMLDocument;\r\n    /** @internal */\r\n    protected _focusElement: RMLNode;\r\n    /** @internal */\r\n    protected _captureElement: RMLNode;\r\n    /** @internal */\r\n    protected _layoutDirty: boolean;\r\n    /** @internal */\r\n    protected _updatingLayout: boolean;\r\n    /** @internal */\r\n    protected _topLayout: UILayout;\r\n    /** @internal */\r\n    protected _hoverElements: { element:RMLNode, x:number, y:number }[];\r\n    /** @internal */\r\n    protected _bounds: UIRect;\r\n    /** @internal */\r\n    protected _styleRefreshList: RMLNode[];\r\n    /** @internal */\r\n    protected _styleFullRefresh: boolean;\r\n    /** @internal */\r\n    protected _ruleListImported: { rule: Rule, stylesheet: IStyleSheet, extra: object }[];\r\n    /** @internal */\r\n    protected _guiLoading: boolean;\r\n    /** @internal */\r\n    protected _styleUpdating: boolean;\r\n    /** @internal */\r\n    protected _domTag: number;\r\n    /** @internal */\r\n    protected _baseURI: string;\r\n    /** @internal */\r\n    protected _drawVisitor: GUIDrawVisitor;\r\n\r\n    constructor (renderer: Renderer, bounds?: UIRect) {\r\n        this._renderer = renderer;\r\n        this._drawVisitor = new GUIDrawVisitor (renderer);\r\n        this._imageManager = new ImageManager (this._renderer);\r\n        this._glyphManager = new GlyphManager (this._renderer);\r\n        this._document = null;\r\n        this._focusElement = null;\r\n        this._captureElement = null;\r\n        this._hoverElements = [];\r\n        this._layoutDirty = false;\r\n        this._updatingLayout = false;\r\n        this._bounds = bounds ? {...bounds} : null;\r\n        this._styleRefreshList = [];\r\n        this._styleFullRefresh = false;\r\n        this._ruleListImported = [];\r\n        this._guiLoading = false;\r\n        this._styleUpdating = false;\r\n        this._domTag = 0;\r\n        this._baseURI = '';\r\n        this._topLayout = new UILayout (null);\r\n        this._topLayout.node.setDisplay (Yoga.DISPLAY_FLEX);\r\n        this._topLayout.node.setPadding (Yoga.EDGE_LEFT, 0);\r\n        this._topLayout.node.setPadding (Yoga.EDGE_TOP, 0);\r\n        this._topLayout.node.setPadding (Yoga.EDGE_RIGHT, 0);\r\n        this._topLayout.node.setPadding (Yoga.EDGE_BOTTOM, 0);\r\n        this._topLayout.node.setPositionType (Yoga.POSITION_TYPE_ABSOLUTE);\r\n        this._topLayout.node.setPosition (Yoga.EDGE_LEFT, this._bounds ? this._bounds.x : 0);\r\n        this._topLayout.node.setPosition (Yoga.EDGE_TOP, this._bounds ? this._bounds.y : 0);\r\n        this._topLayout.node.setWidth (this._bounds ? this._bounds.width : this._renderer.getDrawingBufferWidth());\r\n        this._topLayout.node.setHeight (this._bounds ? this._bounds.height : this._renderer.getDrawingBufferHeight());\r\n        this.addEventListener ('deviceresize', function (this: GUI) {\r\n            if (!this._bounds) {\r\n                this._topLayout.node.setWidth (this._renderer.getDrawingBufferWidth());\r\n                this._topLayout.node.setHeight (this._renderer.getDrawingBufferHeight());\r\n                this.invalidateLayout ();\r\n                setTimeout (() => {\r\n                    const inputs = this.document.querySelectorAll ('input');\r\n                    for (const input of inputs.values()) {\r\n                        (input as unknown as Input)._updateHiddenInput ();\r\n                    }\r\n                }, 0);\r\n            }\r\n        });\r\n        for (const evt of deviceMouseEvents) {\r\n            this.addEventListener (evt, function (this: GUI, e: Event) {\r\n                const mouseEvent: GUIMouseEvent = e as GUIMouseEvent;\r\n                if (evt === GUIMouseEvent.NAME_MOUSEMOVE) {\r\n                    let hits: { element:RMLNode, x:number, y:number }[] = null;\r\n                    if (this._captureElement) {\r\n                        const v = this._captureElement.toAbsolute ({ x:0, y:0 });\r\n                        hits = [{ element: this._captureElement, x: mouseEvent.x - v.x, y: mouseEvent.y - v.y }];\r\n                    } else {\r\n                        hits = this.hitTest (mouseEvent.x, mouseEvent.y);\r\n                    }\r\n                    if (hits.length === 0) {\r\n                        this._renderer.setCursorStyle ('default');\r\n                    }\r\n                    for (let i = 0; i < this._hoverElements.length; i++) {\r\n                        const info = this._hoverElements[i];\r\n                        if (!hits.find (hit => hit.element === info.element)) {\r\n                            const p = info.element.toAbsolute ({ x:0, y:0 });\r\n                            info.element._onMouseOut (mouseEvent.x - p.x, mouseEvent.y - p.y);\r\n                            if (info.element.enabled) {\r\n                                info.element.dispatchEvent (new GUIMouseEvent(GUIMouseEvent.NAME_MOUSEOUT, mouseEvent.x - p.x, mouseEvent.y - p.y, mouseEvent.button, mouseEvent.keymod));\r\n                            }\r\n                        }\r\n                    }\r\n                    for (let i = 0; i < hits.length; i++) {\r\n                        const info = hits[i];\r\n                        if (!this._hoverElements.find (hit => hit.element === info.element)) {\r\n                            info.element._onMouseIn (info.x, info.y);\r\n                            if (info.element.enabled) {\r\n                                info.element.dispatchEvent (new GUIMouseEvent(GUIMouseEvent.NAME_MOUSEIN, info.x, info.y, mouseEvent.button, mouseEvent.keymod));\r\n                            }\r\n                        }\r\n                    }\r\n                    const lastHover = this._hoverElements.length > 0 ? this._hoverElements[0] : null;\r\n                    const newHover = hits.length > 0 ? hits[0] : null;\r\n                    if (lastHover?.element !== newHover?.element) {\r\n                        if (lastHover) {\r\n                            const p = lastHover.element.toAbsolute ({ x:0, y:0 });\r\n                            lastHover.element._onMouseLeave (mouseEvent.x - p.x, mouseEvent.y - p.y);\r\n                            if (lastHover.element.enabled) {\r\n                                lastHover.element.dispatchEvent (new GUIMouseEvent(GUIMouseEvent.NAME_MOUSELEAVE, mouseEvent.x - p.x, mouseEvent.y - p.y, mouseEvent.button, mouseEvent.keymod));\r\n                            }\r\n                        }\r\n                        if (newHover) {\r\n                            newHover.element._onMouseEnter (newHover.x, newHover.y);\r\n                            if (newHover.element.enabled) {\r\n                                newHover.element.dispatchEvent (new GUIMouseEvent(GUIMouseEvent.NAME_MOUSEENTER, newHover.x, newHover.y, mouseEvent.button, mouseEvent.keymod));\r\n                            }\r\n                        }\r\n                    }\r\n                    this._hoverElements = hits;\r\n                }\r\n                if (this._hoverElements.length > 0) {\r\n                    if (mouseEvent.button === 1) {\r\n                        if (evt === GUIMouseEvent.NAME_MOUSEDOWN) {\r\n                            this._hoverElements[0].element._onMouseDown (this._hoverElements[0].x, this._hoverElements[0].y);\r\n                            this.setFocus (this._hoverElements[0].element.enabled ? this._hoverElements[0].element : null);\r\n                        } else if (evt === GUIMouseEvent.NAME_MOUSEUP) {\r\n                            this._hoverElements[0].element._onMouseUp (this._hoverElements[0].x, this._hoverElements[0].y);\r\n                        }\r\n                    }\r\n                    for (const info of this._hoverElements) {\r\n                        if (!info.element.enabled) {\r\n                            continue;\r\n                        }\r\n                        const me = new GUIMouseEvent(evt, info.x, info.y, mouseEvent.button, mouseEvent.keymod);\r\n                        info.element.dispatchEvent (me);\r\n                        if (me.cancelBubble) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        for (const evt of deviceKeyEvents) {\r\n            this.addEventListener (evt, function (this: GUI, e: Event) {\r\n                const keyEvent = e as GUIKeyEvent;\r\n                if (this._focusElement && this._focusElement.enabled) {\r\n                    let node = this._focusElement;\r\n                    while (node) {\r\n                        const ke = new GUIKeyEvent (evt, keyEvent.key, keyEvent.name, keyEvent.charCode, keyEvent.repeat, keyEvent.keymod);\r\n                        node.dispatchEvent (ke);\r\n                        if (ke.cancelBubble) {\r\n                            break;\r\n                        }\r\n                        node = node.parentNode;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        const domChangeFunc = function (this: GUI, e: Event) {\r\n            const data: DOMTreeEvent = e as DOMTreeEvent;\r\n            this._domTag++;\r\n            if ((data.target as RMLNode).nodeType === RMLNode.ELEMENT_NODE) {\r\n                const el: RMLElement = data.target as RMLElement;\r\n                if (el.tagName === 'style' || el.querySelectorAll ('style')) {\r\n                    this.requireFullStyleRefresh ();\r\n                } else {\r\n                    this._markStyleRefreshForElement (data.parent || el);\r\n                }\r\n                if (!this._guiLoading && (el.tagName === 'link' || el.querySelector ('link'))) {\r\n                    let linkElements = el.tagName === 'link' ? [data.target] : [];\r\n                    linkElements = [...linkElements, ...el.querySelectorAll ('link').values()];\r\n                    for (const el of linkElements) {\r\n                        this._importLinkContent (el as RMLElement);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.addEventListener (DOMTreeEvent.NAME_INSERTED, domChangeFunc);\r\n        this.addEventListener (DOMTreeEvent.NAME_REMOVED, domChangeFunc);\r\n        this._document = new RMLDocument (this);\r\n        this._topLayout.appendChild (this._document._getLayout());\r\n        const root = this._document.createElement ('html');\r\n        root.append (this._document.createElement('head'));\r\n        root.append (this._document.createElement('body'));\r\n        this._document.append (root);\r\n        this.invalidateLayout ();\r\n        this.requireFullStyleRefresh ();\r\n    }\r\n    get renderer () {\r\n        return this._renderer;\r\n    }\r\n    get bounds (): UIRect {\r\n        return this._bounds;\r\n    }\r\n    set bounds (rect: UIRect) {\r\n        this._bounds = rect ? {...rect} : null;\r\n        this._topLayout.node.setPosition (Yoga.EDGE_LEFT, this._bounds ? this._bounds.x : 0);\r\n        this._topLayout.node.setPosition (Yoga.EDGE_TOP, this._bounds ? this._bounds.y : 0);\r\n        this._topLayout.node.setWidth (this._bounds ? this._bounds.width : this._renderer.getDrawingBufferWidth());\r\n        this._topLayout.node.setHeight (this._bounds ? this._bounds.height : this._renderer.getDrawingBufferHeight());\r\n        this.invalidateLayout ();\r\n    }\r\n    get baseURI (): string {\r\n        return this._baseURI;\r\n    }\r\n    set baseURI (val: string) {\r\n        this._baseURI = val || '';\r\n    }\r\n    get document (): RMLDocument {\r\n        return this._document;\r\n    }\r\n    get imageManager (): ImageManager {\r\n        return this._imageManager;\r\n    }\r\n    getFocus () {\r\n        return this._focusElement;\r\n    }\r\n    setFocus (node: RMLNode) {\r\n        node = node || null;\r\n        if (node !== this._focusElement) {\r\n            if (this._focusElement) {\r\n                const focusElement = this._focusElement;\r\n                setTimeout (()=>{\r\n                    focusElement.dispatchEvent (new GUIFocusEvent(GUIFocusEvent.NAME_BLUR));\r\n                }, 0);\r\n            }\r\n            if (node) {\r\n                setTimeout (()=>{\r\n                    node.dispatchEvent (new GUIFocusEvent(GUIFocusEvent.NAME_FOCUS));\r\n                }, 0);\r\n            }\r\n            this._focusElement = node;\r\n            this.dispatchEvent (new DOMTreeEvent (DOMTreeEvent.NAME_FOCUSED, null));\r\n        }\r\n    }\r\n    getCapture () {\r\n        return this._captureElement;\r\n    }\r\n    setCapture (node: RMLNode) {\r\n        this._captureElement = node || null;\r\n    }\r\n    dispose () {\r\n        this._imageManager?.dispose ();\r\n        this._imageManager = null;\r\n    }\r\n    invalidateLayout () {\r\n        this._layoutDirty = true;\r\n    }\r\n    requireFullStyleRefresh () {\r\n        if (!this._styleUpdating) {\r\n            this._styleFullRefresh = true;\r\n        }\r\n    }\r\n    /** @internal */\r\n    get domTag (): number {\r\n        return this._domTag;\r\n    }\r\n    checkAndRefreshStyle () {\r\n        if (this._document) {\r\n            if (this._styleFullRefresh) {\r\n                this._styleRefreshList.splice (0, this._styleRefreshList.length, this._document);\r\n            } else {\r\n                // skip removed elements and style elements\r\n                const validElements: RMLNode[] = [];\r\n                for (const e of this._styleRefreshList) {\r\n                    if (e.nodeType === RMLNode.ELEMENT_NODE && (e as RMLElement).tagName !== 'style' && e._isSucceedingOf (this._document)) {\r\n                        validElements.push (e);\r\n                    }\r\n                }\r\n                this._styleRefreshList = validElements;\r\n            }\r\n            if (this._styleRefreshList.length > 0) {\r\n                this._styleUpdating = true;\r\n                const styleElements = this._document.querySelectorAll ('style');\r\n                const processedElements: Set<RMLNode> = new Set();\r\n                const ruleList: { rule: Rule, stylesheet: IStyleSheet, extra: object }[] = [...this._ruleListImported];\r\n                for (const el of styleElements.values()) {\r\n                    for (const def of (el as StyleElement).definitions) {\r\n                        for (const rule of def.selector.rules()) {\r\n                            ruleList.push ({ rule: rule, stylesheet: def.stylesheet, extra: def.extra });\r\n                        }\r\n                    }\r\n                }\r\n                let allElements: RMLElement[] = null;\r\n                let pseudoMap: Map<RMLNode, Map<string, { stylesheet:IStyleSheet, extra:object }[]> > = new Map();\r\n                if (this._styleFullRefresh) {\r\n                    allElements = this._querySelectorAll (this._document, '*', true, true);\r\n                }\r\n                if (ruleList.length > 0) {\r\n                    if (this._styleRefreshList.indexOf (this._document) >= 0) {\r\n                        this._styleRefreshList.splice (0, this._styleRefreshList.length, this._document);\r\n                    }\r\n                    ruleList.sort ((a, b) => { return a.rule.specificity - b.rule.specificity });\r\n                    for (const rule of ruleList) {\r\n                        rule.rule.resolve (this._styleRefreshList, true, true, (node: RMLNode, type: string) => {\r\n                            const pseudoTypes: Map<string, { stylesheet:IStyleSheet, extra:object }[]> = pseudoMap.get (node) || new Map();\r\n                            pseudoMap.set (node, pseudoTypes);\r\n                            const styleList: { stylesheet:IStyleSheet, extra:object }[] = pseudoTypes.get (type) || [];\r\n                            pseudoTypes.set (type, styleList);\r\n                            styleList.push ({ stylesheet: rule.stylesheet, extra: rule.extra });\r\n                        });\r\n                        for (const e of rule.rule.targets) {\r\n                            if (e.nodeType !== RMLNode.DOCUMENT_NODE) {\r\n                                if (!processedElements.has (e)) {\r\n                                    e._resetStyle ();\r\n                                    processedElements.add (e);\r\n                                }\r\n                                e.style.applyStyleSheet (rule.stylesheet, false);\r\n                            }\r\n                            e._updatePseudoElementStyles (pseudoMap.get(e));\r\n                        }\r\n                        if (!this._styleFullRefresh) {\r\n                            for (const e of pseudoMap) {\r\n                                e[0]._updatePseudoElementStyles (e[1]);\r\n                            }\r\n                            pseudoMap.clear ();\r\n                        }\r\n                    }\r\n                    processedElements.forEach (e => {\r\n                        e._applyInlineStyles ();\r\n                    });\r\n                }\r\n                if (this._styleFullRefresh) {\r\n                    for (const e of allElements) {\r\n                        if (!processedElements.has (e)) {\r\n                            e._resetStyle ();\r\n                            e._applyInlineStyles ();\r\n                        }\r\n                        e._updatePseudoElementStyles (pseudoMap.get (e));\r\n                    }\r\n                } else {\r\n                    for (const e of this._styleRefreshList) {\r\n                        if (!processedElements.has (e)) {\r\n                            e._resetStyle ();\r\n                            e._applyInlineStyles ();\r\n                        }\r\n                    }\r\n                }\r\n                this._styleUpdating = false;\r\n            }\r\n        }\r\n        this._styleRefreshList.splice (0, this._styleRefreshList.length);\r\n        this._styleFullRefresh = false;\r\n    }\r\n    updateLayout () {\r\n        if (this._layoutDirty) {\r\n            if (this._updatingLayout) {\r\n                console.warn ('updateLayout called recursively');\r\n            } else {\r\n                this._layoutDirty = false;\r\n                this._updatingLayout = true;\r\n                this._topLayout.calcLayout ();\r\n                if (this._document) {\r\n                    this._document._syncLayout ();\r\n                }\r\n                this._updatingLayout = false;\r\n            }\r\n        }\r\n    }\r\n    hitTest (x: number, y: number): { element:RMLNode, x:number, y:number }[] {\r\n        if (this._document) {\r\n            this.updateLayout ();\r\n            const v = new GUIHitTestVisitor (x, y);\r\n            this._document.traverse (v, true, true);\r\n            let hits = v.getHits ();\r\n            if (hits.length > 0) {\r\n                const topmost = hits[0].element;\r\n                hits = hits.filter (val => val.element.contains (topmost));\r\n            }\r\n            return hits;\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n    render () {\r\n        this.checkAndRefreshStyle ();\r\n        this.updateLayout ();\r\n        this._renderer.beginRender ();\r\n        this.document.traverse (this._drawVisitor);\r\n        this._renderer.endRender ();\r\n    }\r\n    serializeToXML (): string {\r\n        return this._serializeToXML ();\r\n    }\r\n    async deserializeFromXML (xml: string) {\r\n        this._guiLoading = true;\r\n        while (this._document.firstChild) {\r\n            this._document.removeChild (this._document.firstChild);\r\n        }\r\n        const parser = new DOMParser ();\r\n        const dom = parser.parseFromString (xml, 'text/html');\r\n        if (dom.getElementsByTagName ('parsererror').length > 0) {\r\n            return null;\r\n        }\r\n        const docElement = dom.documentElement;\r\n        this._document.append (this._deserializeElement (docElement));\r\n        const linkElements = this._document.querySelectorAll ('link');\r\n        const promises: Promise<any>[] = [];\r\n        for (const link of linkElements.values()) {\r\n            promises.push (this._importLinkContent (link as RMLElement));\r\n        }\r\n        await Promise.all (promises);\r\n        this._guiLoading = false;\r\n    }\r\n    async deserializeFromURL (url: string) {\r\n        this._guiLoading = true;\r\n        const content = await new FileLoader (null, 'text').load (url) as string;\r\n        if (content) {\r\n            const normalizedURL = LoadManager.resolveURL (url);\r\n            const index = normalizedURL.lastIndexOf ('/');\r\n            this._baseURI = normalizedURL.substring (0, index + 1);\r\n            await this.deserializeFromXML (content);\r\n        }\r\n        this._guiLoading = false;\r\n    }\r\n    createElement<T extends RMLElement = RMLElement>(tagname: string): T {\r\n        const el = elementRegistry.createElement (this, tagname) as T;\r\n        el._init ();\r\n        return el;\r\n    }\r\n    /** @internal */\r\n    _drawBatchList (batches: RMLPrimitiveBatchList) {\r\n        for (let i = 0; i < batches.length; i++) {\r\n            const batch = batches.getBatch (i);\r\n            const vertices = batches.getVertices (i);\r\n            const color = batch.color;\r\n            if (color.w > 0 && vertices) {\r\n                this._renderer.drawQuads (vertices, batch.texture || null);\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    _getGlyphTexture (index: number): Texture {\r\n        return this._glyphManager.getGlyphTexture(index);\r\n    }\r\n    /** @internal */\r\n    _getGlyphInfo (char: string, font: Font): IGlyphInfo {\r\n        return this._glyphManager.getGlyphInfo (char, font);\r\n    }\r\n    /** @internal */\r\n    _measureStringWidth (str: string, charMargin: number, font: Font) {\r\n        return this._glyphManager.measureStringWidth (str, charMargin, font);\r\n    }\r\n    /** @internal */\r\n    _clipStringToWidth (str: string, width: number, charMargin: number, start: number, font: Font) {\r\n        return this._glyphManager.clipStringToWidth (str, width, charMargin, start, font);\r\n    }\r\n    /** @internal */\r\n    _querySelectorAll (root: RMLNode, selectors: string, excludeRoot: boolean, allowInternal: boolean): RMLElement[] {\r\n        return new RMLSelector(selectors).resolve (root, excludeRoot, allowInternal) as RMLElement[];\r\n    }\r\n    /** @internal */\r\n    _querySelectorOne (root: RMLNode, selectors: string, excludeRoot: boolean, allowInternal): RMLElement {\r\n        return this._querySelectorAll (root, selectors, excludeRoot, allowInternal)[0] || null;\r\n    }\r\n    /** @internal */\r\n    _getTopLayout (): UILayout {\r\n        return this._topLayout;\r\n    }\r\n    /** @internal */\r\n    _getElementById (root: RMLNode, id: string): RMLElement {\r\n        if (root.nodeType === RMLNode.ELEMENT_NODE && (root as RMLElement).id === id) {\r\n            return root as RMLElement;\r\n        }\r\n        for (const child of root.childNodes.values()) {\r\n            const e = this._getElementById (child, id);\r\n            if (e) {\r\n                return e;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /** @internal */\r\n    _getElementsByTagName (root: RMLNode, tagname: string, results: RMLElement[]) {\r\n        if (root.nodeType === RMLNode.ELEMENT_NODE && (root as RMLElement).tagName === tagname) {\r\n            results.push (root as RMLElement);\r\n        }\r\n        for (const child of root.childNodes.values()) {\r\n            this._getElementsByTagName (child, tagname, results);\r\n        }\r\n        return null;\r\n    }\r\n    /** @internal */\r\n    _getElementsByClassName (root: RMLNode, classnames: string[], results: RMLElement[]) {\r\n        if (root.nodeType === RMLNode.ELEMENT_NODE) {\r\n            let matched = true;\r\n            const el = root as RMLElement;\r\n            for (const classname of classnames) {\r\n                if (!el.classList.contains (classname)) {\r\n                    matched = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (matched) {\r\n                results.push (el);\r\n            }\r\n        }\r\n        for (const child of root.childNodes.values()) {\r\n            this._getElementsByClassName (child, classnames, results);\r\n        }\r\n        return null;\r\n    }\r\n    /** @internal */\r\n    _markStyleRefreshForElement (element: RMLNode) {\r\n        if (!this._styleUpdating && element && this._styleRefreshList.indexOf(element) < 0) {\r\n            this._styleRefreshList.push (element);\r\n        }\r\n    }\r\n    /** @internal */\r\n    async _importRuleListFromURL (url: string) {\r\n        const content = await new FileLoader (null, 'text').load (this._baseURI + url) as string;\r\n        if (content) {\r\n            const entries = this._parseStyleContent (content);\r\n            for (const def of entries) {\r\n                for (const rule of def.selector.rules()) {\r\n                    this._ruleListImported.push ({ rule: rule, stylesheet: def.stylesheet, extra: def.extra });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    _parseStyleContent (content: string): { selector: RMLSelector, stylesheet: IStyleSheet, extra: object }[] {\r\n        const result: { selector: RMLSelector, stylesheet: IStyleSheet, extra: object }[] = [];\r\n        content = content.split (/[\\r\\n]+/).join ('').replace (/\\/\\*[\\s\\S]*?\\*\\//g, '');\r\n        while (true) {\r\n            const lbracket = content.indexOf ('{');\r\n            const rbracket = content.indexOf ('}');\r\n            if (lbracket < 0 || rbracket < 0 || lbracket > rbracket) {\r\n                break;\r\n            }\r\n            const sel = content.substring (0, lbracket).trim ();\r\n            const styles = content.substring (lbracket + 1, rbracket);\r\n            content = content.substr (rbracket + 1);\r\n\r\n            const selector = new RMLSelector (sel);\r\n            if (selector.rules().length === 0) {\r\n                continue;\r\n            }\r\n            const extra: object = {};\r\n            const stylesheet = parseStyleSheet (styles, extra);\r\n            if (!stylesheet) {\r\n                continue;\r\n            }\r\n            result.push ({ selector, stylesheet, extra });\r\n        }\r\n        return result;\r\n    }\r\n    /** @internal */\r\n    private _deserializeElement (el: Element): RMLElement {\r\n        const element = this.createElement (el.tagName.toLowerCase());\r\n        for (const attr of el.attributes) {\r\n            element.setAttribute (attr.name, attr.value);\r\n        }\r\n        for (const className of el.classList) {\r\n            element.classList.add (className);\r\n        }\r\n        for (const child of el.childNodes) {\r\n            if (child.nodeType === Node.TEXT_NODE) {\r\n                const text = child.textContent.trim().replace (/\\s+/, ' ');\r\n                if (text !== '') {\r\n                    element.append (text);\r\n                }\r\n            } else if (child.nodeType === Node.ELEMENT_NODE) {\r\n                element.append (this._deserializeElement (child as Element));\r\n            }\r\n        }\r\n        return element;\r\n    }\r\n    /** @internal */\r\n    private async _importLinkContent (link: RMLElement) {\r\n        switch (link.getAttribute ('rel')) {\r\n            case 'stylesheet': {\r\n                await this._importRuleListFromURL (link.getAttribute ('href'))\r\n                    .then (() => this.requireFullStyleRefresh ())\r\n                    .catch (reason => console.error (reason));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    private _serializeToXML (): string {\r\n        const doc = document.implementation.createDocument (null, 'node', null);\r\n        doc.firstChild.remove ();\r\n        if (this.document.documentElement) {\r\n            doc.append (this._createDOMElement (this.document.documentElement, doc, null));\r\n            this._buildDOM (this.document.documentElement, doc, doc.documentElement);\r\n        }\r\n        return new XMLSerializer().serializeToString (doc);\r\n    }\r\n    /** @internal */\r\n    private _buildDOM (root: RMLNode, doc: Document, parent: Element|Document) {\r\n        for (const child of root.childNodes.values()) {\r\n            if (!child._isInternal()) {\r\n                const childElement = this._createDOMElement (child, doc, null);\r\n                parent.append (childElement);\r\n                if (childElement instanceof Element) {\r\n                    this._buildDOM (child, doc, childElement);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    private _createDOMElement (el: RMLNode, doc: Document, out: Element|Node): Element|Node {\r\n        if (el._isText()) {\r\n            out = doc.createTextNode (el.textContent);\r\n        } else if (el.nodeType === RMLNode.ELEMENT_NODE) {\r\n            out = out || doc.createElement ((el as RMLElement).tagName);\r\n            if ((el as RMLElement).className) {\r\n                (out as Element).className = (el as RMLElement).className;\r\n            }\r\n            for (const k of (el as RMLElement).attributes) {\r\n                (out as Element).setAttribute (k.name, k.value);\r\n            }\r\n        }\r\n        return out;\r\n    }\r\n}","import { RMLNode, ElementHittestEvent, Vec2 } from '.';\r\n\r\nexport class GUIHitTestVisitor {\r\n    private _x: number;\r\n    private _y: number;\r\n    private _hits: { element:RMLNode, x:number, y:number }[];\r\n    constructor (x: number, y: number) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._hits = [];\r\n    }\r\n    getHits (): { element:RMLNode, x:number, y:number }[] {\r\n        return this._hits;\r\n    }\r\n    visitNode (w: RMLNode) {\r\n        if (w._isVisible() && !w._isText()) {\r\n            const v = w.toAbsolute ({ x:0, y:0 });\r\n            let x = this._x - v.x;\r\n            let y = this._y - v.y;\r\n            const rc = w.getClippedRect();\r\n            const cx1 = rc ? rc.x : 0;\r\n            const cy1 = rc ? rc.y : 0;\r\n            const cx2 = rc ? rc.x + rc.width : w.getRect().width;\r\n            const cy2 = rc ? rc.y + rc.height : w.getRect().height;\r\n            if (x >= cx1 && x < cx2 && y >= cy1 && y < cy2) {\r\n                const hittestEvent = new ElementHittestEvent (x, y);\r\n                w.dispatchEvent (hittestEvent);\r\n                if (hittestEvent.allow) {\r\n                    this._hits.push ({\r\n                        element: w,\r\n                        x: x,\r\n                        y: y\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { TextureAtlas, AtlasManager, IAtlasInfo, Renderer } from '.';\r\n\r\nexport class ImageManager {\r\n    /** @internal */\r\n    protected _renderer: Renderer;\r\n    /** @internal */\r\n    protected _atlasManager: AtlasManager;\r\n    /** @internal */\r\n    protected _cachedImages: { [name:string]: TextureAtlas };\r\n    /** @internal */\r\n    protected _urlImages: { [url:string]: TextureAtlas };\r\n    constructor (renderer: Renderer) {\r\n        this._renderer = renderer;\r\n        this._cachedImages = {};\r\n        this._urlImages = {};\r\n        this._atlasManager = new AtlasManager (this._renderer, 1024, 1024, 1, false);\r\n        this._createBuiltinImages ();\r\n    }\r\n    get renderer () {\r\n        return this._renderer;\r\n    }\r\n    getImage (name: string): TextureAtlas {\r\n        return this._cachedImages[name] || null;\r\n    }\r\n    dispose () {\r\n        this._cachedImages = {};\r\n        this._urlImages = {};\r\n    }\r\n    /** @internal */\r\n    private _createBuiltinImages () {\r\n        let cvs = document.createElement('canvas');\r\n        cvs.width = 256;\r\n        cvs.height = 256;\r\n        const ctx = cvs.getContext('2d');\r\n        let offsetX = 0;\r\n        let offsetY = 0;\r\n        \r\n        // 测量stroke偏移\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = '#ffffff';\r\n        ctx.clearRect (0, 0, 10, 2);\r\n        ctx.beginPath ();\r\n        ctx.moveTo (0, 0);\r\n        ctx.lineTo (10, 0);\r\n        ctx.stroke ();\r\n        const bitmap = ctx.getImageData (0, 0, 10, 2);\r\n        if (bitmap.data[5 * 4 + 3] < 255) {\r\n            offsetX = 0.5;\r\n            offsetY = 0.5;\r\n        }\r\n    \r\n        let size = 10;\r\n        let atlasInfo: IAtlasInfo;\r\n        ctx.fillStyle = '#ffffff';\r\n    \r\n        // input\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.lineWidth = 1;\r\n        ctx.clearRect (0, 0, size, size);\r\n        ctx.beginPath ();\r\n        const radius = (size - 2) / 2;\r\n        ctx.ellipse (1 + radius + offsetX, 1 + radius + offsetY, radius, radius, 0, 0, 2 * Math.PI);\r\n        ctx.fill ();\r\n        ctx.stroke ();\r\n        atlasInfo = this._atlasManager.pushCanvas ('default.input', ctx, 0, 0, size, size);\r\n        this._cachedImages['default.input'] = new TextureAtlas (this._atlasManager.getAtlasTexture(atlasInfo.atlasIndex), \r\n            { x:atlasInfo.uMin, y:atlasInfo.vMin },\r\n            { x:atlasInfo.uMax, y:atlasInfo.vMax },\r\n            { x:0.5, y:0.5 },\r\n            { x:0.5, y:0.5 });\r\n    \r\n        // button\r\n        ctx.clearRect (0, 0, size, size);\r\n        ctx.beginPath ();\r\n        ctx.ellipse (1 + radius + offsetX, 1 + radius + offsetY, radius, radius, 0, 0, 2 * Math.PI);\r\n        ctx.fill ();\r\n        atlasInfo = this._atlasManager.pushCanvas ('default.button', ctx, 0, 0, size, size);\r\n        this._cachedImages['default.button'] = new TextureAtlas (this._atlasManager.getAtlasTexture(atlasInfo.atlasIndex), \r\n            { x:atlasInfo.uMin, y:atlasInfo.vMin },\r\n            { x:atlasInfo.uMax, y:atlasInfo.vMax },\r\n            { x:0.5, y:0.5 },\r\n            { x:0.5, y:0.5 });\r\n    \r\n        size = 32;\r\n        ctx.clearRect (0, 0, size, size);\r\n        pathTriangle (ctx, ORIENTATION_VERTICAL, 16, 24, -10, 10, -14);\r\n        ctx.fill ();\r\n        atlasInfo = this._atlasManager.pushCanvas ('default.scrollbar.up', ctx, 0, 0, size, size);\r\n        this._cachedImages['default.scrollbar.up'] = new TextureAtlas (this._atlasManager.getAtlasTexture(atlasInfo.atlasIndex), \r\n        { x:atlasInfo.uMin, y:atlasInfo.vMin },\r\n        { x:atlasInfo.uMax, y:atlasInfo.vMax });\r\n\r\n        ctx.clearRect (0, 0, size, size);\r\n        pathTriangle (ctx, ORIENTATION_VERTICAL, 16, 10, -10, 10, 14);\r\n        ctx.fill ();\r\n        atlasInfo = this._atlasManager.pushCanvas ('default.scrollbar.down', ctx, 0, 0, size, size);\r\n        this._cachedImages['default.scrollbar.down'] = new TextureAtlas (this._atlasManager.getAtlasTexture(atlasInfo.atlasIndex), \r\n            { x:atlasInfo.uMin, y:atlasInfo.vMin },\r\n            { x:atlasInfo.uMax, y:atlasInfo.vMax });\r\n       \r\n        ctx.clearRect (0, 0, size, size);\r\n        pathTriangle (ctx, ORIENTATION_HORIZONAL, 24, 16, -10, 10, -14);\r\n        ctx.fill ();\r\n        atlasInfo = this._atlasManager.pushCanvas ('default.scrollbar.left', ctx, 0, 0, size, size);\r\n        this._cachedImages['default.scrollbar.left'] = new TextureAtlas (this._atlasManager.getAtlasTexture(atlasInfo.atlasIndex), \r\n            { x:atlasInfo.uMin, y:atlasInfo.vMin },\r\n            { x:atlasInfo.uMax, y:atlasInfo.vMax });\r\n       \r\n        ctx.clearRect (0, 0, size, size);\r\n        pathTriangle (ctx, ORIENTATION_HORIZONAL, 10, 16, -10, 10, 14);\r\n        ctx.fill ();\r\n        atlasInfo = this._atlasManager.pushCanvas ('default.scrollbar.right', ctx, 0, 0, size, size);\r\n        this._cachedImages['default.scrollbar.right'] = new TextureAtlas (this._atlasManager.getAtlasTexture(atlasInfo.atlasIndex), \r\n            { x:atlasInfo.uMin, y:atlasInfo.vMin },\r\n            { x:atlasInfo.uMax, y:atlasInfo.vMax });\r\n\r\n        cvs = null;\r\n    }\r\n}\r\n\r\nconst ORIENTATION_HORIZONAL = 0;\r\nconst ORIENTATION_VERTICAL = 1;\r\n\r\nfunction pathTriangle (ctx: CanvasRenderingContext2D, orientation: number, anchorX: number, anchorY: number, left: number, right: number, top: number) {\r\n    ctx.beginPath ();\r\n    if (orientation === ORIENTATION_VERTICAL) {\r\n        ctx.moveTo (anchorX + left, anchorY);\r\n        ctx.lineTo (anchorX + right, anchorY);\r\n        ctx.lineTo (anchorX, anchorY + top);\r\n    } else {\r\n        ctx.moveTo (anchorX, anchorY + left);\r\n        ctx.lineTo (anchorX, anchorY + right);\r\n        ctx.lineTo (anchorX + top, anchorY);\r\n    }\r\n    ctx.closePath ();\r\n}\r\n","export * from './types';\r\nexport * from './font';\r\nexport * from './renderer';\r\nexport * from './atlas_manager';\r\nexport * from './glyph_manager';\r\nexport * from './layout';\r\nexport * from './style';\r\nexport * from './texture_atlas';\r\nexport * from './primitive';\r\nexport * from './image_manager';\r\nexport * from './events';\r\nexport * from './gui';\r\nexport * from './nodelist';\r\nexport * from './node';\r\nexport * from './element';\r\nexport * from './selector';\r\nexport * from './style_element';\r\nexport * from './flow_element';\r\nexport * from './dummy_element';\r\nexport * from './document';\r\nexport * from './components/text';\r\nexport * from './components/button';\r\nexport * from './components/input';\r\nexport * from './components/select';\r\nexport * from './components/slider';\r\nexport * from './components/scrollbar';\r\nexport * from './hittest_visitor';\r\n","import { RMLNode, assert, Vec2, Vec4 } from '.';\r\nimport { List, ListIterator} from './misc';\r\nimport * as Yoga from './typeflex/api';\r\nimport { YGNode } from './typeflex/ygnode';\r\nimport { YGMeasureMode } from './typeflex/enums';\r\nimport { YGSize } from './typeflex/yoga';\r\n\r\nexport interface UIRect {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nconst yogaConfig = Yoga.Config.create ();\r\nyogaConfig.config.useWebDefaults = true;\r\n\r\n/** @internal */\r\nexport class UILayout {\r\n    element: RMLNode;\r\n    actualRect: UIRect;\r\n    clientRect: UIRect;\r\n    borderRect: UIRect;\r\n    clippedRect: UIRect;\r\n    scrollRect: UIRect;\r\n    desiredScrollX: number;\r\n    desiredScrollY: number;\r\n    actualScrollX: number;\r\n    actualScrollY: number;\r\n    minScrollX: number;\r\n    maxScrollX: number;\r\n    minScrollY: number;\r\n    maxScrollY: number;\r\n    changeStamp: number;\r\n    node: Yoga.Node;\r\n    protected _parent: UILayout;\r\n    protected _children: List<UILayout>;\r\n    protected _iterator: ListIterator<UILayout>;\r\n    constructor (element: RMLNode) {\r\n        this.element = element;\r\n        this._parent = null;\r\n        this._children = new List<UILayout>();\r\n        this._iterator = null;\r\n        this.actualRect = { x: 0, y: 0, width: 0, height: 0 };\r\n        this.clientRect = { x: 0, y: 0, width: 0, height: 0 };\r\n        this.borderRect = { x: 0, y: 0, width: 0, height: 0 };\r\n        this.clippedRect = null;\r\n        this.scrollRect = { x: 0, y: 0, width: 0, height: 0 };\r\n        this.desiredScrollX = 0;\r\n        this.desiredScrollY = 0;\r\n        this.actualScrollX = 0;\r\n        this.actualScrollY = 0;\r\n        this.minScrollX = 0;\r\n        this.maxScrollX = 0;\r\n        this.minScrollY = 0;\r\n        this.maxScrollY = 0;\r\n        this.changeStamp = 0;\r\n        this.node = Yoga.Node.create (yogaConfig);\r\n        if (element && element._isText()) {\r\n            this.node.setMeasureFunc ((node: YGNode, width: number, widthMode: YGMeasureMode, height: number, heightMode: YGMeasureMode): YGSize => {\r\n                const rc = element._measureContentSize ({x: 0, y: 0, width: 0, height: 0});\r\n                const size = new YGSize ();\r\n                size.width = rc.width;\r\n                size.height = rc.height;\r\n                return size;\r\n            });\r\n        }\r\n    }\r\n    invalidateLayout () {\r\n        this.element?._invalidateLayout ();\r\n    }\r\n    getNumChildren (): number {\r\n        return this._children.length;\r\n    }\r\n    appendChild (child: UILayout) {\r\n        assert (this._children.length ===  this.node.getChildCount(), 'Failed to append child layout: child count mismatch');\r\n        assert (child && !child._parent, 'Failed to append child layout: invalid child or child already has an parent', true);\r\n        child._parent = this;\r\n        child._iterator = this._children.append (child);\r\n        this.node.insertChild (child.node, this.node.getChildCount());\r\n        this.invalidateLayout ();\r\n    }\r\n    removeChild (child: UILayout) {\r\n        assert (this._children.length ===  this.node.getChildCount(), 'Failed to append child layout: child count mismatch');\r\n        if (child._iterator && child._iterator.list === this._children) {\r\n            this.node.removeChild (child.node);\r\n            this.invalidateLayout ();\r\n            this._children.remove (child._iterator);\r\n            child._parent = null;\r\n            child._iterator = null;\r\n        }\r\n    }\r\n    insertChild (child: UILayout, at: UILayout) {\r\n        assert (this._children.length ===  this.node.getChildCount(), 'Failed to append child layout: child count mismatch');\r\n        assert (child && !child._parent, 'Failed to append child layout: invalid child or child already has an parent', true);\r\n        assert (at && at._parent === this, 'Failed to append child layout: invalid reference child', true);\r\n        child._parent = this;\r\n        child._iterator = this._children.insertAt (child, at._iterator);\r\n        const index = this.node.node.getChildren().indexOf (at.node.node);\r\n        assert (index >= 0, 'Failed to append child layout: cannot get reference child index', true);\r\n        this.node.insertChild (child.node, index);\r\n        this.invalidateLayout ();\r\n    }\r\n    firstChild (): UILayout {\r\n        const it = this._children.begin ();\r\n        return it.valid() ? it.data : null;\r\n    }\r\n    lastChild (): UILayout {\r\n        const it = this._children.rbegin ();\r\n        return it.valid() ? it.data : null;\r\n    }\r\n    nextSibling (): UILayout {\r\n        const it = this._iterator?.getNext ();\r\n        return it && it.valid() ? it.data : null;\r\n    }\r\n    previousSibling (): UILayout {\r\n        const it = this._iterator?.getPrev ();\r\n        return it && it.valid() ? it.data : null;\r\n    }\r\n    markDirty () {\r\n        if (this.element && this.element._isText()) {\r\n            this.node.markDirty ();\r\n        }\r\n    }\r\n    calcLayout (): void {\r\n        assert (!this._parent, 'calcLayout must be called on root element', true);\r\n        this.node.calculateLayout (Yoga.UNDEFINED, Yoga.UNDEFINED, Yoga.DIRECTION_LTR);\r\n        this.syncComputedRect (0, 0, false);\r\n    }\r\n    updateStyle (val: string): void {\r\n        this.element._updateStyle (val);\r\n    }\r\n    updateBorder (val: number): void {\r\n        this.element._updateBorder ();\r\n    }\r\n    updateZIndex (): void {\r\n        this.element._updateZIndex ();\r\n    }\r\n    updateCursor (val: string):void {\r\n        this.element._updateCursor (val);\r\n    }\r\n    updateDisplay (val: string): void {\r\n        this.element._updateDisplay (val);\r\n    }\r\n    updateFont (val: string): void {\r\n        this.element.gui?.invalidateLayout ();\r\n        this.element._updateFont (val);\r\n    }\r\n    updateFontSize (val: string): void {\r\n        this.element._updateFontSize (val);\r\n    }\r\n    updateFontFamily (val: string): void {\r\n        this.element._updateFontFamily (val);\r\n    }\r\n    updateFontColor (val: string): void {\r\n        this.element._updateFontColor (val);\r\n    }\r\n    updateBorderColor (edge: number, val: Vec4): void {\r\n        switch (edge) {\r\n            case Yoga.EDGE_LEFT:\r\n                this.element._updateBorderLeftColor (val);\r\n                break;\r\n            case Yoga.EDGE_TOP:\r\n                this.element._updateBorderTopColor (val);\r\n                break;\r\n            case Yoga.EDGE_RIGHT:\r\n                this.element._updateBorderRightColor (val);\r\n                break;\r\n            case Yoga.EDGE_BOTTOM:\r\n                this.element._updateBorderBottomColor (val);\r\n                break;\r\n        }\r\n    }\r\n    updateBackgroundColor (val: Vec4): void {\r\n        this.element._updateBackgroundColor (val);\r\n    }\r\n    protected syncComputedRect (px: number, py: number, markChanged: boolean) {\r\n        const paddingLeft = this.node.getComputedPadding(Yoga.EDGE_LEFT);\r\n        const paddingTop = this.node.getComputedPadding(Yoga.EDGE_TOP);\r\n        const paddingRight = this.node.getComputedPadding(Yoga.EDGE_RIGHT);\r\n        const paddingBottom = this.node.getComputedPadding(Yoga.EDGE_BOTTOM);\r\n        const borderLeft = this.node.getComputedBorder(Yoga.EDGE_LEFT);\r\n        const borderTop = this.node.getComputedBorder(Yoga.EDGE_TOP);\r\n        const borderRight = this.node.getComputedBorder(Yoga.EDGE_RIGHT);\r\n        const borderBottom = this.node.getComputedBorder(Yoga.EDGE_BOTTOM);\r\n\r\n        const rect = this.actualRect;        \r\n        const x = this.node.getComputedLeft () - px;\r\n        const y = this.node.getComputedTop () - py;\r\n        const w = this.node.getComputedWidth ();\r\n        const h = this.node.getComputedHeight ();\r\n        if (!markChanged && (x !== rect.x || y !== rect.y || w !== rect.width || h !== rect.height)) {\r\n            markChanged = true;\r\n        }\r\n        rect.x = x;\r\n        rect.y = y;\r\n        rect.width = w;\r\n        rect.height = h;\r\n\r\n        const clientRect = this.clientRect;\r\n        const cx = paddingLeft + borderLeft;\r\n        const cy = paddingTop + borderTop;\r\n        const cw = Math.max(0, rect.width - paddingLeft - paddingRight - borderLeft - borderRight);\r\n        const ch = Math.max(0, rect.height - paddingTop - paddingBottom - borderTop - borderBottom);\r\n        if (!markChanged && (cx !== clientRect.x || cy !== clientRect.y || cw !== clientRect.width || ch !== clientRect.height)) {\r\n            markChanged = true;\r\n        }\r\n        clientRect.x = cx;\r\n        clientRect.y = cy;\r\n        clientRect.width = cw;\r\n        clientRect.height = ch;\r\n\r\n        const borderRect = this.borderRect;\r\n        const bx = borderLeft;\r\n        const by = borderTop;\r\n        const bw = Math.max(0, rect.width - borderLeft - borderRight);\r\n        const bh = Math.max(0, rect.height - borderTop - borderBottom);\r\n        if (!markChanged && (bx !== borderRect.x || by !== borderRect.y || bw !== borderRect.width || bh !== borderRect.height)) {\r\n            markChanged = true;\r\n        }\r\n        borderRect.x = bx;\r\n        borderRect.y = by;\r\n        borderRect.width = bw;\r\n        borderRect.height = bh;\r\n\r\n        this.actualScrollX = 0;\r\n        this.actualScrollY = 0;\r\n        let minX = 0;\r\n        let minY = 0;\r\n        let maxX = clientRect.width;\r\n        let maxY = clientRect.height;\r\n        this._children.forEach (child => {\r\n            if (child.element._isVisible()) {\r\n                child.syncComputedRect (paddingLeft + borderLeft, paddingTop + borderTop, markChanged);\r\n                const x1 = child.actualRect.x;\r\n                const y1 = child.actualRect.y;\r\n                const x2 = x1 + child.actualRect.width;\r\n                const y2 = y1 + child.actualRect.height;\r\n                minX = Math.min (minX, x1);\r\n                minY = Math.min (minY, y1);\r\n                maxX = Math.max (maxX, x2);\r\n                maxY = Math.max (maxY, y2);\r\n            }\r\n        });\r\n        this.scrollRect = {\r\n            x: minX,\r\n            y: minY,\r\n            width: maxX - minX,\r\n            height: maxY - minY\r\n        };\r\n        this.minScrollX = this.scrollRect.x;\r\n        this.maxScrollX = this.scrollRect.x + this.scrollRect.width - clientRect.width;\r\n        this.minScrollY = this.scrollRect.y;\r\n        this.maxScrollY = this.scrollRect.y + this.scrollRect.height - clientRect.height;\r\n\r\n        if (markChanged) {\r\n            this.changeStamp++;\r\n        }\r\n    }\r\n    thisToParentClient (p: Vec2): Vec2 {\r\n        p.x += this.actualRect.x;\r\n        p.y += this.actualRect.y;\r\n        return p;\r\n    }\r\n    thisToParent (p: Vec2): Vec2 {\r\n        this.thisToParentClient (p);\r\n        if (this._parent) {\r\n            p.x += this._parent.clientRect.x;\r\n            p.y += this._parent.clientRect.y;\r\n        }\r\n        return p;\r\n    }\r\n    clipRectForChildren (): UIRect {\r\n        const rcClient = this.clientRect;\r\n        if (this.clippedRect) {\r\n            const x = Math.max (rcClient.x, this.clippedRect.x);\r\n            const y = Math.max (rcClient.y, this.clippedRect.y);\r\n            const width = Math.max (0, Math.min(this.clippedRect.x + this.clippedRect.width, rcClient.x + rcClient.width) - x);\r\n            const height = Math.max (0, Math.min(this.clippedRect.y + this.clippedRect.height, rcClient.y + rcClient.height) - y);\r\n            return { x, y, width, height };\r\n        } else {\r\n            return rcClient;\r\n        }\r\n    }\r\n    toAbsolute (v: Vec2): Vec2 {\r\n        let layout: UILayout = this;\r\n        v.x += layout.actualRect.x;\r\n        v.y += layout.actualRect.y;\r\n        while (layout = layout._parent) {\r\n            v.x += layout.actualRect.x + layout.clientRect.x;\r\n            v.y += layout.actualRect.y + layout.clientRect.y;\r\n        }\r\n        return v;\r\n    }\r\n    clipToParent (parent: UILayout): UIRect {\r\n        const parentRect: UIRect = parent.clipRectForChildren ();\r\n        const vThis = this.toAbsolute ({ x:0, y:0 });\r\n        const vParent = parent.toAbsolute ({ x:parentRect.x, y:parentRect.y});\r\n        const x1This = vThis.x;\r\n        const y1This = vThis.y;\r\n        const x2This = x1This + this.actualRect.width;\r\n        const y2This = y1This + this.actualRect.height;\r\n        const x1Parent = vParent.x;\r\n        const y1Parent = vParent.y;\r\n        const x2Parent = x1Parent + parentRect.width;\r\n        const y2Parent = y1Parent + parentRect.height;\r\n        const x1Clip = Math.max (x1This, x1Parent);\r\n        const y1Clip = Math.max (y1This, y1Parent);\r\n        const x2Clip = Math.min (x2This, x2Parent);\r\n        const y2Clip = Math.min (y2This, y2Parent);\r\n        return {\r\n            x: x1Clip - x1This,\r\n            y: y1Clip - y1This,\r\n            width: Math.max (0, x2Clip - x1Clip),\r\n            height: Math.max (0, y2Clip - y1Clip)\r\n        }\r\n    }\r\n    calcLayoutScroll () {\r\n        scrollX = Math.max (this.minScrollX, Math.min (this.maxScrollX, this.desiredScrollX));\r\n        scrollY = Math.max (this.minScrollY, Math.min (this.maxScrollY, this.desiredScrollY));\r\n        if (scrollX !== this.actualScrollX || scrollY !== this.actualScrollY) {\r\n            this._children.forEach (child => {\r\n                if (child.element.style.position !== 'fixed') {\r\n                    child.actualRect.x += this.actualScrollX - scrollX;\r\n                    child.actualRect.y += this.actualScrollY - scrollY;\r\n                    child._markChanged ();\r\n                }\r\n            });\r\n            this.actualScrollX = scrollX;\r\n            this.actualScrollY = scrollY;\r\n        }\r\n        this._children.forEach (child => {\r\n            child.calcLayoutScroll ();\r\n        });\r\n    }\r\n    calcLayoutClip () {\r\n        let parent: UILayout = this._parent;\r\n        let xClip: UIRect = null;\r\n        let yClip: UIRect = null;\r\n        if (!this._isClipX()) {\r\n            while (parent && !parent._isClipX()) {\r\n                parent = parent._parent;\r\n            }\r\n            parent = parent ? parent._parent : null;\r\n        }\r\n        if (parent) {\r\n            xClip = this.clipToParent (parent);\r\n        }\r\n        parent = this._parent;\r\n        if (!this._isClipY()) {\r\n            while (parent && !parent._isClipY()) {\r\n                parent = parent._parent;\r\n            }\r\n            parent = parent ? parent._parent : null;\r\n        }\r\n        if (parent) {\r\n            yClip = this.clipToParent (parent);\r\n        }\r\n        const lastClippedRect = this.clippedRect;\r\n        if (xClip === null) {\r\n            this.clippedRect = yClip;\r\n        } else if (yClip === null) {\r\n            this.clippedRect = xClip;\r\n        } else {\r\n            this.clippedRect = {\r\n                x: xClip.x,\r\n                y: yClip.y,\r\n                width: xClip.width,\r\n                height: yClip.height\r\n            };\r\n        }\r\n        if (this.clippedRect && this.clippedRect.width === this.actualRect.width && this.clippedRect.height === this.actualRect.height) {\r\n            this.clippedRect = null;\r\n        }\r\n        let markChanged = false;\r\n        if (this.clippedRect !== lastClippedRect) {\r\n            if (this.clippedRect && lastClippedRect) {\r\n                markChanged = this.clippedRect.x !== lastClippedRect.x || this.clippedRect.y !== lastClippedRect.y || this.clippedRect.width !== lastClippedRect.width || this.clippedRect.height !== lastClippedRect.height;\r\n            } else {\r\n                markChanged = true;\r\n            }\r\n            if (markChanged) {\r\n                this.changeStamp++;\r\n            }\r\n        }\r\n        this._children.forEach (child => {\r\n            child.calcLayoutClip ();\r\n        });\r\n    }\r\n    private _markChanged () {\r\n        this.changeStamp++;\r\n        this._children.forEach (child => {\r\n            child._markChanged ();\r\n        });\r\n    }\r\n    private _isClipX (): boolean {\r\n        return this._parent?.element?.style.overflowX !== 'visible';\r\n    }\r\n    private _isClipY (): boolean {\r\n        return this._parent?.element?.style.overflowY !== 'visible';\r\n    }\r\n}","import { IRectangle, Rectangle } from \"./geom/Rectangle\";\r\nimport { IOption } from \"./maxrects-packer\";\r\n\r\nexport interface IBin {\r\n    width: number;\r\n    height: number;\r\n    maxWidth: number;\r\n    maxHeight: number;\r\n    freeRects: IRectangle[];\r\n    rects: IRectangle[];\r\n    options: IOption;\r\n    [propName: string]: any;\r\n}\r\n\r\nexport abstract class Bin<T extends IRectangle> implements IBin {\r\n    public width!: number;\r\n    public height!: number;\r\n    public maxWidth!: number;\r\n    public maxHeight!: number;\r\n    public freeRects!: IRectangle[];\r\n    public rects!: T[];\r\n    public options!: IOption;\r\n    public abstract add (rect: T): T | undefined;\r\n    public abstract add (width: number, height: number, data: any): T | undefined;\r\n    public abstract reset (deepRest: boolean): void;\r\n    public abstract repack (): T[] | undefined;\r\n\r\n    public data?: any;\r\n    public tag?: string;\r\n\r\n    protected _dirty: number = 0;\r\n    get dirty (): boolean { return this._dirty > 0 || this.rects.some(rect => rect.dirty); }\r\n    /**\r\n     * Set bin dirty status\r\n     *\r\n     * @memberof Bin\r\n     */\r\n    public setDirty (value: boolean = true): void {\r\n        this._dirty = value ? this._dirty + 1 : 0;\r\n        if (!value) {\r\n            for (let rect of this.rects) {\r\n                if (rect.setDirty) rect.setDirty(false);\r\n            }\r\n        }\r\n    }\r\n}","export interface IRectangle {\r\n    width: number;\r\n    height: number;\r\n    x: number;\r\n    y: number;\r\n    [propName: string]: any;\r\n}\r\n\r\nexport class Rectangle implements IRectangle {\r\n    /**\r\n     * Oversized tag on rectangle which is bigger than packer itself.\r\n     *\r\n     * @type {boolean}\r\n     * @memberof Rectangle\r\n     */\r\n    public oversized: boolean = false;\r\n\r\n    /**\r\n     * Creates an instance of Rectangle.\r\n     *\r\n     * @param {number} [width=0]\r\n     * @param {number} [height=0]\r\n     * @param {number} [x=0]\r\n     * @param {number} [y=0]\r\n     * @param {boolean} [rot=false]\r\n     * @param {boolean} [allowRotation=false]\r\n     * @memberof Rectangle\r\n     */\r\n    constructor (\r\n        width: number = 0,\r\n        height: number = 0,\r\n        x: number = 0,\r\n        y: number = 0,\r\n        rot: boolean = false,\r\n        allowRotation: boolean | undefined = undefined\r\n    ) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._x = x;\r\n        this._y = y;\r\n        this._data = {};\r\n        this._rot = rot;\r\n        this._allowRotation = allowRotation;\r\n    }\r\n\r\n    /**\r\n     * Test if two given rectangle collide each other\r\n     *\r\n     * @static\r\n     * @param {IRectangle} first\r\n     * @param {IRectangle} second\r\n     * @returns\r\n     * @memberof Rectangle\r\n     */\r\n    public static Collide (first: IRectangle, second: IRectangle) { return first.collide(second); }\r\n\r\n    /**\r\n     * Test if the first rectangle contains the second one\r\n     *\r\n     * @static\r\n     * @param {IRectangle} first\r\n     * @param {IRectangle} second\r\n     * @returns\r\n     * @memberof Rectangle\r\n     */\r\n    public static Contain (first: IRectangle, second: IRectangle) { return first.contain(second); }\r\n\r\n    /**\r\n     * Get the area (w * h) of the rectangle\r\n     *\r\n     * @returns {number}\r\n     * @memberof Rectangle\r\n     */\r\n    public area (): number { return this.width * this.height; }\r\n\r\n    /**\r\n     * Test if the given rectangle collide with this rectangle.\r\n     *\r\n     * @param {IRectangle} rect\r\n     * @returns {boolean}\r\n     * @memberof Rectangle\r\n     */\r\n    public collide (rect: IRectangle): boolean {\r\n        return (\r\n            rect.x < this.x + this.width &&\r\n            rect.x + rect.width > this.x &&\r\n            rect.y < this.y + this.height &&\r\n            rect.y + rect.height > this.y\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Test if this rectangle contains the given rectangle.\r\n     *\r\n     * @param {IRectangle} rect\r\n     * @returns {boolean}\r\n     * @memberof Rectangle\r\n     */\r\n    public contain (rect: IRectangle): boolean {\r\n        return (rect.x >= this.x && rect.y >= this.y &&\r\n                rect.x + rect.width <= this.x + this.width && rect.y + rect.height <= this.y + this.height);\r\n    }\r\n\r\n    protected _width: number;\r\n    get width (): number { return this._width; }\r\n    set width (value: number) {\r\n        if (value === this._width) return;\r\n        this._width = value;\r\n        this._dirty ++;\r\n    }\r\n\r\n    protected _height: number;\r\n    get height (): number { return this._height; }\r\n    set height (value: number) {\r\n        if (value === this._height) return;\r\n        this._height = value;\r\n        this._dirty ++;\r\n    }\r\n\r\n    protected _x: number;\r\n    get x (): number { return this._x; }\r\n    set x (value: number) {\r\n        if (value === this._x) return;\r\n        this._x = value;\r\n        this._dirty ++;\r\n    }\r\n\r\n    protected _y: number;\r\n    get y (): number { return this._y; }\r\n    set y (value: number) {\r\n        if (value === this._y) return;\r\n        this._y = value;\r\n        this._dirty ++;\r\n    }\r\n\r\n    protected _rot: boolean = false;\r\n\r\n    /**\r\n     * If the rectangle is rotated\r\n     *\r\n     * @type {boolean}\r\n     * @memberof Rectangle\r\n     */\r\n    get rot (): boolean { return this._rot; }\r\n\r\n    /**\r\n     * Set the rotate tag of the rectangle.\r\n     *\r\n     * note: after `rot` is set, `width/height` of this rectangle is swaped.\r\n     *\r\n     * @memberof Rectangle\r\n     */\r\n    set rot (value: boolean) {\r\n        if (this._allowRotation === false) return;\r\n\r\n        if (this._rot !== value) {\r\n            const tmp = this.width;\r\n            this.width = this.height;\r\n            this.height = tmp;\r\n            this._rot = value;\r\n            this._dirty ++;\r\n        }\r\n    }\r\n\r\n    protected _allowRotation: boolean | undefined = undefined;\r\n\r\n    /**\r\n     * If the rectangle allow rotation\r\n     *\r\n     * @type {boolean}\r\n     * @memberof Rectangle\r\n     */\r\n    get allowRotation (): boolean | undefined { return this._allowRotation; }\r\n\r\n    /**\r\n     * Set the allowRotation tag of the rectangle.\r\n     *\r\n     * @memberof Rectangle\r\n     */\r\n    set allowRotation (value: boolean | undefined) {\r\n        if (this._allowRotation !== value) {\r\n            this._allowRotation = value;\r\n            this._dirty ++;\r\n        }\r\n    }\r\n\r\n    protected _data: any;\r\n    get data (): any { return this._data; }\r\n    set data (value: any) {\r\n        if (value === null || value === this._data) return;\r\n        this._data = value;\r\n        // extract allowRotation settings\r\n        if (typeof value === \"object\" && value.hasOwnProperty(\"allowRotation\")) {\r\n            this._allowRotation = value.allowRotation;\r\n        }\r\n        this._dirty ++;\r\n    }\r\n\r\n    protected _dirty: number = 0;\r\n    get dirty (): boolean { return this._dirty > 0; }\r\n    public setDirty (value: boolean = true): void { this._dirty = value ? this._dirty + 1 : 0; }\r\n}","export { Rectangle, IRectangle } from \"./geom/Rectangle\";\r\nexport { MaxRectsPacker, PACKING_LOGIC, IOption } from \"./maxrects-packer\";\r\nexport { Bin, IBin } from \"./abstract-bin\";\r\nexport { MaxRectsBin } from \"./maxrects-bin\";\r\nexport { OversizedElementBin } from \"./oversized-element-bin\";","import { EDGE_MAX_VALUE, PACKING_LOGIC, IOption } from \"./maxrects-packer\";\r\nimport { Rectangle, IRectangle } from \"./geom/Rectangle\";\r\nimport { Bin } from \"./abstract-bin\";\r\n\r\nexport class MaxRectsBin<T extends IRectangle = Rectangle> extends Bin<T> {\r\n    public width: number;\r\n    public height: number;\r\n    public freeRects: Rectangle[] = [];\r\n    public rects: T[] = [];\r\n    private verticalExpand: boolean = false;\r\n    private stage: Rectangle;\r\n    private border: number;\r\n\r\n    constructor (\r\n        public maxWidth: number = EDGE_MAX_VALUE,\r\n        public maxHeight: number = EDGE_MAX_VALUE,\r\n        public padding: number = 0,\r\n        public options: IOption = { smart: true, pot: true, square: true, allowRotation: false, tag: false, border: 0, logic: PACKING_LOGIC.MAX_EDGE }\r\n    ) {\r\n        super();\r\n        this.width = this.options.smart ? 0 : maxWidth;\r\n        this.height = this.options.smart ? 0 : maxHeight;\r\n        this.border = this.options.border ? this.options.border : 0;\r\n        this.freeRects.push(new Rectangle(\r\n            this.maxWidth + this.padding - this.border * 2,\r\n            this.maxHeight + this.padding - this.border * 2,\r\n            this.border,\r\n            this.border));\r\n        this.stage = new Rectangle(this.width, this.height);\r\n    }\r\n\r\n    public add (rect: T): T | undefined;\r\n    public add (width: number, height: number, data: any): T | undefined;\r\n    public add (...args: any[]): any {\r\n        let data: any;\r\n        let rect: IRectangle;\r\n        if (args.length === 1) {\r\n            if (typeof args[0] !== 'object') throw new Error(\"MacrectsBin.add(): Wrong parameters\");\r\n            rect = args[0] as T;\r\n            // Check if rect.tag match bin.tag, if bin.tag not defined, it will accept any rect\r\n            let tag = (rect.data && rect.data.tag) ? rect.data.tag : rect.tag ? rect.tag : undefined;\r\n            if (this.options.tag && this.tag !== tag) return undefined;\r\n        } else {\r\n            data = args.length > 2 ? args[2] : null;\r\n            // Check if data.tag match bin.tag, if bin.tag not defined, it will accept any rect\r\n            if (this.options.tag) {\r\n                if (data && this.tag !== data.tag) return undefined;\r\n                if (!data && this.tag) return undefined;\r\n            }\r\n            rect = new Rectangle(args[0], args[1]);\r\n            rect.data = data;\r\n            rect.setDirty(false);\r\n        }\r\n\r\n        const result = this.place(rect);\r\n        if (result) this.rects.push(result);\r\n        return result;\r\n    }\r\n\r\n    public repack (): T[] | undefined {\r\n        let unpacked: T[] = [];\r\n        this.reset();\r\n        // re-sort rects from big to small\r\n        this.rects.sort((a, b) => {\r\n            const result = Math.max(b.width, b.height) - Math.max(a.width, a.height);\r\n            if (result === 0 && a.hash && b.hash) {\r\n                return a.hash > b.hash ? -1 : 1;\r\n            } else return result;\r\n        });\r\n        for (let rect of this.rects) {\r\n            if (!this.place(rect)) {\r\n                unpacked.push(rect);\r\n            }\r\n        }\r\n        for (let rect of unpacked) this.rects.splice(this.rects.indexOf(rect), 1);\r\n        return unpacked.length > 0 ? unpacked : undefined;\r\n    }\r\n\r\n    public reset (deepReset: boolean = false, resetOption: boolean = false): void {\r\n        if (deepReset) {\r\n            if (this.data) delete this.data;\r\n            if (this.tag) delete this.tag;\r\n            this.rects = [];\r\n            if (resetOption) {\r\n                this.options = {\r\n                    smart: true,\r\n                    pot: true,\r\n                    square: true,\r\n                    allowRotation: false,\r\n                    tag: false,\r\n                    border: 0\r\n                };\r\n            }\r\n        }\r\n        this.width = this.options.smart ? 0 : this.maxWidth;\r\n        this.height = this.options.smart ? 0 : this.maxHeight;\r\n        this.border = this.options.border ? this.options.border : 0;\r\n        this.freeRects = [new Rectangle(\r\n            this.maxWidth + this.padding - this.border * 2,\r\n            this.maxHeight + this.padding - this.border * 2,\r\n            this.border,\r\n            this.border)];\r\n        this.stage = new Rectangle(this.width, this.height);\r\n        this._dirty = 0;\r\n    }\r\n\r\n    private place (rect: IRectangle): T | undefined {\r\n        // recheck if tag matched\r\n        let tag = (rect.data && rect.data.tag) ? rect.data.tag : rect.tag ? rect.tag : undefined;\r\n        if (this.options.tag && this.tag !== tag) return undefined;\r\n\r\n        let node: IRectangle | undefined;\r\n        let allowRotation: boolean | undefined;\r\n        // getter/setter do not support hasOwnProperty()\r\n        if (rect.hasOwnProperty(\"_allowRotation\") && rect.allowRotation !== undefined) {\r\n            allowRotation = rect.allowRotation; // Per Rectangle allowRotation override packer settings\r\n        } else {\r\n            allowRotation = this.options.allowRotation;\r\n        }\r\n        node = this.findNode(rect.width + this.padding, rect.height + this.padding, allowRotation);\r\n\r\n        if (node) {\r\n            this.updateBinSize(node);\r\n            let numRectToProcess = this.freeRects.length;\r\n            let i: number = 0;\r\n            while (i < numRectToProcess) {\r\n                if (this.splitNode(this.freeRects[i], node)) {\r\n                    this.freeRects.splice(i, 1);\r\n                    numRectToProcess--;\r\n                    i--;\r\n                }\r\n                i++;\r\n            }\r\n            this.pruneFreeList();\r\n            this.verticalExpand = this.width > this.height ? true : false;\r\n            rect.x = node.x;\r\n            rect.y = node.y;\r\n            if (rect.rot === undefined) rect.rot = false;\r\n            rect.rot = node.rot ? !rect.rot : rect.rot;\r\n            this._dirty ++;\r\n            return rect as T;\r\n        } else if (!this.verticalExpand) {\r\n            if (this.updateBinSize(new Rectangle(\r\n                rect.width + this.padding, rect.height + this.padding,\r\n                this.width + this.padding - this.border, this.border\r\n            )) || this.updateBinSize(new Rectangle(\r\n                rect.width + this.padding, rect.height + this.padding,\r\n                this.border, this.height + this.padding - this.border\r\n            ))) {\r\n                return this.place(rect);\r\n            }\r\n        } else {\r\n            if (this.updateBinSize(new Rectangle(\r\n                rect.width + this.padding, rect.height + this.padding,\r\n                this.border, this.height + this.padding - this.border\r\n            )) || this.updateBinSize(new Rectangle(\r\n                rect.width + this.padding, rect.height + this.padding,\r\n                this.width + this.padding - this.border, this.border\r\n            ))) {\r\n                return this.place(rect);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private findNode (width: number, height: number, allowRotation?: boolean): Rectangle | undefined {\r\n        let score: number = Number.MAX_VALUE;\r\n        let areaFit: number;\r\n        let r: Rectangle;\r\n        let bestNode: Rectangle | undefined;\r\n        for (let i in this.freeRects) {\r\n            r = this.freeRects[i];\r\n            if (r.width >= width && r.height >= height) {\r\n                areaFit = (this.options.logic === PACKING_LOGIC.MAX_AREA) ?\r\n                    r.width * r.height - width * height :\r\n                    Math.min(r.width - width, r.height - height);\r\n                if (areaFit < score) {\r\n                    bestNode = new Rectangle(width, height, r.x, r.y);\r\n                    score = areaFit;\r\n                }\r\n            }\r\n\r\n            if (!allowRotation) continue;\r\n\r\n            // Continue to test 90-degree rotated rectangle\r\n            if (r.width >= height && r.height >= width) {\r\n                areaFit = (this.options.logic === PACKING_LOGIC.MAX_AREA) ?\r\n                    r.width * r.height - height * width :\r\n                    Math.min(r.height - width, r.width - height);\r\n                if (areaFit < score) {\r\n                    bestNode = new Rectangle(height, width, r.x, r.y, true); // Rotated node\r\n                    score = areaFit;\r\n                }\r\n            }\r\n        }\r\n        return bestNode;\r\n    }\r\n\r\n    private splitNode (freeRect: IRectangle, usedNode: IRectangle): boolean {\r\n        // Test if usedNode intersect with freeRect\r\n        if (!freeRect.collide(usedNode)) return false;\r\n\r\n        // Do vertical split\r\n        if (usedNode.x < freeRect.x + freeRect.width && usedNode.x + usedNode.width > freeRect.x) {\r\n            // New node at the top side of the used node\r\n            if (usedNode.y > freeRect.y && usedNode.y < freeRect.y + freeRect.height) {\r\n                let newNode: Rectangle = new Rectangle(freeRect.width, usedNode.y - freeRect.y, freeRect.x, freeRect.y);\r\n                this.freeRects.push(newNode);\r\n            }\r\n            // New node at the bottom side of the used node\r\n            if (usedNode.y + usedNode.height < freeRect.y + freeRect.height) {\r\n                let newNode = new Rectangle(\r\n                    freeRect.width,\r\n                    freeRect.y + freeRect.height - (usedNode.y + usedNode.height),\r\n                    freeRect.x,\r\n                    usedNode.y + usedNode.height\r\n                );\r\n                this.freeRects.push(newNode);\r\n            }\r\n        }\r\n\r\n        // Do Horizontal split\r\n        if (usedNode.y < freeRect.y + freeRect.height &&\r\n            usedNode.y + usedNode.height > freeRect.y) {\r\n            // New node at the left side of the used node.\r\n            if (usedNode.x > freeRect.x && usedNode.x < freeRect.x + freeRect.width) {\r\n                let newNode = new Rectangle(usedNode.x - freeRect.x, freeRect.height, freeRect.x, freeRect.y);\r\n                this.freeRects.push(newNode);\r\n            }\r\n            // New node at the right side of the used node.\r\n            if (usedNode.x + usedNode.width < freeRect.x + freeRect.width) {\r\n                let newNode = new Rectangle(\r\n                    freeRect.x + freeRect.width - (usedNode.x + usedNode.width),\r\n                    freeRect.height,\r\n                    usedNode.x + usedNode.width,\r\n                    freeRect.y\r\n                );\r\n                this.freeRects.push(newNode);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private pruneFreeList () {\r\n        // Go through each pair of freeRects and remove any rects that is redundant\r\n        let i: number = 0;\r\n        let j: number = 0;\r\n        let len: number = this.freeRects.length;\r\n        while (i < len) {\r\n            j = i + 1;\r\n            let tmpRect1 = this.freeRects[i];\r\n            while (j < len) {\r\n                let tmpRect2 = this.freeRects[j];\r\n                if (tmpRect2.contain(tmpRect1)) {\r\n                    this.freeRects.splice(i, 1);\r\n                    i--;\r\n                    len--;\r\n                    break;\r\n                }\r\n                if (tmpRect1.contain(tmpRect2)) {\r\n                    this.freeRects.splice(j, 1);\r\n                    j--;\r\n                    len--;\r\n                }\r\n                j++;\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n\r\n    private updateBinSize (node: IRectangle): boolean {\r\n        if (!this.options.smart) return false;\r\n        if (this.stage.contain(node)) return false;\r\n        let tmpWidth: number = Math.max(this.width, node.x + node.width - this.padding + this.border);\r\n        let tmpHeight: number = Math.max(this.height, node.y + node.height - this.padding + this.border);\r\n        if (this.options.allowRotation) {\r\n            // do extra test on rotated node whether it's a better choice\r\n            const rotWidth: number = Math.max(this.width, node.x + node.height - this.padding + this.border);\r\n            const rotHeight: number = Math.max(this.height, node.y + node.width - this.padding + this.border);\r\n            if (rotWidth * rotHeight < tmpWidth * tmpHeight) {\r\n                tmpWidth = rotWidth;\r\n                tmpHeight = rotHeight;\r\n            }\r\n        }\r\n        if (this.options.pot) {\r\n            tmpWidth = Math.pow(2, Math.ceil(Math.log(tmpWidth) * Math.LOG2E));\r\n            tmpHeight = Math.pow(2, Math.ceil(Math.log(tmpHeight) * Math.LOG2E));\r\n        }\r\n        if (this.options.square) {\r\n            tmpWidth = tmpHeight = Math.max(tmpWidth, tmpHeight);\r\n        }\r\n        if (tmpWidth > this.maxWidth + this.padding || tmpHeight > this.maxHeight + this.padding) {\r\n            return false;\r\n        }\r\n        this.expandFreeRects(tmpWidth + this.padding, tmpHeight + this.padding);\r\n        this.width = this.stage.width = tmpWidth;\r\n        this.height = this.stage.height = tmpHeight;\r\n        return true;\r\n    }\r\n\r\n    private expandFreeRects (width: number, height: number) {\r\n        this.freeRects.forEach((freeRect, index) => {\r\n            if (freeRect.x + freeRect.width >= Math.min(this.width + this.padding - this.border, width)) {\r\n                freeRect.width = width - freeRect.x - this.border;\r\n            }\r\n            if (freeRect.y + freeRect.height >= Math.min(this.height + this.padding - this.border, height)) {\r\n                freeRect.height = height - freeRect.y - this.border;\r\n            }\r\n        }, this);\r\n        this.freeRects.push(new Rectangle(\r\n            width - this.width - this.padding,\r\n            height - this.border * 2,\r\n            this.width + this.padding - this.border,\r\n            this.border));\r\n        this.freeRects.push(new Rectangle(\r\n            width - this.border * 2,\r\n            height - this.height - this.padding,\r\n            this.border,\r\n            this.height + this.padding - this.border));\r\n        this.freeRects = this.freeRects.filter(freeRect => {\r\n            return !(freeRect.width <= 0 || freeRect.height <= 0 || freeRect.x < this.border || freeRect.y < this.border);\r\n        });\r\n        this.pruneFreeList();\r\n    }\r\n}","import { Rectangle, IRectangle } from \"./geom/Rectangle\";\r\nimport { MaxRectsBin } from \"./maxrects-bin\";\r\nimport { OversizedElementBin } from \"./oversized-element-bin\";\r\nimport { Bin, IBin } from \"./abstract-bin\";\r\n\r\nexport const EDGE_MAX_VALUE: number = 4096;\r\nexport const EDGE_MIN_VALUE: number = 128;\r\nexport enum PACKING_LOGIC {\r\n    MAX_AREA = 0,\r\n    MAX_EDGE = 1\r\n}\r\n\r\n/**\r\n * Options for MaxRect Packer\r\n * @property {boolean} options.smart Smart sizing packer (default is true)\r\n * @property {boolean} options.pot use power of 2 sizing (default is true)\r\n * @property {boolean} options.square use square size (default is false)\r\n * @property {boolean} options.allowRotation allow rotation packing (default is false)\r\n * @property {boolean} options.tag allow auto grouping based on `rect.tag` (default is false)\r\n * @property {boolean} options.border atlas edge spacing (default is 0)\r\n * @property {PACKING_LOGIC} options.logic MAX_AREA or MAX_EDGE based sorting logic (default is MAX_EDGE)\r\n * @export\r\n * @interface Option\r\n */\r\nexport interface IOption {\r\n    smart?: boolean;\r\n    pot?: boolean;\r\n    square?: boolean;\r\n    allowRotation?: boolean;\r\n    tag?: boolean;\r\n    border?: number;\r\n    logic?: PACKING_LOGIC;\r\n}\r\n\r\nexport class MaxRectsPacker<T extends IRectangle = Rectangle> {\r\n\r\n    /**\r\n     * The Bin array added to the packer\r\n     *\r\n     * @type {Bin[]}\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    public bins: Bin<T>[];\r\n\r\n    /**\r\n     * Creates an instance of MaxRectsPacker.\r\n     * @param {number} width of the output atlas (default is 4096)\r\n     * @param {number} height of the output atlas (default is 4096)\r\n     * @param {number} padding between glyphs/images (default is 0)\r\n     * @param {IOption} [options={}] (Optional) packing options\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    constructor (\r\n        public width: number = EDGE_MAX_VALUE,\r\n        public height: number = EDGE_MAX_VALUE,\r\n        public padding: number = 0,\r\n        public options: IOption = { smart: true, pot: true, square: false, allowRotation: false, tag: false, border: 0, logic: PACKING_LOGIC.MAX_EDGE }\r\n    ) {\r\n        this.bins = [];\r\n    }\r\n\r\n    /**\r\n     * Add a bin/rectangle object with data to packer\r\n     * @param {number} width of the input bin/rectangle\r\n     * @param {number} height of the input bin/rectangle\r\n     * @param {*} data custom data object\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    public add (width: number, height: number, data: any): T;\r\n    /**\r\n     * Add a bin/rectangle object extends IRectangle to packer\r\n     * @template T Generic type extends IRectangle interface\r\n     * @param {T} rect the rect object add to the packer bin\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    public add (rect: T): T;\r\n    public add (...args: any[]): any {\r\n        if (args.length === 1) {\r\n            if (typeof args[0] !== 'object') throw new Error(\"MacrectsPacker.add(): Wrong parameters\");\r\n            const rect = args[0] as T;\r\n            if (rect.width > this.width || rect.height > this.height) {\r\n                this.bins.push(new OversizedElementBin<T>(rect));\r\n            } else {\r\n                let added = this.bins.slice(this._currentBinIndex).find(bin => bin.add(rect) !== undefined);\r\n                if (!added) {\r\n                    let bin = new MaxRectsBin<T>(this.width, this.height, this.padding, this.options);\r\n                    let tag = (rect.data && rect.data.tag) ? rect.data.tag : rect.tag ? rect.tag : undefined;\r\n                    if (this.options.tag && tag) bin.tag = tag;\r\n                    bin.add(rect);\r\n                    this.bins.push(bin);\r\n                }\r\n            }\r\n            return rect;\r\n        } else {\r\n            const rect: IRectangle = new Rectangle(args[0], args[1]);\r\n            if (args.length > 2) rect.data = args[2];\r\n\r\n            if (rect.width > this.width || rect.height > this.height) {\r\n                this.bins.push(new OversizedElementBin<T>(rect as T));\r\n            } else {\r\n                let added = this.bins.slice(this._currentBinIndex).find(bin => bin.add(rect as T) !== undefined);\r\n                if (!added) {\r\n                    let bin = new MaxRectsBin<T>(this.width, this.height, this.padding, this.options);\r\n                    if (this.options.tag && rect.data.tag) bin.tag = rect.data.tag;\r\n                    bin.add(rect as T);\r\n                    this.bins.push(bin);\r\n                }\r\n            }\r\n            return rect as T;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add an Array of bins/rectangles to the packer.\r\n     *\r\n     * `Javascript`: Any object has property: { width, height, ... } is accepted.\r\n     *\r\n     * `Typescript`: object shall extends `MaxrectsPacker.IRectangle`.\r\n     *\r\n     * note: object has `hash` property will have more stable packing result\r\n     *\r\n     * @param {IRectangle[]} rects Array of bin/rectangles\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    public addArray (rects: T[]) {\r\n        this.sort(rects, this.options.logic).forEach(rect => this.add(rect));\r\n    }\r\n\r\n    /**\r\n     * Reset entire packer to initial states, keep settings\r\n     *\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    public reset (): void {\r\n        this.bins = [];\r\n        this._currentBinIndex = 0;\r\n    }\r\n\r\n    /**\r\n     * Repack all elements inside bins\r\n     *\r\n     * @param {boolean} [quick=true] quick repack only dirty bins\r\n     * @returns {void}\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    public repack (quick: boolean = true): void {\r\n        if (quick) {\r\n            let unpack: T[] = [];\r\n            for (let bin of this.bins) {\r\n                if (bin.dirty) {\r\n                    let up = bin.repack();\r\n                    if (up) unpack.push(...up);\r\n                }\r\n            }\r\n            this.addArray(unpack);\r\n            return;\r\n        }\r\n        if (!this.dirty) return;\r\n        const allRects = this.rects;\r\n        this.reset();\r\n        this.addArray(allRects);\r\n    }\r\n\r\n    /**\r\n     * Stop adding new element to the current bin and return a new bin.\r\n     *\r\n     * note: After calling `next()` all elements will no longer added to previous bins.\r\n     *\r\n     * @returns {Bin}\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    public next (): number {\r\n        this._currentBinIndex = this.bins.length;\r\n        return this._currentBinIndex;\r\n    }\r\n\r\n    /**\r\n     * Load bins to the packer, overwrite exist bins\r\n     * @param {MaxRectsBin[]} bins MaxRectsBin objects\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    public load (bins: IBin[]) {\r\n        bins.forEach((bin, index) => {\r\n            if (bin.maxWidth > this.width || bin.maxHeight > this.height) {\r\n                this.bins.push(new OversizedElementBin(bin.width, bin.height, {}));\r\n            } else {\r\n                let newBin = new MaxRectsBin<T>(this.width, this.height, this.padding, bin.options);\r\n                newBin.freeRects.splice(0);\r\n                bin.freeRects.forEach((r, i) => {\r\n                    newBin.freeRects.push(new Rectangle(r.width, r.height, r.x, r.y));\r\n                });\r\n                newBin.width = bin.width;\r\n                newBin.height = bin.height;\r\n                if (bin.tag) newBin.tag = bin.tag;\r\n                this.bins[index] = newBin;\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    /**\r\n     * Output current bins to save\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    public save (): IBin[] {\r\n        let saveBins: IBin[] = [];\r\n        this.bins.forEach((bin => {\r\n            let saveBin: IBin = {\r\n                width: bin.width,\r\n                height: bin.height,\r\n                maxWidth: bin.maxWidth,\r\n                maxHeight: bin.maxHeight,\r\n                freeRects: [],\r\n                rects: [],\r\n                options: bin.options\r\n            };\r\n            if (bin.tag) saveBin = { ...saveBin, tag: bin.tag };\r\n            bin.freeRects.forEach(r => {\r\n                saveBin.freeRects.push({\r\n                    x: r.x,\r\n                    y: r.y,\r\n                    width: r.width,\r\n                    height: r.height\r\n                });\r\n            });\r\n            saveBins.push(saveBin);\r\n        }));\r\n        return saveBins;\r\n    }\r\n\r\n    /**\r\n     * Sort the given rects based on longest edge or surface area.\r\n     *\r\n     * If rects have the same sort value, will sort by second key `hash` if presented.\r\n     *\r\n     * @private\r\n     * @param {T[]} rects\r\n     * @param {PACKING_LOGIC} [logic=PACKING_LOGIC.MAX_EDGE] sorting logic, \"area\" or \"edge\"\r\n     * @returns\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    private sort (rects: T[], logic: IOption['logic'] = PACKING_LOGIC.MAX_EDGE) {\r\n        return rects.slice().sort((a, b) => {\r\n            const result = (logic === PACKING_LOGIC.MAX_EDGE) ?\r\n                Math.max(b.width, b.height) - Math.max(a.width, a.height) :\r\n                b.width * b.height - a.width * a.height;\r\n            if (result === 0 && a.hash && b.hash) {\r\n                return a.hash > b.hash ? -1 : 1;\r\n            } else return result;\r\n        });\r\n    }\r\n\r\n    private _currentBinIndex: number = 0;\r\n    /**\r\n     * Return current functioning bin index, perior to this wont accept any new elements\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    get currentBinIndex (): number { return this._currentBinIndex; }\r\n\r\n    /**\r\n     * Returns dirty status of all child bins\r\n     *\r\n     * @readonly\r\n     * @type {boolean}\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    get dirty (): boolean { return this.bins.some(bin => bin.dirty); }\r\n\r\n    /**\r\n     * Return all rectangles in this packer\r\n     *\r\n     * @readonly\r\n     * @type {T[]}\r\n     * @memberof MaxRectsPacker\r\n     */\r\n    get rects (): T[] {\r\n        let allRects: T[] = [];\r\n        for (let bin of this.bins) {\r\n            allRects.push(...bin.rects);\r\n        }\r\n        return allRects;\r\n    }\r\n}","import { IRectangle, Rectangle } from \"./geom/Rectangle\";\r\nimport { IOption } from \"./maxrects-packer\";\r\nimport { Bin } from \"./abstract-bin\";\r\n\r\nexport class OversizedElementBin<T extends IRectangle = Rectangle> extends Bin<T> {\r\n    public width: number;\r\n    public height: number;\r\n    public data: any;\r\n    public maxWidth: number;\r\n    public maxHeight: number;\r\n    public options: IOption;\r\n    public rects: T[] = [];\r\n    public freeRects: IRectangle[];\r\n\r\n    constructor (rect: T);\r\n    constructor (width: number, height: number, data: any);\r\n    constructor (...args: any[]) {\r\n        super();\r\n        if (args.length === 1) {\r\n            if (typeof args[0] !== 'object') throw new Error(\"OversizedElementBin: Wrong parameters\");\r\n            const rect = args[0];\r\n            this.rects = [rect];\r\n            this.width = rect.width;\r\n            this.height = rect.height;\r\n            this.data = rect.data;\r\n            rect.oversized = true;\r\n        } else {\r\n            this.width = args[0];\r\n            this.height = args[1];\r\n            this.data = args.length > 2 ? args[2] : null;\r\n            const rect: IRectangle = new Rectangle(this.width, this.height);\r\n            rect.oversized = true;\r\n            rect.data = this.data;\r\n            this.rects.push(rect as T);\r\n        }\r\n        this.freeRects = [];\r\n        this.maxWidth = this.width;\r\n        this.maxHeight = this.height;\r\n        this.options = { smart: false, pot: false, square: false };\r\n    }\r\n\r\n    add () { return undefined; }\r\n    reset (deepReset: boolean = false): void {\r\n        // nothing to do here\r\n    }\r\n    repack (): T[] | undefined { return undefined; }\r\n}","export * from './linkedlist';\r\nexport * from './visitor';\r\nexport * from './string_utils';","export class ListIterator<T = any> {\r\n    private _node: ListNodeImpl;\r\n    private _reverse: boolean;\r\n    private _dl: List<T>;\r\n    constructor (dl:List<T>, node:ListNodeImpl, reverse:boolean) {\r\n        this._dl = dl;\r\n        this._node = node;\r\n        this._reverse = reverse;\r\n    }\r\n    valid (): boolean {\r\n        return this._node !== this._dl.head;\r\n    }\r\n    next (): ListIterator<T> {\r\n        if (this.valid()) {\r\n            this._node = (this._reverse ? this._node.prev : this._node = this._node.next);\r\n        }\r\n        return this;\r\n    }\r\n    getNext (): ListIterator<T> {\r\n        if (!this.valid()) {\r\n            throw new Error ('Failed to get next iterator: this iterator is invalid');\r\n        }\r\n        return new ListIterator<T> (this._dl, this._reverse ? this._node.prev : this._node.next, this._reverse);\r\n    }\r\n    prev (): ListIterator<T> {\r\n        if (this.valid()) {\r\n            this._node = (this._reverse ? this._node.next : this._node = this._node.prev);\r\n        }\r\n        return this;\r\n    }\r\n    getPrev (): ListIterator<T> {\r\n        if (!this.valid()) {\r\n            throw new Error ('Failed to get previous iterator: this iterator is invalid');\r\n        }\r\n        return new ListIterator<T> (this._dl, this._reverse ? this._node.next : this._node.prev, this._reverse);\r\n    }\r\n    get node () {\r\n        return this._node;\r\n    }\r\n    set node (n: ListNodeImpl) {\r\n        this._node = n;\r\n    }\r\n    get reversed () {\r\n        return this._reverse;\r\n    }\r\n    get list () {\r\n        return this._dl;\r\n    }\r\n    get data () {\r\n        if (this.valid()) {\r\n            return (this._node as ListNode<T>).data;\r\n        } else {\r\n            throw new Error ('Invalid interator');\r\n        }\r\n    }\r\n    set data (val: T) {\r\n        if (this.valid()) {\r\n            (this._node as ListNode<T>).data = val;\r\n        }\r\n    }\r\n}\r\n\r\nexport class List<T = any> {\r\n    private _head: ListNodeImpl;\r\n    private _length: number;\r\n    constructor () {\r\n        this._head = new ListNodeImpl();\r\n        this._length = 0;\r\n    }\r\n    get head () {\r\n        return this._head;\r\n    }\r\n    get length () {\r\n        return this._length;\r\n    }\r\n    clear () {\r\n        while (this._length > 0) {\r\n            this.remove (this.begin ());\r\n        }\r\n    }\r\n    append (data: T): ListIterator<T> {\r\n        return this._insertAt (data, this._head);\r\n    }\r\n    prepend (data: T): ListIterator<T> {\r\n        return this._insertAt (data, this._head.next);\r\n    }\r\n    remove (it: ListIterator<T>): void {\r\n        if (it.valid () && it.list === this) {\r\n            const node = it.node;\r\n            it.next ();\r\n            this._remove (node);\r\n        }\r\n    }\r\n    insertAt (data: T, at: ListIterator<T>): ListIterator<T> {\r\n        if (at.list === this) {\r\n            if (at.valid ()) {\r\n                if (at.reversed) {\r\n                    return this._insertAt (data, at.node.next);\r\n                } else {\r\n                    return this._insertAt (data, at.node);\r\n                }\r\n            } else {\r\n                return this.append (data);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    forEach (callback: (data:T) => void) {\r\n        for (let it = this.begin(); it.valid(); it.next()) {\r\n            callback && callback (it.data);\r\n        }\r\n    }\r\n    forEachReverse (callback: (data:T) => void) {\r\n        for (let it = this.rbegin(); it.valid(); it.next()) {\r\n            callback && callback (it.data);\r\n        }\r\n    }\r\n    front (): T {\r\n        return this.begin().data;\r\n    }\r\n    back (): T {\r\n        return this.rbegin().data;\r\n    }\r\n    begin (): ListIterator<T> {\r\n        return new ListIterator(this, this._length > 0 ? this._head.next : this._head, false);\r\n    }\r\n    rbegin (): ListIterator<T> {\r\n        return new ListIterator(this, this._length > 0 ? this._head.prev : this._head, true);\r\n    }\r\n    private _remove (node: ListNodeImpl) {\r\n        node.prev.next = node.next;\r\n        node.next.prev = node.prev;\r\n        delete node.prev;\r\n        delete node.next;\r\n        this._length--;\r\n    }\r\n    private _insertAt (data: T, node: ListNodeImpl): ListIterator<T> {\r\n        const newNode = new ListNode(data);\r\n        newNode.next = node;\r\n        newNode.prev = node.prev;\r\n        node.prev.next = newNode;\r\n        node.prev = newNode;\r\n        this._length++;\r\n        return new ListIterator (this, newNode, false);\r\n    }\r\n}\r\n\r\nclass ListNodeImpl {\r\n    next: ListNodeImpl;\r\n    prev: ListNodeImpl;\r\n    constructor () {\r\n        this.next = this;\r\n        this.prev = this;\r\n    }\r\n}\r\n\r\nclass ListNode<T = any> extends ListNodeImpl {\r\n    data: T;\r\n    constructor (data: T) {\r\n        super ();\r\n        this.data = data;\r\n    }\r\n}\r\n\r\n","// base64 to array\r\n// reference:\r\n// https://github.com/danguer/blog-examples/blob/master/js/base64-binary.js\r\n// http://blog.danguer.com/2011/10/24/base64-binary-decoding-in-javascript/\r\n\r\nconst _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\t\r\nfunction removePaddingChars (input: string){\r\n    var lkey = _keyStr.indexOf(input.charAt(input.length - 1));\r\n    if(lkey == 64){\r\n        return input.substring(0,input.length - 1);\r\n    }\r\n    return input;\r\n};\r\n\r\nexport function base64ToU8(input: string) {\r\n    //get last chars to see if are valid\r\n    input = removePaddingChars(input);\r\n    input = removePaddingChars(input);\r\n\r\n    const bytes = Math.floor((input.length / 4) * 3);\r\n    const uarray = new Uint8Array(bytes);    \r\n    let j = 0;\r\n    \r\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n    for (let i = 0; i < bytes; i += 3) {\t\r\n        //get the 3 octects in 4 ascii chars\r\n        const enc1 = _keyStr.indexOf(input.charAt(j++));\r\n        const enc2 = _keyStr.indexOf(input.charAt(j++));\r\n        const enc3 = _keyStr.indexOf(input.charAt(j++));\r\n        const enc4 = _keyStr.indexOf(input.charAt(j++));\r\n\r\n        const chr1 = (enc1 << 2) | (enc2 >> 4);\r\n        const chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n        const chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n        uarray[i] = chr1;\t\t\t\r\n        if (enc3 != 64) uarray[i+1] = chr2;\r\n        if (enc4 != 64) uarray[i+2] = chr3;\r\n    }\r\n\r\n    return uarray;\t\r\n}\r\n\r\nexport function stringToU8 (s: string) {\r\n    const escstr = encodeURIComponent(s);\r\n    const binstr = escstr.replace(/%([0-9A-F]{2})/g, function(match, p1) {\r\n        return String.fromCharCode(Number('0x' + p1));\r\n    });\r\n    const ua = new Uint8Array(binstr.length);\r\n    Array.prototype.forEach.call(binstr, function (ch, i) {\r\n        ua[i] = ch.charCodeAt(0);\r\n    });\r\n    return ua;\r\n}\r\n\r\nexport function u8ToString (ua: Uint8Array) {\r\n    const binstr = Array.prototype.map.call(ua, function (ch) {\r\n        return String.fromCharCode(ch);\r\n    }).join('');\r\n    const escstr = binstr.replace(/(.)/g, function (m, p) {\r\n        let code = p.charCodeAt(p).toString(16).toUpperCase();\r\n        if (code.length < 2) {\r\n            code = '0' + code;\r\n        }\r\n        return '%' + code;\r\n    });\r\n    return decodeURIComponent(escstr);\r\n}\r\n","type VisitFuncMap = Map<Constructor<object>, (t: any)=>any>;\r\n\r\ninterface Constructor<T = any> {\r\n    new (...args: any[]): T;\r\n}\r\n\r\nfunction superClassOf (cls: Constructor): Constructor {\r\n    return Object.getPrototypeOf (cls.prototype).constructor;\r\n}\r\n\r\nexport function visitor (T: Constructor) {\r\n    return function (target: any, propertyKey: string) {\r\n        Visitor.setVisitFunc(target.constructor, T, target[propertyKey]);    \r\n    }\r\n}\r\n\r\nexport class Visitor {\r\n    private readonly visitFuncMap: VisitFuncMap;\r\n    private static readonly visitorFuncMap: Map<Constructor, VisitFuncMap> = new Map();\r\n    constructor () {\r\n        this.visitFuncMap = Visitor._getFuncMap (this.constructor as Constructor);\r\n    }\r\n    visit (target: object): any {\r\n        return this.visitWithType (target, target.constructor as Constructor);\r\n    }\r\n    /*\r\n    visitSuper (target: object): any {\r\n        let c = target.constructor && target.constructor.prototype && target.constructor.prototype.__proto__ && target.constructor.prototype.__proto__.constructor;\r\n        return c && this.visitWithType (target, c);\r\n    }\r\n    */\r\n    visitWithType (target: object, type: Constructor) {\r\n        if (target) {\r\n            let func: (t: object)=>any = null;\r\n            while (type !== Object && !func) {\r\n                func = this.visitFuncMap.get (type);\r\n                if (!func) {\r\n                    type = superClassOf (type);\r\n                    // type = type.prototype && type.prototype.__proto__ && type.prototype.__proto__.constructor;\r\n                }\r\n            }\r\n            return func && func.call (this, target);\r\n        }\r\n    }\r\n    static getVisitFunc<T = Visitor, U = any> (visitorType: Constructor<T>, targetType: Constructor<U>): (this:T, target:U)=>any {\r\n        const funcMap = Visitor._getFuncMap (visitorType);\r\n        return funcMap ? funcMap.get (targetType as Constructor) : null;\r\n    }\r\n    static setVisitFunc<T = Visitor, U = any> (visitorType: Constructor<T>, targetType: Constructor<U>, func: (this:T, target:U)=>any) {\r\n        const funcMap = Visitor._getFuncMap (visitorType);\r\n        funcMap && funcMap.set (targetType as Constructor, func);\r\n    }\r\n    static removeVisitFunc<T = Visitor, U = any> (visitorType: Constructor<T>, targetType: Constructor<U>) {\r\n        const funcMap = Visitor._getFuncMap (visitorType);\r\n        funcMap && funcMap.delete (targetType as Constructor);\r\n    }\r\n    private static _getFuncMap (visitorType: Constructor) {\r\n        let funcMap = Visitor.visitorFuncMap.get (visitorType);\r\n        if (!funcMap) {\r\n            funcMap = new Map();\r\n            Visitor.visitorFuncMap.set(visitorType, funcMap);\r\n        }\r\n        return funcMap;\r\n    }\r\n}","import { assert, Font, Vec2, Vec4, Texture, EventTarget, eventtarget, RMLRectPrimitive, RMLPolygonPrimitive, unescapeCSSString, RMLPrimitiveBatchList, RMLElement, RMLDocument, RMLNodeList, RMLLiveNodeList, Renderer, TextureAtlas, GUI, UIRect, UILayout, ElementStyle, IStyleSheet, ValueChangeEvent, ElementLayoutEvent, Event, DOMTreeEvent, ElementBuildContentEvent, TextContentChangeEvent, Text } from '.';\r\n\r\nexport interface RMLNode<U = RMLNode<any> > extends EventTarget {}\r\n\r\nconst defaultCursor = 'default';\r\nconst tmpUV1 = { x:0, y:0 };\r\nconst tmpUV2 = { x:0, y:0 };\r\n\r\nexport interface INodeVisitor {\r\n    visitNode (w: RMLNode): void;\r\n}\r\n\r\n@eventtarget()\r\nexport class RMLNode<U extends RMLNode<any> = RMLNode<any> > {\r\n    /** @internal */\r\n    protected static readonly PSEUDO_NONE = 0;\r\n    /** @internal */\r\n    protected static readonly PSEUDO_BEFORE = 1;\r\n    /** @internal */\r\n    protected static readonly PSEUDO_AFTER = 2;\r\n    static readonly UNKNOWN_NODE = 0;\r\n    static readonly ELEMENT_NODE = 1;\r\n    static readonly TEXT_NODE = 3;\r\n    static readonly DOCUMENT_NODE = 9;\r\n    private static _defaultFont: Font = null;\r\n    private static _defaultFontSize = '12px';\r\n    private static _defaultFontFamily = 'arial';\r\n    /** @internal */\r\n    protected _uiscene: GUI;\r\n    /** @internal */\r\n    protected _parent: RMLNode;\r\n    /** @internal */\r\n    protected _childNodes: RMLNode[];\r\n    /** @internal */\r\n    protected _children: RMLNodeList;\r\n    /** @internal */\r\n    protected _childrenElements: RMLNodeList;\r\n    /** @internal */\r\n    protected _renderOrder: number[];\r\n    /** @internal */\r\n    protected _renderOrderChanged: boolean;\r\n    /** @internal */\r\n    protected _hScroll: RMLNode;\r\n    /** @internal */\r\n    protected _vScroll: RMLNode;\r\n    /** @internal */\r\n    protected _layout: UILayout;\r\n    /** @internal */\r\n    protected _layoutChangeStamp: number;\r\n    /** @internal */\r\n    protected _disableCounter: number;\r\n    /** @internal */\r\n    protected _mouseIn: boolean;\r\n    /** @internal */\r\n    protected _mouseDown: boolean;\r\n    /** @internal */\r\n    protected _state: number;\r\n    /** @internal */\r\n    protected _batchList: RMLPrimitiveBatchList;\r\n    /** @internal */\r\n    protected _numQuads: number;\r\n    /** @internal */\r\n    protected _contentDirty: boolean;\r\n    /** @internal */\r\n    protected _loadingTextures: Texture[];\r\n    /** @internal */\r\n    protected _backgroundColor: Vec4;\r\n    /** @internal */\r\n    protected _backgroundImage: TextureAtlas;\r\n    /** @internal */\r\n    protected _borderLeftColor: Vec4;\r\n    /** @internal */\r\n    protected _borderTopColor: Vec4;\r\n    /** @internal */\r\n    protected _borderRightColor: Vec4;\r\n    /** @internal */\r\n    protected _borderBottomColor: Vec4;\r\n    /** @internal */\r\n    protected _style: ElementStyle;\r\n    /** @internal */\r\n    protected _hide: boolean;\r\n    /** @internal */\r\n    protected _internal: boolean;\r\n    /** @internal */\r\n    protected _pseudo: number;\r\n    /** @internal */\r\n    protected _font: Font;\r\n    /** @internal */\r\n    protected _cachedFontSize: string;\r\n    /** @internal */\r\n    protected _cachedFontFamily: string;\r\n    /** @internal */\r\n    protected _fontColor: Vec4;\r\n    /** @internal */\r\n    constructor (uiscene: GUI) {\r\n        this._uiscene = uiscene;\r\n        this._parent = null;\r\n        this._childNodes = [];\r\n        this._children = new RMLLiveNodeList(this, RMLLiveNodeList.MODE_NON_INTERNAL);\r\n        this._childrenElements = new RMLLiveNodeList(this, RMLLiveNodeList.MODE_ELEMENT_NON_INTERNAL);\r\n        this._renderOrder = [];\r\n        this._renderOrderChanged = false;\r\n        this._hScroll = null;\r\n        this._vScroll = null;\r\n        this._loadingTextures = [];\r\n        this._backgroundColor = ElementStyle.defaultBackgroundColor;\r\n        this._backgroundImage = null;\r\n        this._borderLeftColor = ElementStyle.defaultBorderColor;\r\n        this._borderTopColor = ElementStyle.defaultBorderColor;\r\n        this._borderRightColor = ElementStyle.defaultBorderColor;\r\n        this._borderBottomColor = ElementStyle.defaultBorderColor;\r\n        this._layout = new UILayout(this);\r\n        this._style = new ElementStyle(this._layout);\r\n        this._layoutChangeStamp = -1;\r\n        this._disableCounter = 0;\r\n        this._batchList = new RMLPrimitiveBatchList(0, 0);\r\n        this._numQuads = 0;\r\n        this._contentDirty = true;\r\n        this._hide = false;\r\n        this._internal = false;\r\n        this._pseudo = RMLNode.PSEUDO_NONE;\r\n        this._font = null;\r\n        this._cachedFontSize = null;\r\n        this._cachedFontFamily = null;\r\n        this._fontColor = null;\r\n        this._resetStyle ();\r\n    }\r\n    get gui (): GUI {\r\n        return this._uiscene;\r\n    }\r\n    get nodeType (): number {\r\n        return RMLNode.UNKNOWN_NODE;\r\n    }\r\n    get nodeName (): string {\r\n        switch (this.nodeType) {\r\n            case RMLNode.ELEMENT_NODE:\r\n                return (this as unknown as RMLElement).tagName;\r\n            case RMLNode.TEXT_NODE:\r\n                return '#text';\r\n            case RMLNode.DOCUMENT_NODE:\r\n                return '#document';\r\n            default:\r\n                return '#unknown';\r\n        }\r\n    }\r\n    get nodeValue (): string {\r\n        switch (this.nodeType) {\r\n            case RMLNode.TEXT_NODE:\r\n                return this.textContent;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    get ownerDocument (): RMLDocument {\r\n        return this === this._uiscene.document as RMLNode<any> ? null : this._uiscene.document || null;\r\n    }\r\n    get isConnected (): boolean {\r\n        return this._isSucceedingOf (this._uiscene.document);\r\n    }\r\n    get parentNode (): RMLNode {\r\n        return this._parent;\r\n    }\r\n    get parentElement (): RMLElement {\r\n        return this._parent && this._parent.nodeType === RMLNode.ELEMENT_NODE ? this._parent as unknown as RMLElement : null;\r\n    }\r\n    get childNodes (): RMLNodeList {\r\n        return this._children;\r\n    }\r\n    get style (): ElementStyle {\r\n        return this._style;\r\n    }\r\n    get textContent (): string {\r\n        let content = '';\r\n        for (let child = this.firstChild; child; child = child.nextSibling) {\r\n            content += child.textContent;\r\n        }\r\n        return content;\r\n    }\r\n    set textContent (text: string) {\r\n        text = String(text) || '';\r\n        text = text.trim().replace (/\\s+/, ' ');\r\n        const childrenToBeRemoved: RMLNode[] = [];\r\n        for (let child = this.firstChild; child; child = child.nextSibling) {\r\n            if (!child._isInternal()) {\r\n                childrenToBeRemoved.push (child);\r\n            }\r\n        }\r\n        for (const child of childrenToBeRemoved) {\r\n            child._remove ();\r\n        }\r\n        if (this._pseudo === RMLNode.PSEUDO_BEFORE || this._pseudo === RMLNode.PSEUDO_AFTER || text !== '') {\r\n            this._append (text);\r\n        }\r\n    }\r\n    normalize () {\r\n        let finished = false;\r\n        let child = this.firstChild;\r\n        while (!finished) {\r\n            finished = true;\r\n            for (; child; child = child.nextSibling) {\r\n                if (child._isText()) {\r\n                    child = (child as Text)._normalize ();\r\n                    finished = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for (child = this.firstChild; child; child = child.nextSibling) {\r\n            child.normalize ();\r\n        }\r\n    }\r\n    get scrollX (): number {\r\n        return this._layout.desiredScrollX;\r\n    }\r\n    set scrollX (val: number) {\r\n        this.setScrollX (val);\r\n    }\r\n    setScrollX (val: number) {\r\n        if (this._layout.desiredScrollX !== val) {\r\n            this._layout.desiredScrollX = val;\r\n            this._syncLayout ();\r\n        }\r\n    }\r\n    get scrollY (): number {\r\n        return this._layout.desiredScrollY;\r\n    }\r\n    set scrollY (val: number) {\r\n        this.setScrollY (val);\r\n    }\r\n    setScrollY (val: number) {\r\n        if (this._layout.desiredScrollY !== val) {\r\n            this._layout.desiredScrollY = val;\r\n            this._syncLayout ();\r\n        }\r\n    }\r\n    setScroll (x: number, y: number) {\r\n        if (this._layout.desiredScrollX !== x || this._layout.desiredScrollY !== y) {\r\n            this._layout.desiredScrollX = x;\r\n            this._layout.desiredScrollY = y;\r\n            this._syncLayout ();\r\n        }\r\n    }\r\n    getRect (): UIRect {\r\n        this._uiscene.updateLayout ();\r\n        return this._layout.actualRect;\r\n    }\r\n    getClippedRect (): UIRect {\r\n        this._uiscene.updateLayout ();\r\n        return this._layout.clippedRect;\r\n    }\r\n    getClientRect (): UIRect {\r\n        this._uiscene.updateLayout ();\r\n        return this._layout.clientRect;\r\n    }\r\n    getBorderRect (): UIRect {\r\n        this._uiscene.updateLayout ();\r\n        return this._layout.borderRect;\r\n    }\r\n    enable () {\r\n        const parentCounter = this._parent ? this._parent._disableCounter : 0;\r\n        if (this._disableCounter > parentCounter) {\r\n            this._disable (-1);\r\n            this._updateState ();\r\n        }\r\n    }\r\n    disable () {\r\n        const parentCounter = this._parent ? this._parent._disableCounter : 0;\r\n        if (this._disableCounter === parentCounter) {\r\n            this._disable (1);\r\n            this._updateState ();\r\n        }\r\n    }\r\n    get enabled (): boolean {\r\n        return this._disableCounter === 0;\r\n    }\r\n    set enabled (enable: boolean) {\r\n        enable ? this.enable () : this.disable ();\r\n    }\r\n    get nextSibling (): RMLNode {\r\n        return this._getNextSibling (false);\r\n        // return this._layout.nextSibling()?.element || null;\r\n    }\r\n    get previousSibling (): RMLNode {\r\n        return this._getPreviousSibling (false);\r\n        // return this._layout.previousSibling()?.element || null;\r\n    }\r\n    /** @internal */\r\n    protected _remove (): RMLNode {\r\n        let parent: RMLNode = null;\r\n        if (this._parent) {\r\n            parent = this._parent;\r\n            const index = this._parent._childNodes.indexOf (this);\r\n            assert (index >= 0, 'remove: node is not child', true);\r\n            const focus = this._uiscene.getFocus ();\r\n            if (focus && focus._isSucceedingOf (this)) {\r\n                this._uiscene.setFocus (null);\r\n            }\r\n            const captured = this._uiscene.getCapture ();\r\n            if (captured && captured._isSucceedingOf (this)) {\r\n                this._uiscene.setCapture (null);\r\n            }\r\n            this._parent._removeChild (index);\r\n            this._parent = null;\r\n            this._disable (-this._disableCounter);\r\n        } else {\r\n            return null;\r\n        }\r\n        this.dispatchEvent (new DOMTreeEvent(DOMTreeEvent.NAME_REMOVED, parent));\r\n        return this;\r\n    }\r\n    /** @internal */\r\n    protected _before (...nodes: (RMLNode|string)[]): void {\r\n        assert (!!this.parentNode, 'Failed to execute before: parent element must not be null', true);\r\n        assert (nodes.indexOf(this) < 0, 'Failed to execute before: cannot insert self node', true);\r\n        let first: RMLNode = this;\r\n        for (let i = nodes.length-1; i >= 0; i--) {\r\n            const node = nodes[i];\r\n            if (typeof node === 'string') {\r\n                const textNode = new Text (this._uiscene);\r\n                textNode.textContent = node;\r\n                textNode.style.width = 'auto';\r\n                textNode.style.height = 'auto';\r\n                textNode.style.flex = '0 0 auto';\r\n                textNode.style.cursor = 'auto';\r\n                this.parentNode.insertBefore (textNode, first);\r\n                first = textNode;\r\n            } else if (node instanceof RMLNode) {\r\n                this.parentNode.insertBefore (node, first);\r\n                first = node;\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    protected _after (...nodes: (RMLNode|string)[]): void {\r\n        assert (!!this.parentNode, 'Failed to execute after: parent element must not be null', true);\r\n        assert (nodes.indexOf(this) < 0, 'Failed to execute after: cannot insert self node', true);\r\n        let next: RMLNode = this.nextSibling;\r\n        if (next) {\r\n            next._before (...nodes);\r\n        } else {\r\n            this.parentNode._append (...nodes);\r\n        }\r\n    }\r\n    /** @internal */\r\n    protected _append (...nodes: (RMLNode|string)[]): void {\r\n        for (const node of nodes) {\r\n            if (typeof node === 'string') {\r\n                const textNode = new Text (this._uiscene);\r\n                textNode.textContent = node;\r\n                textNode.style.width = 'auto';\r\n                textNode.style.height = 'auto';\r\n                textNode.style.flex = '0 0 auto';\r\n                textNode.style.cursor = 'auto';\r\n                textNode.style.backgroundColor = 'rgba(0,0,0,0)';\r\n                this.appendChild (textNode);\r\n            } else if (node instanceof RMLNode) {\r\n                this.appendChild (node);\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    protected _prepend (...nodes: (RMLNode|string)[]): void {\r\n        let first = this.firstChild;\r\n        if (!first) {\r\n            this._append (...nodes);\r\n        } else {\r\n            first._before (...nodes);\r\n        }\r\n    }\r\n    cloneNode (deep: boolean): RMLNode {\r\n        throw new Error ('Failed to call cloneNode');\r\n    }\r\n    getRootNode (): RMLNode {\r\n        let root: RMLNode = this;\r\n        while (root.parentNode) {\r\n            root = root.parentNode;\r\n        }\r\n        return root;\r\n    }\r\n    appendChild (child: RMLNode): RMLNode {\r\n        assert (!!child, `Failed to appendChild: element to be append is ${child}`, true);\r\n        assert (!this._isSucceedingOf(child), `Failed to appendChild: cannot append parent element`, true);\r\n        const ref = this.lastChild?._layout.nextSibling()?.element;\r\n        child._reparent (this, ref);\r\n        return child;\r\n    }\r\n    insertBefore (newElement: RMLNode, referenceElement: RMLNode) {\r\n        assert (referenceElement && this === referenceElement.parentNode, 'Failed to insertBefore: reference element is not a valid elememnt or is not a child of this node', true);\r\n        assert (!!newElement, `Failed to insertBefore: element to be insert is ${newElement}`, true);\r\n        assert (!this._isSucceedingOf(newElement), `Failed to insertBefore: cannot insert parent element`, true);\r\n        newElement._reparent (this, referenceElement);\r\n        return newElement;\r\n    }\r\n    removeChild (child: RMLNode) {\r\n        assert (!!child, `Failed to removeChild: element to be remove is ${child}`, true);\r\n        assert (this === child.parentNode, 'Failed to removeChild: element to be remove is not a child of this node', true);\r\n        return child._remove ();\r\n    }\r\n    replaceChild (newChild: RMLNode, oldChild: RMLNode) {\r\n        assert (!!newChild, `Failed to replaceChild: element to be insert is ${newChild}`, true);\r\n        assert (!!oldChild, `Failed to replaceChild: element to be replaced is ${oldChild}`, true);\r\n        assert (this === oldChild.parentNode, 'Failed to replaceChild: element to be replaced is not a child of this node', true);\r\n        if (newChild !== oldChild) {\r\n            const next = oldChild.nextSibling;\r\n            this.removeChild (oldChild);\r\n            if (next) {\r\n                this.insertBefore (newChild, next);\r\n            } else {\r\n                this.appendChild (newChild);\r\n            }\r\n        }\r\n        return oldChild;\r\n    }\r\n    get firstChild (): RMLNode {\r\n        return this._getFirstChild (false);\r\n    }\r\n    get lastChild (): RMLNode {\r\n        return this._getLastChild (false);\r\n    }\r\n    contains (child: RMLNode): boolean {\r\n        return child && child._isSucceedingOf (this);\r\n    }\r\n    hasChildNodes (): boolean {\r\n        return this.childNodes.length > 0;\r\n    }\r\n    setCapture () {\r\n        if (this._isSucceedingOf (this._uiscene.document)) {\r\n            this._uiscene.setCapture (this);\r\n        }\r\n    }\r\n    releaseCapture () {\r\n        if (this._uiscene.getCapture() === this) {\r\n            this._uiscene.setCapture (null);\r\n        }\r\n    }\r\n    traverse (v: INodeVisitor, inverse?: boolean, render?: boolean) {\r\n        if (!this._isVisible()) {\r\n            return;\r\n        }\r\n        if (!!render) {\r\n            if (this._renderOrderChanged) {\r\n                this._renderOrderChanged = false;\r\n                this._updateRenderOrders ();\r\n            }\r\n            if (!!inverse) {\r\n                for (let i = this._renderOrder.length-1; i >= 0; i--) {\r\n                    this._childNodes[this._renderOrder[i]].traverse (v, inverse, render);\r\n                }\r\n                v.visitNode (this);\r\n            } else {\r\n                v.visitNode (this);\r\n                for (let i = 0; i < this._renderOrder.length; i++) {\r\n                    this._childNodes[this._renderOrder[i]].traverse (v, inverse, render);\r\n                }\r\n            }\r\n        } else {\r\n            if (!!inverse) {\r\n                for (let i = this._childNodes.length-1; i >= 0; i--) {\r\n                    this._childNodes[i].traverse (v, inverse, render);\r\n                }\r\n                v.visitNode (this);\r\n            } else {\r\n                v.visitNode (this);\r\n                for (const child of this._childNodes) {\r\n                    child.traverse (v, inverse, render);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    draw (renderer: Renderer) {\r\n        const img = this.style.backgroundImage ? this._uiscene.imageManager.getImage (this.style.backgroundImage) : null;\r\n        if (img !== this._backgroundImage) {\r\n            this._backgroundImage = img;\r\n            this._contentDirty = true;\r\n        }\r\n        if (this._contentDirty) {\r\n            this._contentDirty = false;\r\n            this._batchList.clear ();\r\n            const w = this._layout.actualRect.width;\r\n            const h = this._layout.actualRect.height;\r\n            if (w > 0 && h > 0) {\r\n                const v = this.toAbsolute ({ x:0, y:0 });\r\n                this._batchList.x = v.x;\r\n                this._batchList.y = v.y;\r\n                const preEvt = new ElementBuildContentEvent (ElementBuildContentEvent.NAME_PREBUILD, this._batchList);\r\n                this.dispatchEvent (preEvt);\r\n                if (!preEvt.defaultPrevented) {\r\n                    this._buildVertexData ();\r\n                    const postEvt = new ElementBuildContentEvent (ElementBuildContentEvent.NAME_POSTBUILD, this._batchList);\r\n                    this.dispatchEvent (postEvt);\r\n                }\r\n            }\r\n        }\r\n        this._draw (renderer);\r\n    }\r\n    toAbsolute (v: Vec2): Vec2 {\r\n        return this._layout.toAbsolute (v);\r\n    }\r\n    /** @internal */\r\n    _getCachedFontSize (): string {\r\n        return this._cachedFontSize || this.parentNode?._getCachedFontSize() || RMLNode._defaultFontSize;\r\n    }\r\n    /** @internal */\r\n    _getCachedFontFamily (): string {\r\n        return this._cachedFontFamily || this.parentNode?._getCachedFontFamily() || RMLNode._defaultFontFamily;\r\n    }\r\n    /** @internal */\r\n    _getCachedFont (): Font {\r\n        if (!this._font) {\r\n            this._font = new Font (`${this._getCachedFontSize()} ${this._getCachedFontFamily()}`);\r\n        }\r\n        return this._font;\r\n    }\r\n    /** @internal */\r\n    _getCachedFontColor (): Vec4 {\r\n        return this._fontColor || this.parentNode?._getCachedFontColor() || ElementStyle.defaultFontColor;\r\n    }\r\n    /** @internal */\r\n    _updatePseudoElementStyles (types: Map<string, { stylesheet: IStyleSheet, extra: any }[]>) {\r\n        for (const name of ['before', 'after']) {\r\n            const info = types?.get (name);\r\n            let pseudo: number;\r\n            let node: RMLNode;\r\n            if (name === 'before') {\r\n                pseudo = RMLNode.PSEUDO_BEFORE;\r\n                node = this._childNodes.length > 0 && this._childNodes[0]._getPseudo() === pseudo ? this._childNodes[0] : null;\r\n            } else {\r\n                pseudo = RMLNode.PSEUDO_AFTER;\r\n                node = this._childNodes.length > 0 && this._childNodes[this._childNodes.length-1]._getPseudo() === pseudo ? this._childNodes[this._childNodes.length-1] : null;\r\n            }\r\n            if (info) {\r\n                if (!node) {\r\n                    node = this.ownerDocument.createElement ('div');\r\n                    node._setInternal ();\r\n                    node._setPseudo (pseudo);\r\n                    node._reparent (this, name === 'before' && this._childNodes.length > 0 ? this._childNodes[0] : null);\r\n                } else {\r\n                    node._resetStyle ();\r\n                }\r\n                for (const s of info) {\r\n                    node.style.applyStyleSheet (s.stylesheet, true);\r\n                }\r\n                if (info.length > 0 && typeof info[info.length-1].extra.content === 'string' ) {\r\n                    const s = info[info.length-1].extra.content.trim();\r\n                    let match = s.match (/^'([^']*)'$/);\r\n                    if (!match) {\r\n                        match = s.match (/^\"([^\"]*)\"$/);\r\n                    }\r\n                    if (match) {\r\n                        node.textContent = unescapeCSSString(match[1]);\r\n                    }\r\n                }\r\n            } else if (node) {\r\n                node._remove ();\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    _updateStyle (val: string) {\r\n        this._uiscene._markStyleRefreshForElement (this);\r\n    }\r\n    /** @internal */\r\n    _updateBorder () {\r\n        this._invalidateContent ();\r\n    }\r\n    /** @internal */\r\n    _updateZIndex () {\r\n        if (this._parent) {\r\n            this._parent._markRenderOrderChanged ();\r\n        }\r\n        return this;\r\n    }\r\n    /** @internal */\r\n    _updateCursor (val: string): void {\r\n\r\n    }\r\n    /** @internal */\r\n    _updateDisplay (val: string): void {\r\n        this._hide = val === 'none';\r\n    }\r\n    /** @internal */\r\n    _updateBorderLeftColor (val: Vec4): void {\r\n        this._borderLeftColor.x = val.x;\r\n        this._borderLeftColor.y = val.y;\r\n        this._borderLeftColor.z = val.z;\r\n        this._borderLeftColor.w = val.w;\r\n        this._invalidateContent ();\r\n    }\r\n    /** @internal */\r\n    _updateBorderTopColor (val: Vec4): void {\r\n        this._borderTopColor.x = val.x;\r\n        this._borderTopColor.y = val.y;\r\n        this._borderTopColor.z = val.z;\r\n        this._borderTopColor.w = val.w;\r\n        this._invalidateContent ();\r\n    }\r\n    /** @internal */\r\n    _updateBorderRightColor (val: Vec4): void {\r\n        this._borderRightColor.x = val.x;\r\n        this._borderRightColor.y = val.y;\r\n        this._borderRightColor.z = val.z;\r\n        this._borderRightColor.w = val.w;\r\n        this._invalidateContent ();\r\n    }\r\n    /** @internal */\r\n    _updateBorderBottomColor (val: Vec4): void {\r\n        this._borderBottomColor.x = val.x;\r\n        this._borderBottomColor.y = val.y;\r\n        this._borderBottomColor.z = val.z;\r\n        this._borderBottomColor.w = val.w;\r\n        this._invalidateContent ();\r\n    }\r\n    /** @internal */\r\n    _updateBackgroundColor (val: Vec4): void {\r\n        this._backgroundColor.x = val.x;\r\n        this._backgroundColor.y = val.y;\r\n        this._backgroundColor.z = val.z;\r\n        this._backgroundColor.w = val.w;\r\n        this._invalidateContent ();\r\n    }\r\n    /** @internal */\r\n    _updateFont (val: string): void {\r\n        if (this.style.font === val) {\r\n            this._font = val ? new Font (val) : null;\r\n        }\r\n        this._invalidateContent ();\r\n        this._invalidateLayout ();\r\n        for (const child of this._childNodes) {\r\n            child._updateFont (val);\r\n        }\r\n    }\r\n    /** @internal */\r\n    _updateFontSize (val: string): void {\r\n        val = val || null;\r\n        if (this._cachedFontSize !== val) {\r\n            this._cachedFontSize = val;\r\n            this._font = null;\r\n            this._invalidateContent ();\r\n            this._invalidateLayout ();\r\n            for (const child of this._childNodes) {\r\n                child._invalidateFont (true, false);\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    _updateFontFamily (val: string): void {\r\n        val = val || null;\r\n        if (this._cachedFontFamily !== val) {\r\n            this._cachedFontFamily = val;\r\n            this._font = null;\r\n            this._invalidateContent ();\r\n            this._invalidateLayout ();\r\n            for (const child of this._childNodes) {\r\n                child._invalidateFont (false, true);\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    _updateFontColor (val: string): void {\r\n        if (this.style.color === val) {\r\n            this._fontColor = val ? this.style.parseColor (val) : null;\r\n        }\r\n        this._invalidateContent ();\r\n        for (const child of this._childNodes) {\r\n            child._updateFontColor (val);\r\n        }\r\n    }\r\n    /** @internal */\r\n    _isSucceedingOf (w: RMLNode): boolean {\r\n        let p: RMLNode = this;\r\n        while (p && p !== w) {\r\n            p = p.parentNode;\r\n        }\r\n        return !!p;\r\n    }\r\n    /** @internal */\r\n    _isValid (): boolean {\r\n        return this._uiscene && this._isSucceedingOf (this._uiscene.document);\r\n    }\r\n    /** @internal */\r\n    _invalidateLayout () {\r\n        if (this._isSucceedingOf (this._uiscene.document)) {\r\n            this._layout.markDirty ();\r\n            this._uiscene.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    _invalidateContent () {\r\n        this._contentDirty = true;\r\n    }\r\n    /** @internal */\r\n    _invalidateFont (sizeChange:boolean, familyChange:boolean) {\r\n        if ((sizeChange && this._cachedFontSize === null) || (familyChange && this._cachedFontFamily === null)) {\r\n            this._font = null;\r\n            this._invalidateContent ();\r\n            for (const child of this._childNodes) {\r\n                child._invalidateFont (sizeChange, familyChange);\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    _reparent (p: RMLNode, at?: RMLNode): RMLNode {\r\n        if (this._parent !== p) {\r\n            this._remove ();\r\n            this._parent = p;\r\n            if (p) {\r\n                p._insertChild (this, at ? p._childNodes.indexOf (at) : -1);\r\n                this._disable (p._disableCounter);\r\n                this.dispatchEvent (new DOMTreeEvent(DOMTreeEvent.NAME_INSERTED, p));\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /** @internal */\r\n    _calcLayout () {\r\n        this._layout.calcLayout ();\r\n        this._syncLayout ();\r\n    }\r\n    /** @internal */\r\n    _getClipper (clipToClient: boolean): UIRect {\r\n        const clipper: UIRect = this._layout.clippedRect || (clipToClient ? this._layout.clientRect : {\r\n            x: 0,\r\n            y: 0,\r\n            width: this._layout.actualRect.width,\r\n            height: this._layout.actualRect.height\r\n        });\r\n        return clipper.width > 0 && clipper.height > 0 ? clipper : null;\r\n    }\r\n    /** @internal */\r\n    _measureContentSize (rc: UIRect): UIRect {\r\n        rc.width = 0;\r\n        rc.height = 0;\r\n        return rc;\r\n    }\r\n    /** @internal */\r\n    _onMouseIn (x: number, y: number) {\r\n        this._mouseIn = true;\r\n        this._updateState ();\r\n    }\r\n    /** @internal */\r\n    _onMouseOut (x: number, y: number) {\r\n        this._mouseIn = false;\r\n        this._updateState ();\r\n    }\r\n    /** @internal */\r\n    _onMouseEnter (x: number, y: number) {\r\n        const cursor = this.style.cursor || defaultCursor;\r\n        if (cursor !== 'auto') {\r\n            this._uiscene.renderer.setCursorStyle (cursor);\r\n        }\r\n    }\r\n    /** @internal */\r\n    _onMouseLeave (x: number, y: number) {\r\n    }\r\n    /** @internal */\r\n    _onMouseDown (x: number, y: number) {\r\n        this._mouseDown = true;\r\n        this._updateState ();\r\n    }\r\n    /** @internal */\r\n    _onMouseUp (x: number, y: number) {\r\n        this._mouseDown = false;\r\n        this._updateState ();\r\n    }\r\n    /** @internal */\r\n    _getDefaultStyleSheet (): IStyleSheet {\r\n        const style = {} as IStyleSheet;\r\n        style.flex = '0 1 auto';\r\n        style.flexDirection = 'row';\r\n        style.width = 'auto';\r\n        style.height = 'auto';\r\n        return style;\r\n    }\r\n    /** @internal */\r\n    _resetStyle () {\r\n        this._font = null;\r\n        this._fontColor = null;\r\n        this.style.reset ();\r\n        this.style.applyStyleSheet (this._getDefaultStyleSheet(), false);\r\n    }\r\n    /** @internal */\r\n    _applyInlineStyles () {\r\n    }\r\n    /** @internal */\r\n    _isVisible (): boolean {\r\n        return !this._hide && (!this._parent || this._parent._isVisible());\r\n    }\r\n    /** @internal */\r\n    _getLayout (): UILayout {\r\n        return this._layout;\r\n    }\r\n    /** @internal */\r\n    _syncLayout () {\r\n        this._layout.calcLayoutScroll ();\r\n        this._layout.calcLayoutClip ();\r\n        this._notifyLayoutEvents ();\r\n    }\r\n    /** @internal */\r\n    protected _updateState () {\r\n        if (this._pseudo === RMLNode.PSEUDO_NONE) {\r\n            this._uiscene._markStyleRefreshForElement (this);\r\n        }\r\n    }\r\n    /** @internal */\r\n    protected _draw (renderer: Renderer) {\r\n        if (this._batchList.length > 0) {\r\n            this._uiscene._drawBatchList (this._batchList);\r\n        }\r\n    }\r\n    /** @internal */\r\n    protected _buildVertexData () {\r\n        const w = this._layout.actualRect.width;\r\n        const h = this._layout.actualRect.height;\r\n        const img = this._backgroundImage;\r\n        let drawPatch9: boolean = !!(img?.topLeftPatch9 && img?.bottomRightPatch9);\r\n        if (drawPatch9) {\r\n            if (img.topLeftPatch9.x + img.bottomRightPatch9.x > this._layout.actualRect.height\r\n                || img.topLeftPatch9.y + img.bottomRightPatch9.y > this._layout.actualRect.width) {\r\n                drawPatch9 = false;\r\n            }\r\n        }\r\n        const color = this._backgroundColor;\r\n        const clipper = this._getClipper (false);\r\n        if (clipper) {\r\n            if (color.w > 0) {\r\n                if (!drawPatch9) {\r\n                    const u1 = img?.uvMin.x || 0;\r\n                    const v1 = img?.uvMin.y || 0;\r\n                    const u2 = img?.uvMax.x || 0;\r\n                    const v2 = img?.uvMax.y || 0;\r\n                    this._batchList.addPrimitive (new RMLRectPrimitive(0, 0, w, h, u1, v1, u2, v2), clipper, this._backgroundImage?.texture || null, color);\r\n                } else {\r\n                    let t = img.topLeftPatch9.x;\r\n                    let l = img.topLeftPatch9.y;\r\n                    let b = img.bottomRightPatch9.x;\r\n                    let r = img.bottomRightPatch9.y;\r\n                    const u1 = img.uvMin.x;\r\n                    const v1 = img.uvMin.y;\r\n                    const u2 = img.uvMax.x;\r\n                    const v2 = img.uvMax.y;\r\n                    const aw = (this._uiscene.renderer.getTextureWidth(img.texture) * (u2 - u1) + 0.5) | 0;\r\n                    const ah = (this._uiscene.renderer.getTextureHeight(img.texture) * (v2 - v1) + 0.5) | 0;\r\n                    const ul = u1 + (u2 - u1) * l;\r\n                    const ur = u1 + (u2 - u1) * r;\r\n                    const vt = v1 + (v2 - v1) * t;\r\n                    const vb = v1 + (v2 - v1) * b;\r\n                    t = (t * ah) | 0;\r\n                    l = (l * aw) | 0;\r\n                    b = ah - ((b * ah) | 0);\r\n                    r = aw - ((r * aw) | 0);\r\n                    const quads = [\r\n                        (t === 0 || l === 0) ? null : [0, 0, l, t, u1, v1, ul, vt],\r\n                        (t === 0) ? null : [t, 0, w - l - r, t, ul, v1, ur, vt],\r\n                        (t === 0 || r === 0) ? null : [w - r, 0, r, t, ur, v1, u2, vt],\r\n                        (t + b === h) ? null : [0, t, l, h - t - b, u1, vt, ul, vb],\r\n                        (t + b === h) ? null : [l, t, w - l - r, h - t - b, ul, vt, ur, vb],\r\n                        (t + b === h) ? null : [w - r, t, r, h - t - b, ur, vt, u2, vb],\r\n                        (b === 0 || l === 0) ? null : [0, h - b, l, b, u1, vb, ul, v2],\r\n                        (b === 0) ? null : [l, h - b, w - l - r, b, ul, vb, ur, v2],\r\n                        (b === 0 || r === 0) ? null : [w - r, h - b, r, b, ur, vb, u2, v2]\r\n                    ];\r\n                    for (const q of quads) {\r\n                        if (q) {\r\n                            tmpUV1.x = q[4];\r\n                            tmpUV1.y = q[5];\r\n                            tmpUV2.x = q[6];\r\n                            tmpUV2.y = q[7];\r\n                            this._batchList.addPrimitive (new RMLRectPrimitive(q[0],q[1],q[2],q[3],q[4],q[5],q[6],q[7]), clipper, this._backgroundImage?.texture || null, color);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const borderLeft = this.style.borderLeftWidth ? parseInt(this.style.borderLeftWidth as string) : 0;\r\n            const borderTop = this.style.borderTopWidth ? parseInt(this.style.borderTopWidth as string): 0;\r\n            const borderRight = this.style.borderRightWidth ? parseInt(this.style.borderRightWidth as string): 0;\r\n            const borderBottom = this.style.borderBottomWidth ? parseInt(this.style.borderBottomWidth as string): 0;\r\n            const borderColorLeft = this._borderLeftColor;\r\n            const borderColorTop = this._borderTopColor;\r\n            const borderColorRight = this._borderRightColor;\r\n            const borderColorBottom = this._borderBottomColor;\r\n            if (borderLeft && borderColorLeft.w > 0) {\r\n                this._batchList.addPrimitive (new RMLPolygonPrimitive([\r\n                    {x:0,y:0},\r\n                    {x:borderLeft,y:borderTop},\r\n                    {x:borderLeft,y:h-borderBottom},\r\n                    {x:0,y:h}]), clipper, null, borderColorLeft);\r\n            }\r\n            if (borderTop && borderColorTop.w > 0) {\r\n                this._batchList.addPrimitive (new RMLPolygonPrimitive([\r\n                    {x:0,y:0},\r\n                    {x:w,y:0},\r\n                    {x:w-borderRight,y:borderTop},\r\n                    {x:borderLeft,y:borderTop}\r\n                ]), clipper, null, borderColorTop);\r\n            }\r\n            if (borderRight && borderColorRight.w > 0) {\r\n                this._batchList.addPrimitive (new RMLPolygonPrimitive([\r\n                    {x:w-borderRight,y:borderTop},\r\n                    {x:w,y:0},\r\n                    {x:w,y:h},\r\n                    {x:w-borderRight,y:h-borderBottom}\r\n                ]), clipper, null, borderColorRight);\r\n            }\r\n            if (borderBottom && borderColorBottom.w > 0) {\r\n                this._batchList.addPrimitive (new RMLPolygonPrimitive([\r\n                    {x:0,y:h},\r\n                    {x:borderLeft,y:h-borderBottom},\r\n                    {x:w-borderRight,y:h-borderBottom},\r\n                    {x:w,y:h}\r\n                ]), clipper, null, borderColorBottom);\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    _isText (): boolean {\r\n        return false;\r\n    }\r\n    /** @internal */\r\n    _isInternal (): boolean {\r\n        return this._internal;\r\n    }\r\n    /** @internal */\r\n    _setInternal (): void {\r\n        this._internal = true;\r\n    }\r\n    /** @internal */\r\n    _getPseudo (): number {\r\n        return this._pseudo;\r\n    }\r\n    /** @internal */\r\n    _setPseudo (val: number) {\r\n        this._pseudo = val;\r\n    }\r\n    /** @internal */\r\n    _isHover (): boolean {\r\n        return this._mouseIn;\r\n    }\r\n    /** @internal */\r\n    _isActive (): boolean {\r\n        return this._mouseDown;\r\n    }\r\n    /** @internal */\r\n    _disable (count: number) {\r\n        this._disableCounter += count;\r\n        for (const child of this._childNodes) {\r\n            child._disable (count);\r\n        }\r\n    }\r\n    /** @internal */\r\n    _markRenderOrderChanged () {\r\n        this._renderOrderChanged = true;\r\n    }\r\n    /** @internal */\r\n    _updateRenderOrders () {\r\n        this._renderOrder = this._childNodes.map ((val, index) => index);\r\n        // do stable sort\r\n        this._renderOrder.sort ((a, b) => (this._childNodes[a]._getZIndex() - this._childNodes[b]._getZIndex()) || a - b);\r\n    }\r\n    /** @internal */\r\n    _notifyLayoutEvents () {\r\n        if (this._layout.changeStamp !== this._layoutChangeStamp) {\r\n            this._layoutChangeStamp = this._layout.changeStamp;\r\n            this._invalidateContent ();\r\n            this.dispatchEvent (new ElementLayoutEvent());\r\n        }\r\n        this._updateScrollState ();\r\n        for (const child of this._childNodes) {\r\n            child._notifyLayoutEvents ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    _notifyTextContentEvents () {\r\n        this.dispatchEvent (new TextContentChangeEvent());\r\n    }\r\n    /** @internal */\r\n    _getZIndex (): number {\r\n        let val = Number(this.style.zIndex);\r\n        if (Number.isNaN (val)) {\r\n            val = 0;\r\n        }\r\n        return val;\r\n    }\r\n    /** @internal */\r\n    _removeChild (index: number) {\r\n        const child = this._childNodes[index];\r\n        this._layout.removeChild (this._childNodes[index]._getLayout());\r\n        this._childNodes.splice (index, 1);\r\n        this._invalidateLayout ();\r\n        this._markRenderOrderChanged ();\r\n    }\r\n    /** @internal */\r\n    _insertChild (child: RMLNode, index: number = -1) {\r\n        if (index >= 0) {\r\n            let p = this._childNodes[index];\r\n            this._layout.insertChild (child._getLayout(), p._getLayout());\r\n            this._childNodes.splice (index, 0, child);\r\n            if (child.nodeType === RMLNode.ELEMENT_NODE) {\r\n                for (; p; p = p.nextSibling) {\r\n                    if (p.nodeType === RMLNode.ELEMENT_NODE) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            this._layout.appendChild (child._getLayout());\r\n            this._childNodes.push (child);\r\n        }\r\n        this._invalidateLayout ();\r\n        this._markRenderOrderChanged ();\r\n    }\r\n    /** @internal */\r\n    _getChildren (): RMLNode[] {\r\n        return this._childNodes;\r\n    }\r\n    /** @internal */\r\n    protected _getFirstChild (element: boolean): RMLNode {\r\n        for (let child = this._layout.firstChild()?.element; child; child = child._layout.nextSibling()?.element) {\r\n            if (!child._isInternal() && (!element || child.nodeType === RMLNode.ELEMENT_NODE)) {\r\n                return child;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /** @internal */\r\n    _getLastChild (element: boolean): RMLNode {\r\n        for (let child = this._layout.lastChild()?.element; child; child = child._layout.previousSibling()?.element) {\r\n            if (!child._isInternal() && (!element || child.nodeType === RMLNode.ELEMENT_NODE)) {\r\n                return child;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /** @internal */\r\n    _getNextSibling (element: boolean): RMLNode {\r\n        let result: RMLNode = this;\r\n        do {\r\n            result = result._layout.nextSibling()?.element || null;\r\n        } while (result && (result._isInternal() || (!!element && result.nodeType !== RMLNode.ELEMENT_NODE)));\r\n        return result;\r\n    }\r\n    /** @internal */\r\n    _getPreviousSibling (element: boolean): RMLNode {\r\n        let result: RMLNode = this;\r\n        do {\r\n            result = result._layout.previousSibling()?.element || null;\r\n        } while (result && (result._isInternal() || (!!element && result.nodeType !== RMLNode.ELEMENT_NODE)));\r\n        return result;\r\n    }\r\n    /** @internal */\r\n    _init (): void {\r\n    }\r\n    protected _updateScrollState (): void {\r\n        const overflowX = this.style.overflowX || 'auto';\r\n        const overflowY = this.style.overflowY || 'auto';\r\n        let xOverflow = overflowX === 'scroll' || (overflowX === 'auto' && this._layout.scrollRect !== null && this._layout.scrollRect.width > this._layout.actualRect.width);\r\n        let yOverflow = overflowY === 'scroll' || (overflowY === 'auto' && this._layout.scrollRect !== null && this._layout.scrollRect.height > this._layout.actualRect.height);\r\n        const scrollBarSize = 12;\r\n        const blockSize = 8;\r\n        const buttonSize = 12;\r\n        if (xOverflow) {\r\n            const width = yOverflow ? this._layout.clientRect.width - scrollBarSize : this._layout.clientRect.width;\r\n            if (this._layout.clientRect.height < scrollBarSize || width < 2 * buttonSize + blockSize) {\r\n                xOverflow = false;\r\n            } else {\r\n                if (!this._hScroll) {\r\n                    this._hScroll = this._uiscene.createElement('scrollbar');\r\n                    this._hScroll.style.position = 'fixed';\r\n                    this._hScroll.style.zIndex = 999999;\r\n                    this._hScroll.style.height = scrollBarSize;\r\n                    (this._hScroll as any).setAttribute ('orientation', 'horizonal');\r\n                    (this._hScroll as any).setAttribute ('blockSize', String(blockSize));\r\n                    (this._hScroll as any).setAttribute ('buttonSize', String(buttonSize));\r\n                    this._hScroll._setInternal ();\r\n                    this._hScroll.addEventListener (ValueChangeEvent.NAME, (e: Event) => {\r\n                        const data: ValueChangeEvent = e as ValueChangeEvent;\r\n                        this.scrollX = data.value;\r\n                    });\r\n                    this.appendChild (this._hScroll);                                \r\n                }\r\n                (this._hScroll as any).setAttribute ('rangeStart', String(this._layout.minScrollX));\r\n                (this._hScroll as any).setAttribute ('rangeEnd', String(this._layout.maxScrollX));\r\n                (this._hScroll as any).setAttribute ('value', String(this.scrollX));\r\n                this._hScroll.style.left = this._layout.clientRect.x - this._layout.borderRect.x;\r\n                this._hScroll.style.width = width;\r\n                this._hScroll.style.bottom = this._layout.borderRect.height - this._layout.clientRect.height - this._layout.clientRect.y + this._layout.borderRect.y;\r\n            }\r\n        } \r\n        if (!xOverflow && this._hScroll) {\r\n            this.removeChild (this._hScroll);\r\n            this._hScroll = null;\r\n        }\r\n        if (yOverflow) {\r\n            const height = xOverflow ? this._layout.clientRect.height - scrollBarSize : this._layout.clientRect.height;\r\n            if (this._layout.clientRect.width < scrollBarSize || height < 2 * buttonSize + blockSize) {\r\n                yOverflow = false;\r\n            } else {\r\n                if (!this._vScroll) {\r\n                    this._vScroll = this._uiscene.createElement('scrollbar');\r\n                    this._vScroll.style.position = 'fixed';\r\n                    this._vScroll.style.zIndex = 999999;\r\n                    this._vScroll.style.width = scrollBarSize;\r\n                    (this._vScroll as any).setAttribute ('orientation', 'vertical');\r\n                    (this._vScroll as any).setAttribute('blockSize', String(blockSize));\r\n                    (this._vScroll as any).setAttribute('buttonSize', String(buttonSize));\r\n                    this._vScroll._setInternal ();\r\n                    this._vScroll.addEventListener (ValueChangeEvent.NAME, (e: Event) => {\r\n                        const data: ValueChangeEvent = e as ValueChangeEvent;\r\n                        this.scrollY = data.value;\r\n                    });\r\n                    this.appendChild (this._vScroll);            \r\n                }\r\n                (this._vScroll as any).setAttribute('rangeStart', String(this._layout.minScrollY));\r\n                (this._vScroll as any).setAttribute('rangeEnd', String(this._layout.maxScrollY));\r\n                (this._vScroll as any).setAttribute('value', String(this.scrollY));\r\n                this._vScroll.style.top = this._layout.clientRect.y - this._layout.borderRect.y;\r\n                this._vScroll.style.height = height;\r\n                this._vScroll.style.right = this._layout.borderRect.width - this._layout.clientRect.width - this._layout.clientRect.x + this._layout.borderRect.x;\r\n            }\r\n        } \r\n        if (!yOverflow && this._vScroll) {\r\n            this.removeChild (this._vScroll);\r\n            this._vScroll = null;\r\n        }\r\n    }\r\n}","import { RMLNode } from '.';\r\n\r\ninterface IndexIterator extends Iterator<[number, RMLNode]> {\r\n    lastIndex: number;\r\n}\r\n\r\ninterface IndexKeyIterator extends Iterator<number> {\r\n    lastIndex: number;\r\n}\r\n\r\ninterface IndexValueIterator extends Iterator<RMLNode> {\r\n    lastIndex: number;\r\n}\r\n\r\nclass ElementIndexer {\r\n    static readonly MODE_ALL = 0;\r\n    static readonly MODE_NON_INTERNAL = 1;\r\n    static readonly MODE_ELEMENT_NON_INTERNAL = 2;\r\n    protected _parent: RMLNode;\r\n    protected _currentIndex: number;\r\n    protected _currentNode: RMLNode;\r\n    protected _length: number;\r\n    protected _mode: number;\r\n    protected _domTag: number;\r\n    constructor (parent: RMLNode, mode: number) {\r\n        this._parent = parent;\r\n        this._currentIndex = -1;\r\n        this._currentNode = null;\r\n        this._length = -1;\r\n        this._mode = mode;\r\n        this._domTag = parent.gui.domTag;\r\n    }\r\n    get length (): number {\r\n        return this._getLength ();\r\n    }\r\n    item (index: number): RMLNode {\r\n        return this._at (index);\r\n    }\r\n    entries (): Iterable<[number, RMLNode]> {\r\n        return this._getEntriesIterator ();\r\n    }\r\n    keys (): Iterable<number> {\r\n        return this._getKeysIterator ();\r\n    }\r\n    values (): Iterable<RMLNode> {\r\n        return this._getValuesIterator ();\r\n    }\r\n    forEach (callback: (currentValue: RMLNode, currentIndex?: number, listObj?: any) => void, thisArg?: any) {\r\n        for (const entry of this.entries()) {\r\n            callback && callback.call (thisArg, entry[1], entry[0], this);\r\n        }\r\n    }\r\n    indexOf (node: RMLNode): number {\r\n        for (let i = 0; i < this.length; i++) {\r\n            if (this.item(i) === node) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    private _at (index: number): RMLNode {\r\n        if (index < 0 || index >= this.length) {\r\n            return null;\r\n        }\r\n        if (this._currentIndex < 0 || this._currentIndex >= this.length) {\r\n            this._reset (index);\r\n        } else {\r\n            while (index < this._currentIndex) {\r\n                this._previous ();\r\n            }\r\n            while (index > this._currentIndex) {\r\n                this._next ();\r\n            }\r\n        }\r\n        return this._currentNode;\r\n    }\r\n    private _reset (index: number) {\r\n        this._length = -1;\r\n        this._currentIndex = 0;\r\n        switch (this._mode) {\r\n            case ElementIndexer.MODE_ALL:\r\n                this._currentNode = this._parent._getLayout().firstChild()?.element || null;\r\n                break;\r\n            case ElementIndexer.MODE_NON_INTERNAL:\r\n                this._currentNode = this._getFirstNonInternalNode ();\r\n                break;\r\n            case ElementIndexer.MODE_ELEMENT_NON_INTERNAL:\r\n                this._currentNode = this._getFirstNonInternalElement ();\r\n                break;\r\n            default:\r\n               \r\n            break;\r\n        }    \r\n        while (this._currentIndex < index && this._currentNode) {\r\n            this._next ();\r\n        }\r\n    }\r\n    private _getFirstNonInternalNode (): RMLNode {\r\n        for (let child = this._parent._getLayout().firstChild(); child; child = child.nextSibling()) {\r\n            if (!child.element._isInternal()) {\r\n                return child.element;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    private _getFirstNonInternalElement (): RMLNode {\r\n        for (let child = this._parent._getLayout().firstChild(); child; child = child.nextSibling()) {\r\n            if (!child.element._isInternal() && child.element.nodeType === RMLNode.ELEMENT_NODE) {\r\n                return child.element;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    private _getLengthAll (): number {\r\n        return this._parent._getLayout().getNumChildren ();\r\n    }\r\n    private _getLengthNonInternalNode (): number {\r\n        let length = 0;\r\n        for (let child = this._parent._getLayout().firstChild(); child; child = child.nextSibling()) {\r\n            if (!child.element._isInternal()) {\r\n                length++;\r\n            }\r\n        }\r\n        return length;\r\n    }\r\n    private _getLengthNonInternalElement (): number {\r\n        let length = 0;\r\n        for (let child = this._parent._getLayout().firstChild(); child; child = child.nextSibling()) {\r\n            if (!child.element._isInternal() && child.element.nodeType === RMLNode.ELEMENT_NODE) {\r\n                length++;\r\n            }\r\n        }\r\n        return length;\r\n    }\r\n    private _getLength (): number {\r\n        if (this._domTag !== this._parent.gui.domTag) {\r\n            this._domTag = this._parent.gui.domTag;\r\n            this._reset (this._currentIndex);\r\n        }\r\n        if (this._length < 0) {\r\n            switch (this._mode) {\r\n                case ElementIndexer.MODE_ALL:\r\n                    this._length = this._getLengthAll ();\r\n                    break;\r\n                case ElementIndexer.MODE_NON_INTERNAL:\r\n                    this._length = this._getLengthNonInternalNode ();\r\n                    break;\r\n                case ElementIndexer.MODE_ELEMENT_NON_INTERNAL:\r\n                    this._length = this._getLengthNonInternalElement ();\r\n                    break;\r\n            }\r\n        }\r\n        return this._length;\r\n    }\r\n    private _getKeysIterator () {\r\n        const that = this;\r\n        return {\r\n            [Symbol.iterator] (): IndexKeyIterator {\r\n                return {\r\n                    lastIndex: -1,\r\n                    next (): IteratorResult<number> {\r\n                        this.lastIndex++;\r\n                        if (that._domTag !== that._parent.gui.domTag) {\r\n                            that._domTag = that._parent.gui.domTag;\r\n                            that._reset (this.lastIndex);\r\n                        }\r\n                        if (this.lastIndex >= that.length) {\r\n                            this.lastIndex = -1;\r\n                            return {\r\n                                done: true,\r\n                                value: null\r\n                            };\r\n                        } else {\r\n                            return {\r\n                                done: false,\r\n                                value: this.lastIndex\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private _getEntriesIterator () {\r\n        const that = this;\r\n        return {\r\n            [Symbol.iterator] (): IndexIterator {\r\n                return { \r\n                    lastIndex: -1,\r\n                    next (): IteratorResult<[number, RMLNode]> {\r\n                        this.lastIndex++;\r\n                        if (that._domTag !== that._parent.gui.domTag || that._currentIndex !== this.lastIndex) {\r\n                            that._domTag = that._parent.gui.domTag;\r\n                            that._reset (this.lastIndex);\r\n                        }\r\n                        if (!that._currentNode) {\r\n                            this.lastIndex = -1;\r\n                            return {\r\n                                done: true,\r\n                                value: null\r\n                            }\r\n                        } else {\r\n                            const ret: IteratorResult<[number, RMLNode]> = {\r\n                                done: false,\r\n                                value: [ that._currentIndex, that._currentNode ]\r\n                            }\r\n                            that._next ();\r\n                            return ret;\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n    private _getValuesIterator () {\r\n        const that = this;\r\n        return {\r\n            [Symbol.iterator] (): IndexValueIterator {\r\n                return { \r\n                    lastIndex: -1,\r\n                    next (): IteratorResult<RMLNode> {\r\n                        this.lastIndex++;\r\n                        if (that._domTag !== that._parent.gui.domTag || that._currentIndex !== this.lastIndex) {\r\n                            that._domTag = that._parent.gui.domTag;\r\n                            that._reset (this.lastIndex);\r\n                        }\r\n                        if (!that._currentNode) {\r\n                            this.lastIndex = -1;\r\n                            return {\r\n                                done: true,\r\n                                value: null\r\n                            }\r\n                        } else {\r\n                            const ret: IteratorResult<RMLNode> = {\r\n                                done: false,\r\n                                value: that._currentNode\r\n                            }\r\n                            that._next ();\r\n                            return ret;\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n    private _next (): void {\r\n        if (this._currentNode) {\r\n            switch (this._mode) {\r\n                case ElementIndexer.MODE_ALL: {\r\n                    this._currentNode = this._currentNode._getLayout().nextSibling()?.element || null;\r\n                    break;\r\n                }\r\n                case ElementIndexer.MODE_NON_INTERNAL: {\r\n                    do {\r\n                        this._currentNode = this._currentNode._getLayout().nextSibling()?.element || null;\r\n                    } while (this._currentNode?._isInternal());\r\n                    break;\r\n                }\r\n                case ElementIndexer.MODE_ELEMENT_NON_INTERNAL: {\r\n                    do {\r\n                        this._currentNode = this._currentNode._getLayout().nextSibling()?.element || null;\r\n                    } while (this._currentNode && (this._currentNode._isInternal() || this._currentNode.nodeType !== RMLNode.ELEMENT_NODE));\r\n                    break;\r\n                }\r\n            }\r\n            this._currentIndex++;\r\n        }\r\n    }\r\n    private _previous (): void {\r\n        if (this._currentNode) {\r\n            switch (this._mode) {\r\n                case ElementIndexer.MODE_ALL: {\r\n                    this._currentNode = this._currentNode._getLayout().previousSibling()?.element || null;\r\n                    break;\r\n                }\r\n                case ElementIndexer.MODE_NON_INTERNAL: {\r\n                    do {\r\n                        this._currentNode = this._currentNode._getLayout().previousSibling()?.element || null;\r\n                    } while (this._currentNode?._isInternal());\r\n                    break;\r\n                }\r\n                case ElementIndexer.MODE_ELEMENT_NON_INTERNAL: {\r\n                    do {\r\n                        this._currentNode = this._currentNode._getLayout().previousSibling()?.element || null;\r\n                    } while (this._currentNode && (this._currentNode._isInternal() || this._currentNode.nodeType !== RMLNode.ELEMENT_NODE));\r\n                    break;\r\n                }\r\n            }\r\n            this._currentIndex--;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface RMLNodeList {\r\n    length: number;\r\n    item (index: number): RMLNode;\r\n    entries (): Iterable<[number, RMLNode]>;\r\n    keys (): Iterable<number>;\r\n    values (): Iterable<RMLNode>;\r\n    indexOf (node: RMLNode): number;\r\n    forEach (callback: (currentValue: RMLNode, currentIndex?: number, listObj?: RMLNodeList) => void, thisArg?: any): void;\r\n    [index: number]: RMLNode;\r\n}\r\n\r\n/** @internal */\r\nexport interface RMLStaticNodeList extends RMLNodeList {\r\n}\r\n\r\n/** @internal */\r\nexport class RMLStaticNodeList {\r\n    private _nodelist: RMLNode[];\r\n    constructor (nodelist: RMLNode[]) {\r\n        this._nodelist = nodelist;\r\n        const proxy = new Proxy (this, {\r\n            get: function (target, name) {\r\n                if (typeof name === 'string' && /^\\d+$/.test(name)) {\r\n                    return target._nodelist[parseInt(name)] || undefined;\r\n                } else {\r\n                    return target[name];\r\n                }\r\n            },\r\n            set: function (target, name, value) {\r\n                return false;\r\n            }\r\n        });\r\n        return proxy;\r\n    }\r\n    get length(): number {\r\n        return this._nodelist.length;\r\n    }\r\n    item (index: number): RMLNode {\r\n        return this._nodelist[index] || null;\r\n    }\r\n    entries (): Iterable<[number, RMLNode]> {\r\n        const that = this;\r\n        return {\r\n            [Symbol.iterator] (): IndexIterator {\r\n                return { \r\n                    lastIndex: -1,\r\n                    next (): IteratorResult<[number, RMLNode]> {\r\n                        this.lastIndex++;\r\n                        if (this.lastIndex >= that.length) {\r\n                            this.lastIndex = -1;\r\n                            return {\r\n                                done: true,\r\n                                value: null\r\n                            }\r\n                        } else {\r\n                            return {\r\n                                done: false,\r\n                                value: [ this.lastIndex, that.item(this.lastIndex) ]\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n    keys (): Iterable<number> {\r\n        const that = this;\r\n        return {\r\n            [Symbol.iterator] (): IndexKeyIterator {\r\n                return { \r\n                    lastIndex: -1,\r\n                    next (): IteratorResult<number> {\r\n                        this.lastIndex++;\r\n                        if (this.lastIndex >= that.length) {\r\n                            this.lastIndex = -1;\r\n                            return {\r\n                                done: true,\r\n                                value: null\r\n                            }\r\n                        } else {\r\n                            return {\r\n                                done: false,\r\n                                value: this.lastIndex\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n    values (): Iterable<RMLNode> {\r\n        const that = this;\r\n        return {\r\n            [Symbol.iterator] (): IndexValueIterator {\r\n                return { \r\n                    lastIndex: -1,\r\n                    next (): IteratorResult<RMLNode> {\r\n                        this.lastIndex++;\r\n                        if (this.lastIndex >= that.length) {\r\n                            this.lastIndex = -1;\r\n                            return {\r\n                                done: true,\r\n                                value: null\r\n                            }\r\n                        } else {\r\n                            return {\r\n                                done: false,\r\n                                value: that.item(this.lastIndex)\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n    indexOf (node: RMLNode): number {\r\n        return this._nodelist.indexOf (node);\r\n    }\r\n    forEach (callback: (currentValue: RMLNode, currentIndex?: number, listObj?: RMLNodeList) => void, thisArg?: any): void {\r\n        const that = this;\r\n        if (callback) {\r\n            for (let i = 0; i < this._nodelist.length; i++) {\r\n                callback.call (thisArg, that._nodelist[i], i, that);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** @internal */\r\nexport interface RMLLiveNodeList extends RMLNodeList {\r\n}\r\n\r\n/** @internal */\r\nexport class RMLLiveNodeList {\r\n    static readonly MODE_ALL = ElementIndexer.MODE_ALL;\r\n    static readonly MODE_NON_INTERNAL = ElementIndexer.MODE_NON_INTERNAL;\r\n    static readonly MODE_ELEMENT_NON_INTERNAL = ElementIndexer.MODE_ELEMENT_NON_INTERNAL;\r\n    private _indexer: ElementIndexer;\r\n    constructor (parent: RMLNode, mode: number) {\r\n        this._indexer = new ElementIndexer (parent, mode);\r\n        const proxy = new Proxy (this, {\r\n            get: function (target, name) {\r\n                if (typeof name === 'string' && /^\\d+$/.test(name)) {\r\n                    return target._indexer.item (parseInt(name)) || undefined;\r\n                } else {\r\n                    return target._indexer[name];\r\n                }\r\n            },\r\n            set: function (target, name, value) {\r\n                if (typeof name === 'string' && /^\\d+$/.test(name)) {\r\n                    return false;\r\n                } else {\r\n                    target._indexer[name] = value;\r\n                    return true;\r\n                }\r\n            }\r\n        });\r\n        return proxy;\r\n    }\r\n}","import { UIRect, Vec4, Texture } from '.';\r\n\r\nexport abstract class RMLPrimitive {\r\n    abstract forEach (callback: (x: number, y: number, u: number, v: number) => void, thisArg?: any);\r\n    abstract clipToRect (x: number, y: number, w: number, h: number): RMLPrimitive;\r\n}\r\n\r\ntype Vertex = { x: number, y: number, u?: number, v?: number };\r\nexport class RMLPolygonPrimitive extends RMLPrimitive {\r\n    private _vertices: Vertex[];\r\n    constructor (vertices?: Vertex[]) {\r\n        super ();\r\n        this._vertices = vertices || [];\r\n    }\r\n    get vertices () {\r\n        return this._vertices;\r\n    }\r\n    set vertices (v) {\r\n        this._vertices = v || [];\r\n    }\r\n    forEach (callback: (x: number, y: number, u: number, v: number) => void, thisArg?: any) {\r\n        const indices: number[] = [];\r\n        if (this._vertices.length > 2) {\r\n            const numQuads = Math.ceil((this._vertices.length - 2) / 2);\r\n            for (let i = 0; i < numQuads; i++) {\r\n                indices.push (0);\r\n                indices.push (i * 2 + 1);\r\n                indices.push (i * 2 + 2);\r\n                indices.push (Math.min(this._vertices.length - 1, i * 2 + 3));\r\n            }\r\n        }\r\n        for (let i = 0; i < indices.length; i++) {\r\n            const v = this._vertices[indices[i]];\r\n            callback.call (thisArg, v.x, v.y, v.u||0, v.v||0);\r\n        }\r\n    }\r\n    clipToRect (x: number, y: number, w: number, h: number): RMLPrimitive {\r\n        if (this._vertices.length < 3) {\r\n            return null;\r\n        }\r\n        // use Sutherland Hodgeman algorithm\r\n        const pingpong: Vertex[][] = [[], []];\r\n        let current = 0;\r\n        pingpong[current] = [...this._vertices];\r\n        const classify: ((v: Vertex)=>boolean)[] = [\r\n            (v: Vertex): boolean => v.x >= x, // left\r\n            (v: Vertex): boolean => v.x <= x + w, // right\r\n            (v: Vertex): boolean => v.y >= y, // top\r\n            (v: Vertex): boolean => v.y <= y + h // bottom\r\n        ];\r\n        const intersect: ((v1: Vertex, v2: Vertex) => Vertex)[] = [\r\n            (v1: Vertex, v2: Vertex): Vertex => this._interpolateVertex(v1, v2, (x - v1.x) / (v2.x - v1.x)), // left\r\n            (v1: Vertex, v2: Vertex): Vertex => this._interpolateVertex(v1, v2, (x + w - v1.x) / (v2.x - v1.x)), // right\r\n            (v1: Vertex, v2: Vertex): Vertex => this._interpolateVertex(v1, v2, (y - v1.y) / (v2.y - v1.y)), // top\r\n            (v1: Vertex, v2: Vertex): Vertex => this._interpolateVertex(v1, v2, (y + h - v1.y) / (v2.y - v1.y)), // bottom\r\n        ];\r\n        for (let pass = 0; pass < 4; pass++) {\r\n            const fnClassify = classify[pass];\r\n            const fnIntersect = intersect[pass];\r\n            const src = pingpong[current];\r\n            const dest = pingpong[1 - current];\r\n            dest.length = 0;\r\n            for (let i = 0; i < src.length; i++) {\r\n                const j = (i + 1) % src.length;\r\n                const firstIn = fnClassify(src[i]);\r\n                const secondIn = fnClassify(src[j]);\r\n                if (firstIn) {\r\n                    if (secondIn) {\r\n                        dest.push (src[j]);\r\n                    } else {\r\n                        dest.push (fnIntersect(src[i], src[j]));\r\n                    }\r\n                } else if (secondIn) {\r\n                    dest.push (fnIntersect(src[i], src[j]), src[j]);\r\n                }\r\n            }\r\n            current = 1 - current;\r\n        }\r\n        if (pingpong[current].length === 0) {\r\n            return null;\r\n        }\r\n        const ret = new RMLPolygonPrimitive ();\r\n        ret.vertices = pingpong[current];\r\n        return ret;\r\n    }\r\n    private _interpolateVertex (v1: Vertex, v2: Vertex, factor: number): Vertex {\r\n        const s1 = v1.u || 0;\r\n        const t1 = v1.v || 0;\r\n        const s2 = v2.u || 0;\r\n        const t2 = v2.v || 0;\r\n        return {\r\n            x: Math.round(v1.x + (v2.x - v1.x) * factor),\r\n            y: Math.round(v1.y + (v2.y - v1.y) * factor),\r\n            u: s1 + (s2 - s1) * factor,\r\n            v: t1 + (t2 - t1) * factor\r\n        };\r\n    }\r\n}\r\n\r\nexport class RMLRectPrimitive extends RMLPrimitive{\r\n    private _x1: number;\r\n    private _y1: number;\r\n    private _x2: number;\r\n    private _y2: number;\r\n    private _u1: number;\r\n    private _v1: number;\r\n    private _u2: number;\r\n    private _v2: number;\r\n    constructor (x: number, y: number, w: number, h: number, uMin: number, vMin: number, uMax: number, vMax: number) {\r\n        super ();\r\n        this._x1 = x;\r\n        this._y1 = y;\r\n        this._x2 = x + w;\r\n        this._y2 = y + h;\r\n        this._u1 = uMin;\r\n        this._v1 = vMin;\r\n        this._u2 = uMax;\r\n        this._v2 = vMax;\r\n    }\r\n    forEach (callback: (x: number, y: number, u: number, v: number) => void, thisArg?: any) {\r\n        const x = [this._x1, this._x2, this._x2, this._x1];\r\n        const y = [this._y1, this._y1, this._y2, this._y2];\r\n        const u = [this._u1, this._u2, this._u2, this._u1];\r\n        const v = [this._v1, this._v1, this._v2, this._v2];\r\n        for (let i = 0; i < 4; i++) {\r\n            callback.call (thisArg, x[i], y[i], u[i], v[i]);\r\n        }\r\n    }\r\n    clipToRect (x: number, y: number, w: number, h: number): RMLPrimitive {\r\n        const x1 = Math.max (x, this._x1);\r\n        const y1 = Math.max (y, this._y1);\r\n        const x2 = Math.min (x + w, this._x2);\r\n        const y2 = Math.min (y + h, this._y2);\r\n        if (x1 >= x2 || y1 >= y2) {\r\n            return null;\r\n        }\r\n        const du = this._u2 - this._u1;\r\n        const dv = this._v2 - this._v1;\r\n        const dw = this._x2 - this._x1;\r\n        const dh = this._y2 - this._y1;\r\n        const u1 = this._u1 + du * (x1 - this._x1) / dw;\r\n        const v1 = this._v1 + dv * (y1 - this._y1) / dh;\r\n        const u2 = this._u2 - du * (this._x2 - x2) / dw;\r\n        const v2 = this._v2 - dv * (this._y2 - y2) / dh;\r\n\r\n        return new RMLRectPrimitive (x1, y1, x2 - x1, y2 - y1, u1, v1, u2, v2);\r\n    }\r\n}\r\n\r\nexport class RMLPrimitiveBatchList {\r\n    private _batchList: { batch:RMLPrimitiveBatch, vertices: Float32Array }[];\r\n    private _absoluteX: number;\r\n    private _absoluteY: number;\r\n    private _needUpdate: boolean;\r\n    constructor (x: number, y: number) {\r\n        this._absoluteX = x;\r\n        this._absoluteY = y;\r\n        this.clear ();\r\n    }\r\n    get length (): number {\r\n        return this._batchList.length;\r\n    }\r\n    get x (): number {\r\n        return this._absoluteX;\r\n    }\r\n    set x (val: number) {\r\n        if (this._absoluteX !== val) {\r\n            this._absoluteX = val;\r\n            this._needUpdate = true;\r\n        }\r\n    }\r\n    get y (): number {\r\n        return this._absoluteY;\r\n    }\r\n    set y (val: number) {\r\n        if (this._absoluteY !== val) {\r\n            this._absoluteY = val;\r\n            this._needUpdate = true;\r\n        }\r\n    }\r\n    clear () {\r\n        this._batchList = [];\r\n        this._needUpdate = false;\r\n    }\r\n    getBatch (index: number): RMLPrimitiveBatch {\r\n        return this._batchList[index]?.batch || null;\r\n    }\r\n    getVertices (index: number): Float32Array {\r\n        if (this._needUpdate) {\r\n            this._needUpdate = false;\r\n            this._updateVertices ();\r\n        }\r\n        return this._batchList[index]?.vertices || null;\r\n    }\r\n    addBatch (batch: RMLPrimitiveBatch) {\r\n        if (batch) {\r\n            const lastBatch = this._batchList[this._batchList.length - 1].batch || null;\r\n            if (!lastBatch \r\n                || lastBatch.texture !== batch.texture \r\n                || lastBatch.color.x !== batch.color.x \r\n                || lastBatch.color.y !== batch.color.y \r\n                || lastBatch.color.z !== batch.color.z \r\n                || lastBatch.color.w !== batch.color.w) {\r\n                this._batchList.push ({ batch:batch, vertices: null });\r\n            } else {\r\n                for (let i = 0; i < batch.length; i++) {\r\n                    lastBatch.addPrimitive (batch.getPrimitive (i));\r\n                }\r\n            }\r\n            this._needUpdate = true;\r\n        }\r\n    }\r\n    addPrimitive (prim: RMLPrimitive, clipper: UIRect, tex?: Texture, color?: Vec4) {\r\n        if (prim && clipper) {\r\n            tex = tex || null;\r\n            color = color || { x:1, y:1, z:1, w:1 };\r\n            if (color.w > 0) {\r\n                let lastBatch = this._batchList[this._batchList.length-1]?.batch || null;\r\n                if (!lastBatch \r\n                    || lastBatch.texture !== tex \r\n                    || lastBatch.color.x !== color.x\r\n                    || lastBatch.color.y !== color.y\r\n                    || lastBatch.color.z !== color.z\r\n                    || lastBatch.color.w !== color.w\r\n                    || !lastBatch.isSameClipper(clipper)) {\r\n                    lastBatch = new RMLPrimitiveBatch (clipper);\r\n                    lastBatch.texture = tex;\r\n                    lastBatch.color = color;\r\n                    this._batchList.push ({batch: lastBatch, vertices: null});\r\n                }\r\n                lastBatch.addPrimitive (prim);\r\n                this._needUpdate = true;\r\n            }\r\n        }\r\n    }\r\n    private _updateVertices () {\r\n        for (const batch of this._batchList) {\r\n            let verts: number[] = [];\r\n            for (let prim = 0; prim < batch.batch.length; prim++) {\r\n                let primitive = batch.batch.getPrimitive(prim);\r\n                const color = batch.batch.color;\r\n                primitive.forEach ((x, y, u, v) => {\r\n                    verts.push (x + this._absoluteX, y + this._absoluteY, -50, color.x, color.y, color.z, color.w, u, v);\r\n                });\r\n            }\r\n            batch.vertices = new Float32Array (verts);\r\n        }\r\n    }\r\n}\r\n\r\nexport class RMLPrimitiveBatch {\r\n    private _clippedRect: UIRect;\r\n    private _tex: Texture;\r\n    private _color: Vec4;\r\n    private _primitives: RMLPrimitive[];\r\n    constructor (clipper: UIRect) {\r\n        if (!clipper) {\r\n            throw new Error('Failed to construct RMLPrimitiveBatch: clipper must not be null');\r\n        }\r\n        this._clippedRect = clipper;\r\n        this._tex = null;\r\n        this._color = { x:1, y:1, z:1, w:1 };\r\n        this._primitives = [];\r\n    }\r\n    get texture (): Texture {\r\n        return this._tex;\r\n    }\r\n    set texture (tex: Texture) {\r\n        this._tex = tex;\r\n    }\r\n    get color (): Vec4 {\r\n        return this._color;\r\n    }\r\n    set color (clr: Vec4) {\r\n        clr = clr || { x:1, y:1, z:1, w:1 };\r\n        this._color.x = clr.x;\r\n        this._color.y = clr.y;\r\n        this._color.z = clr.z;\r\n        this._color.w = clr.w;\r\n    }\r\n    get length (): number {\r\n        return this._primitives.length;\r\n    }\r\n    getPrimitive (index: number): RMLPrimitive {\r\n        return this._primitives[index] || null;\r\n    }\r\n    addPrimitive (prim: RMLPrimitive) {\r\n        if (prim && this._primitives.indexOf(prim) < 0) {\r\n            if (this._clippedRect) {\r\n                prim = prim.clipToRect (this._clippedRect.x, this._clippedRect.y, this._clippedRect.width, this._clippedRect.height);\r\n            }\r\n            if (prim) {\r\n                this._primitives.push (prim);\r\n            }\r\n        }\r\n    }\r\n    setClipper (rect: UIRect) {\r\n        this._clippedRect = rect ? {...rect} : null;\r\n    }\r\n    isSameClipper (rc: UIRect) {\r\n        return rc.x !== this._clippedRect.x || rc.y !== this._clippedRect.y || rc.width !== this._clippedRect.width || rc.height !== this._clippedRect.height;\r\n    }\r\n    clear () {\r\n        this._primitives.length = 0;\r\n    }\r\n}","import { Vec4 } from '.';\r\n\r\nexport interface Renderer {\r\n    getCanvas (): HTMLCanvasElement;\r\n    getDrawingBufferWidth (): number;\r\n    getDrawingBufferHeight (): number;\r\n    createTexture (width: number, height: number, color: Vec4, linear: boolean): unknown;\r\n    updateTextureWithImage (texture: unknown, bitmap: ImageData, x: number, y: number): void;\r\n    updateTextureWithCanvas (texture: unknown, cvs: HTMLCanvasElement, cvsOffsetX: number, cvsOffsetY: number, w: number, h: number, x: number, y: number): void;\r\n    getTextureWidth (texture: unknown): number;\r\n    getTextureHeight (texture: unknown): number;\r\n    disposeTexture (texture: unknown): void;\r\n    setCursorStyle (style: string): void;\r\n    getCursorStyle (): string;\r\n    drawQuads (data: Float32Array, texture: unknown): void;\r\n    beginRender (): void;\r\n    endRender (): void;\r\n}\r\n\r\n\r\nexport class CanvasRenderer implements Renderer {\r\n    private _canvas: HTMLCanvasElement;\r\n    private _ctx: CanvasRenderingContext2D;\r\n    private _textures: CanvasRenderingContext2D[];\r\n    constructor (cvs: HTMLCanvasElement|CanvasRenderingContext2D) {\r\n        if (cvs instanceof HTMLCanvasElement) {\r\n            this._canvas = cvs;\r\n            this._ctx = this._canvas.getContext('2d');\r\n            this._ctx.imageSmoothingEnabled = false;\r\n        } else {\r\n            this._canvas = cvs.canvas;\r\n            this._ctx = cvs;\r\n        }\r\n        this._textures = [];\r\n    }\r\n    getTextures () {\r\n        return this._textures;\r\n    }\r\n    getCanvas (): HTMLCanvasElement {\r\n        return this._canvas;\r\n    }\r\n    getContext (): CanvasRenderingContext2D {\r\n        return this._ctx;\r\n    }\r\n    getDrawingBufferWidth (): number {\r\n        return this._canvas.width;\r\n    }\r\n    getDrawingBufferHeight (): number {\r\n        return this._canvas.height;\r\n    }\r\n    createTexture (width: number, height: number, color: Vec4, linear: boolean): unknown {\r\n        const cvs = document.createElement('canvas');\r\n        cvs.style.width = `${width}px`;\r\n        cvs.style.height = `${height}px`;\r\n        cvs.width = width;\r\n        cvs.height = height;\r\n        const ctx = cvs.getContext ('2d');\r\n        ctx.clearRect (0, 0, width, height);\r\n        ctx.fillStyle = `rgba(${Math.floor(color.x * 255)},${Math.floor(color.y * 255)},${Math.floor(color.z * 255)},${color.w})`;\r\n        ctx.fillRect (0, 0, width, height);\r\n        this._textures.push (ctx);\r\n        document.body.append (cvs);\r\n        return ctx;\r\n    }\r\n    updateTextureWithImage (texture: unknown, bitmap: ImageData, x: number, y: number): void {\r\n        const ctx = texture as CanvasRenderingContext2D;\r\n        ctx.putImageData (bitmap, x, y);\r\n    }\r\n    updateTextureWithCanvas (texture: unknown, cvs: HTMLCanvasElement, cvsOffsetX: number, cvsOffsetY: number, w: number, h: number, x: number, y: number): void {\r\n        const ctx = texture as CanvasRenderingContext2D;\r\n        ctx.drawImage (cvs, cvsOffsetX, cvsOffsetY, w, h, x, y, w, h);\r\n    }\r\n    getTextureWidth (texture: unknown): number {\r\n        const ctx = texture as CanvasRenderingContext2D;\r\n        return ctx.canvas.width;\r\n    }\r\n    getTextureHeight (texture: unknown): number {\r\n        const ctx = texture as CanvasRenderingContext2D;\r\n        return ctx.canvas.height;\r\n    }\r\n    disposeTexture (texture: unknown): void {\r\n\r\n    }\r\n    setCursorStyle (style: string): void {\r\n        this._canvas.style.cursor = style;\r\n    }\r\n    getCursorStyle (): string {\r\n        return this._canvas.style.cursor;\r\n    }\r\n    drawQuads (data: Float32Array, texture: unknown): void {\r\n        const numQuads = data.length / 36;\r\n        const round = Math.round;\r\n        const floor = Math.floor;\r\n        for (let i = 0; i < numQuads; i++) {\r\n            const base = i * 36;\r\n            const x1 = data[base];\r\n            const y1 = data[base+1];\r\n            const x2 = data[base+9];\r\n            const y2 = data[base+10];\r\n            const x3 = data[base+18];\r\n            const y3 = data[base+19];\r\n            const x4 = data[base+27];\r\n            const y4 = data[base+28];\r\n            const r = data[base + 3];\r\n            const g = data[base + 4];\r\n            const b = data[base + 5];\r\n            const a = data[base + 6];\r\n            if (y1 === y2 && y3 === y4 && x1 === x4 && x2 === x3) {\r\n                if (texture) {\r\n                    const tw = this.getTextureWidth (texture);\r\n                    const th = this.getTextureHeight (texture);\r\n                    const u1 = round(data[base + 7] * tw);\r\n                    const v1 = round(data[base + 8] * th);\r\n                    const u2 = round(data[base + 25] * tw);\r\n                    const v2 = round(data[base + 26] * th);\r\n                    this._ctx.drawImage ((texture as CanvasRenderingContext2D).canvas, u1, v1, u2 - u1, v2 - v1, x1, y1, x3 - x1, y3 - y1);\r\n                } else {\r\n                    this._ctx.fillStyle = `rgba(${floor(r * 255)},${floor(g * 255)},${floor(b * 255)},${a})`;\r\n                    this._ctx.fillRect (x1, y1, x3 - x1, y3 - y1);\r\n                }\r\n            } else {\r\n                this._ctx.fillStyle = `rgba(${floor(r * 255)},${floor(g * 255)},${floor(b * 255)},${a})`;\r\n                this._ctx.beginPath ();\r\n                this._ctx.moveTo (x1, y1);\r\n                this._ctx.lineTo (x2, y2);\r\n                this._ctx.lineTo (x3, y3);\r\n                this._ctx.lineTo (x4, y4);\r\n                this._ctx.closePath ();\r\n                this._ctx.fill ();\r\n            }\r\n        }\r\n    }\r\n    beginRender (): void {\r\n    }\r\n    endRender (): void {\r\n    }\r\n}","import { RMLElement, RMLNode } from '.';\r\nimport { List, ListIterator } from './misc';\r\n\r\nconst rIdentifier = /^([^\\s\\.\\*\\[\\]\\|\\(\\)\\$\\^\\+#><~!=:]+)/;\r\nconst rOp = /^\\s*(=|~=|\\|=|\\^=|\\$=|\\*=)?\\s*/;\r\nconst rCombine = /^\\s*([>|~|+]?)\\s*/;\r\nconst rLiteral = /^\"(.*)\"|'(.*)'/;\r\nconst rCloseBracket = /^\\s*\\]/;\r\nconst rWS = /^\\s*$/;\r\n\r\nenum Combine {\r\n    NONE,\r\n    DESCEND,\r\n    CHILD,\r\n    SIBLING,\r\n    ADJACENT\r\n}\r\n\r\nenum Op {\r\n    ANY,\r\n    EQUAL,\r\n    CONTAINS,\r\n    START,\r\n    END\r\n}\r\n\r\nenum Filter {\r\n    NONE,\r\n    TAGNAME,\r\n    CLASS,\r\n    ID,\r\n    COMBINE,\r\n    ATTRIBUTE,\r\n    PSEUDO_CLASS,\r\n    PSEUDO_ELEMENT\r\n}\r\n\r\ninterface FilterInfo {\r\n    type: Filter;\r\n    name?: string; // tag|class|id|pseudo\r\n    combineType?: Combine;\r\n    attribOp?: Op;\r\n    attribKey?: string;\r\n    attribValue?: string;\r\n    numIds?: number;\r\n    numClasses?: number;\r\n    numTypes?: number;\r\n}\r\n\r\ninterface IPseudoElementCallback {\r\n    (node: RMLNode, pseudoType: string): void;\r\n}\r\n\r\nexport class Rule {\r\n    filters: List<FilterInfo>;\r\n    targets: Set<RMLNode>;\r\n    specificity: number;\r\n    constructor () {\r\n        this.filters = new List<FilterInfo>();\r\n        this.targets = new Set();\r\n        this.specificity = 0;\r\n    }\r\n    resolve (roots: RMLNode[], up: boolean, allowInternal: boolean, pseudoElementCallback?: IPseudoElementCallback) {\r\n        let allElements: Set<RMLNode> = new Set();\r\n        for (const root of roots) {\r\n            this._traverseElement (root, allowInternal, el => {\r\n                allElements.add (el);\r\n            });\r\n            if (up) {\r\n                let p = root.parentNode;\r\n                while (p) {\r\n                    if (allowInternal || p.nodeType === RMLNode.ELEMENT_NODE) {\r\n                        allElements.add (p as RMLElement);\r\n                    }\r\n                    p = p.parentNode;\r\n                }\r\n            }\r\n        }\r\n        this.targets = new Set(allElements);\r\n        for (const it = this.filters.begin(); it.valid(); it.next()) {\r\n            if (it.data.type != Filter.COMBINE) {\r\n                let tmp: Set<RMLNode> = new Set(); \r\n                for (const el of this.targets) {\r\n                    this._walkWithFilter (it, el, tmp, allowInternal, allElements, pseudoElementCallback);\r\n                }\r\n                this.targets = tmp;\r\n            }\r\n        }\r\n    }\r\n    private _traverseElement (element: RMLNode, allowInternal: boolean, cb: (element: RMLNode) => void): void {\r\n        if (allowInternal || !element._isInternal()) {\r\n            if (allowInternal || element.nodeType === RMLNode.ELEMENT_NODE) {\r\n                cb (element as RMLElement);\r\n            }\r\n            for (const child of element._getChildren()) {\r\n                this._traverseElement (child, allowInternal, cb);\r\n            }\r\n        }\r\n    }\r\n    private _check (filter: FilterInfo, element: RMLNode): boolean {\r\n        switch (filter.type) {\r\n            case Filter.TAGNAME:\r\n                return element.nodeType === RMLNode.ELEMENT_NODE && (element as RMLElement).tagName === filter.name;\r\n            case Filter.CLASS:\r\n                return element.nodeType === RMLNode.ELEMENT_NODE && (element as RMLElement).classList.contains (filter.name);\r\n            case Filter.ID:\r\n                return element.nodeType === RMLNode.ELEMENT_NODE && (element as RMLElement).id === filter.name;\r\n            case Filter.ATTRIBUTE: {\r\n                if (element.nodeType === RMLNode.ELEMENT_NODE) {\r\n                    const val = (element as RMLElement).getAttribute (filter.attribKey);\r\n                    switch (filter.attribOp) {\r\n                        case Op.ANY:\r\n                            return val !== undefined;\r\n                        case Op.CONTAINS:\r\n                            return typeof val === 'string' && val.indexOf (filter.attribValue) >= 0;\r\n                        case Op.EQUAL:\r\n                            return val === filter.attribValue;\r\n                        case Op.START:\r\n                            return typeof val === 'string' && val.indexOf (filter.attribValue) === 0;\r\n                        case Op.END:\r\n                            return typeof val === 'string' && val.length >= filter.attribValue.length && val.substr (-filter.attribValue.length) === filter.attribValue;\r\n                        default:\r\n                            return false;\r\n                    }\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n            case Filter.PSEUDO_CLASS: {\r\n                switch (filter.name) {\r\n                    case 'hover':\r\n                        return element._isHover ();\r\n                    case 'active':\r\n                        return element._isActive ();\r\n                    case 'disabled':\r\n                        return !element.enabled;\r\n                    case 'empty':\r\n                        return element.childNodes.length === 0;\r\n                    case 'enabled':\r\n                        return element.enabled;\r\n                    case 'first-child':\r\n                        return !element.previousSibling;\r\n                    case 'last-child':\r\n                        return !element.nextSibling;\r\n                    case 'only-child':\r\n                        return !element.previousSibling && !element.nextSibling;\r\n                    case 'focus':\r\n                        return element.gui.getFocus() === element;\r\n                    case 'focus-within':\r\n                        return !!element.gui.getFocus()?._isSucceedingOf (element);\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n            case Filter.NONE:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n    private _walkWithFilter (filter: ListIterator<FilterInfo>, last: RMLNode, targets: Set<RMLNode>, allowInternal: boolean, elementSet?: Set<RMLNode>, pseudoElementCallback?: IPseudoElementCallback) {\r\n        const prevIt = filter.getPrev ();\r\n        const lastFilter = prevIt.valid() ? prevIt.data : null;\r\n        switch (filter.data.type) {\r\n            case Filter.NONE:\r\n            case Filter.TAGNAME: \r\n            case Filter.CLASS:\r\n            case Filter.ID:\r\n            case Filter.PSEUDO_CLASS:\r\n            case Filter.ATTRIBUTE: {\r\n                if (lastFilter === null || lastFilter.type !== Filter.COMBINE) {\r\n                    if (this._check (filter.data, last)) {\r\n                        targets.add (last);\r\n                    }\r\n                } else if (lastFilter) {\r\n                    switch (lastFilter.combineType) {\r\n                        case Combine.CHILD: {\r\n                            for (const child of last._getChildren()) {\r\n                                if (child.nodeType === RMLNode.ELEMENT_NODE && elementSet.has(child) && this._check (filter.data, child as RMLElement)) {\r\n                                    targets.add (child as RMLElement);\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                        case Combine.DESCEND: {\r\n                            for (const child of last._getChildren()) {\r\n                                if (child.nodeType === RMLNode.ELEMENT_NODE) {\r\n                                    this._traverseElement (child as RMLElement, allowInternal, el => {\r\n                                        if (elementSet.has(el) && this._check (filter.data, el)) {\r\n                                            targets.add (el);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                        case Combine.SIBLING: {\r\n                            let next = last.nextSibling;\r\n                            while (next) {\r\n                                if (next.nodeType === RMLNode.ELEMENT_NODE && elementSet.has(next) && this._check (filter.data, next as RMLElement)) {\r\n                                    targets.add (next as RMLElement);\r\n                                }\r\n                                next = next.nextSibling;\r\n                            }\r\n                            break;\r\n                        }\r\n                        case Combine.ADJACENT: {\r\n                            let next = last.nextSibling;\r\n                            if (next && next.nodeType === RMLNode.ELEMENT_NODE && elementSet.has(next) && this._check (filter.data, next as RMLElement)) {\r\n                                targets.add (next as RMLElement);\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case Filter.PSEUDO_ELEMENT: {\r\n                if (pseudoElementCallback && lastFilter && lastFilter.type !== Filter.COMBINE && !filter.getNext().valid()) {\r\n                    pseudoElementCallback (last, filter.data.name);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class RMLSelector {\r\n    protected _rules: Rule[];\r\n    constructor (s: string) {\r\n        this._rules = s ? this._createRules (s) : [];\r\n        for (const rule of this._rules) {\r\n            if (!this._validateRule (rule)) {\r\n                this._rules = [];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    resolve (root: RMLNode, excludeRoot: boolean, allowInternal): RMLNode[] {\r\n        if (this._rules.length === 0) {\r\n            return [];\r\n        }\r\n        const matched: Set<RMLNode> = new Set();\r\n        for (const rule of this._rules) {\r\n            rule.resolve ([root], false, allowInternal);\r\n            for (const val of rule.targets) {\r\n                matched.add (val);\r\n            }\r\n        }\r\n        if (excludeRoot) {\r\n            matched.delete (root);\r\n        }\r\n        return Array.from (matched);\r\n    }\r\n    multiResolve (roots: RMLNode[], allowInternal): RMLNode[] {\r\n        if (this._rules.length === 0) {\r\n            return [];\r\n        }\r\n        const matched: Set<RMLNode> = new Set();\r\n        for (const rule of this._rules) {\r\n            rule.resolve (roots, true, allowInternal);\r\n            for (const val of rule.targets) {\r\n                matched.add (val);\r\n            }\r\n        }\r\n        return Array.from (matched);\r\n    }\r\n    rules (): Rule[] {\r\n        return this._rules;\r\n    }\r\n    private _validateRule (rule: Rule): boolean {\r\n        for (const it = rule.filters.begin(); it.valid(); it.next()) {\r\n            const prev = it.getPrev ();\r\n            if (it.data.type === Filter.COMBINE && prev.valid() && prev.data.type === Filter.COMBINE) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    private _createRules (s: string): Rule[] {\r\n        return s.trim()\r\n            .split (',')\r\n            .map (val => val.trim())\r\n            .filter (val => val !== '')\r\n            .map (val => this._createRule(val))\r\n            .filter (val => !!val)\r\n            .sort ((a, b) => a.specificity - b.specificity);\r\n    }\r\n    private _createRule (s: string): Rule {\r\n        const rule = new Rule();\r\n        let numIds = 0;\r\n        let numClasses = 0;\r\n        let numTypes = 0;\r\n        while (true) {\r\n            const filter = this._createFilter (s);\r\n            if (filter === null) {\r\n                return null;\r\n            } else if (filter[0] === null) {\r\n                break;\r\n            } else {\r\n                rule.filters.append (filter[0]);\r\n                s = filter[1];\r\n                numIds += filter[0].numIds;\r\n                numClasses += filter[0].numClasses;\r\n                numTypes += filter[0].numTypes;\r\n            }\r\n        }\r\n        const base = 100;\r\n        rule.specificity = numIds * base * base + numClasses * base + numTypes;\r\n        return rule;\r\n    }\r\n    private _createFilter (s: string): [FilterInfo, string] {\r\n        if (rWS.exec(s)) {\r\n            return [null, ''];\r\n        }\r\n        const info = { numIds:0, numClasses:0, numTypes:0 } as FilterInfo;\r\n        let combine = rCombine.exec (s);\r\n        if (combine && combine[0] === '') {\r\n            combine = null;\r\n        }\r\n        if (!combine) {\r\n            info.combineType = Combine.NONE;\r\n            s = s.trim();\r\n            switch (s[0]) {\r\n                case '*': {\r\n                    info.type = Filter.NONE;\r\n                    s = s.substr(1);\r\n                    break;\r\n                }\r\n                case '.': {\r\n                    info.numClasses++;\r\n                    info.type = Filter.CLASS;\r\n                    s = s.substr (1);\r\n                    const match = rIdentifier.exec (s);\r\n                    if (!match) {\r\n                        return null;\r\n                    }\r\n                    info.name = match[1];\r\n                    s = s.substr (match[0].length);\r\n                    break;\r\n                }\r\n                case '#': {\r\n                    info.numIds++;\r\n                    info.type = Filter.ID;\r\n                    s = s.substr (1);\r\n                    const match = rIdentifier.exec (s);\r\n                    if (!match) {\r\n                        return null;\r\n                    }\r\n                    info.name = match[1];\r\n                    s = s.substr (match[0].length);\r\n                    break;\r\n                }\r\n                case ':': {\r\n                    info.numClasses++;\r\n                    if (s[1] !== ':') {\r\n                        info.type = Filter.PSEUDO_CLASS;\r\n                        s = s.substr (1);\r\n                        const match = rIdentifier.exec (s);\r\n                        if (!match) {\r\n                            return null;\r\n                        }\r\n                        info.name = match[1];\r\n                        s = s.substr (match[0].length);\r\n                    } else {\r\n                        info.type = Filter.PSEUDO_ELEMENT;\r\n                        s = s.substr (2);\r\n                        const match = rIdentifier.exec (s);\r\n                        if (!match) {\r\n                            return null;\r\n                        }\r\n                        info.name = match[1];\r\n                        s = s.substr (match[0].length);\r\n                    }\r\n                    break;\r\n                }\r\n                case '[': {\r\n                    info.numClasses++;\r\n                    info.type = Filter.ATTRIBUTE;\r\n                    s = s.substr (1);\r\n                    const matchKey = rIdentifier.exec (s);\r\n                    if (!matchKey) {\r\n                        return null;\r\n                    }\r\n                    info.attribKey = matchKey[1];\r\n                    s = s.substr (matchKey[0].length);\r\n                    const matchOp = rOp.exec (s);\r\n                    if (!matchOp) {\r\n                        return null;\r\n                    }\r\n                    switch (matchOp[1]) {\r\n                        case '=':\r\n                            info.attribOp = Op.EQUAL;\r\n                            break;\r\n                        case '~=':\r\n                        case '*=':\r\n                            info.attribOp = Op.CONTAINS;\r\n                            break;\r\n                        case '|=':\r\n                        case '^=':\r\n                            info.attribOp = Op.START;\r\n                            break;\r\n                        case '$=':\r\n                            info.attribOp = Op.END;\r\n                            break;\r\n                        default:\r\n                            info.attribOp = Op.ANY;\r\n                            break;\r\n                    }\r\n                    s = s.substr (matchOp[0].length);\r\n                    if (info.attribOp !== Op.ANY) {\r\n                        const matchValue = ((s[0] === '\\'' || s[0] === '\\\"') ? rLiteral : rIdentifier).exec (s);\r\n                        if (!matchValue) {\r\n                            return null;\r\n                        }\r\n                        info.attribValue = matchValue[1]||matchValue[2];\r\n                        s = s.substr (matchValue[0].length);\r\n                    }\r\n                    const matchCloseBracket = rCloseBracket.exec (s);\r\n                    if (!matchCloseBracket) {\r\n                        return null;\r\n                    }\r\n                    s = s.substr (matchCloseBracket[0].length);\r\n                    break;\r\n                }\r\n                default: {\r\n                    info.numTypes++;\r\n                    info.type = Filter.TAGNAME;\r\n                    const match = rIdentifier.exec (s);\r\n                    if (!match) {\r\n                        return null;\r\n                    }\r\n                    info.name = match[1];\r\n                    s = s.substr (match[0].length);\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            s = s.substr (combine[0].length);\r\n            info.type = Filter.COMBINE;\r\n            if (combine[1] === '') {\r\n                info.combineType = Combine.DESCEND;\r\n            } else if (combine[1] === '>') {\r\n                info.combineType = Combine.CHILD;\r\n            } else if (combine[1] === '~') {\r\n                info.combineType = Combine.SIBLING;\r\n            } else /* if (combine[1] === '+') */ {\r\n                info.combineType = Combine.ADJACENT;\r\n            }\r\n        }\r\n        return [info, s];\r\n    }\r\n}\r\n","import { Vec4 } from './types';\r\nimport * as Yoga from './typeflex/api';\r\n\r\nconst colorNames = { aliceblue:'#f0f8ff',antiquewhite:'#faebd7',aqua:'#00ffff',aquamarine:'#7fffd4',azure:'#f0ffff',beige:'#f5f5dc',bisque:'#ffe4c4',\r\n    black:'#000000',blanchedalmond:'#ffebcd',blue:'#0000ff',blueviolet:'#8a2be2',brown:'#a52a2a',burlywood:'#deb887',cadetblue:'#5f9ea0',\r\n    chartreuse:'#7fff00',chocolate:'#d2691e',coral:'#ff7f50',cornflowerblue:'#6495ed',cornsilk:'#fff8dc',crimson:'#dc143c',cyan:'#00ffff',\r\n    darkblue:'#00008b',darkcyan:'#008b8b',darkgoldenrod:'#b8860b',darkgray:'#a9a9a9',darkgreen:'#006400',darkkhaki:'#bdb76b',\r\n    darkmagenta:'#8b008b',darkolivegreen:'#556b2f',darkorange:'#ff8c00',darkorchid:'#9932cc',darkred:'#8b0000',darksalmon:'#e9967a',\r\n    darkseagreen:'#8fbc8f',darkslateblue:'#483d8b',darkslategray:'#2f4f4f',darkturquoise:'#00ced1',darkviolet:'#9400d3',deeppink:'#ff1493',\r\n    deepskyblue:'#00bfff',dimgray:'#696969',dodgerblue:'#1e90ff',firebrick:'#b22222',floralwhite:'#fffaf0',forestgreen:'#228b22',\r\n    fuchsia:'#ff00ff',gainsboro:'#dcdcdc',ghostwhite:'#f8f8ff',gold:'#ffd700',goldenrod:'#daa520',gray:'#808080',green:'#008000',\r\n    greenyellow:'#adff2f',honeydew:'#f0fff0',hotpink:'#ff69b4',indianred :'#cd5c5c',indigo :'#4b0082',ivory:'#fffff0',khaki:'#f0e68c',\r\n    lavender:'#e6e6fa',lavenderblush:'#fff0f5',lawngreen:'#7cfc00',lemonchiffon:'#fffacd',lightblue:'#add8e6',lightcoral:'#f08080',\r\n    lightcyan:'#e0ffff',lightgoldenrodyellow:'#fafad2',lightgray:'#d3d3d3',lightgreen:'#90ee90',lightpink:'#ffb6c1',lightsalmon:'#ffa07a',\r\n    lightseagreen:'#20b2aa',lightskyblue:'#87cefa',lightslategray:'#778899',lightsteelblue:'#b0c4de',lightyellow:'#ffffe0',lime:'#00ff00',\r\n    limegreen:'#32cd32',linen:'#faf0e6',magenta:'#ff00ff',maroon:'#800000',mediumaquamarine:'#66cdaa',mediumblue:'#0000cd',\r\n    mediumorchid:'#ba55d3',mediumpurple:'#9370db',mediumseagreen:'#3cb371',mediumslateblue:'#7b68ee',mediumspringgreen:'#00fa9a',\r\n    mediumturquoise:'#48d1cc',mediumvioletred:'#c71585',midnightblue:'#191970',mintcream:'#f5fffa',mistyrose:'#ffe4e1',moccasin:'#ffe4b5',\r\n    navajowhite:'#ffdead',navy:'#000080',oldlace:'#fdf5e6',olive:'#808000',olivedrab:'#6b8e23',orange:'#ffa500',orangered:'#ff4500',\r\n    orchid:'#da70d6',palegoldenrod:'#eee8aa',palegreen:'#98fb98',paleturquoise:'#afeeee',palevioletred:'#db7093',papayawhip:'#ffefd5',\r\n    peachpuff:'#ffdab9',peru:'#cd853f',pink:'#ffc0cb',plum:'#dda0dd',powderblue:'#b0e0e6',purple:'#800080',red:'#ff0000',rosybrown:'#bc8f8f',\r\n    royalblue:'#4169e1',saddlebrown:'#8b4513',salmon:'#fa8072',sandybrown:'#f4a460',seagreen:'#2e8b57',seashell:'#fff5ee',sienna:'#a0522d',\r\n    silver:'#c0c0c0',skyblue:'#87ceeb',slateblue:'#6a5acd',slategray:'#708090',snow:'#fffafa',springgreen:'#00ff7f',steelblue:'#4682b4',\r\n    tan:'#d2b48c',teal:'#008080',thistle:'#d8bfd8',tomato:'#ff6347',turquoise:'#40e0d0',violet:'#ee82ee',wheat:'#f5deb3',white:'#ffffff',\r\n    whitesmoke:'#f5f5f5',yellow:'#ffff00',yellowgreen:'#9acd32',transparent:'rgba(0,0,0,0)'\r\n};\r\n\r\nconst overflowConstantMap = {\r\n    'hidden': 'hidden',\r\n    'auto': 'auto',\r\n    'scroll': 'scroll',\r\n    'visible': 'visible'\r\n};\r\n\r\nconst alignmentConstantMap = {\r\n    'auto': Yoga.ALIGN_AUTO,\r\n    'flex-start': Yoga.ALIGN_FLEX_START,\r\n    'flex-end': Yoga.ALIGN_FLEX_END,\r\n    'center': Yoga.ALIGN_CENTER,\r\n    'stretch': Yoga.ALIGN_STRETCH,\r\n    'baseline': Yoga.ALIGN_BASELINE,\r\n    'space-between': Yoga.ALIGN_SPACE_BETWEEN,\r\n    'space-around': Yoga.ALIGN_SPACE_AROUND\r\n};\r\n\r\nconst directionConstantMap = {\r\n    'row': Yoga.FLEX_DIRECTION_ROW,\r\n    'row-reverse': Yoga.FLEX_DIRECTION_ROW_REVERSE,\r\n    'column': Yoga.FLEX_DIRECTION_COLUMN,\r\n    'column-reverse': Yoga.FLEX_DIRECTION_COLUMN_REVERSE\r\n};\r\n\r\nconst justifyConstantMap = {\r\n    'flex-start': Yoga.JUSTIFY_FLEX_START,\r\n    'center': Yoga.JUSTIFY_CENTER,\r\n    'flex-end': Yoga.JUSTIFY_FLEX_END,\r\n    'space-between': Yoga.JUSTIFY_SPACE_BETWEEN,\r\n    'space-around': Yoga.JUSTIFY_SPACE_AROUND,\r\n    'space-evenly': Yoga.JUSTIFY_SPACE_EVENLY\r\n};\r\n\r\nconst wrapConstantMap = {\r\n    'wrap': Yoga.WRAP_WRAP,\r\n    'nowrap': Yoga.WRAP_NO_WRAP,\r\n    'wrap-reverse': Yoga.WRAP_WRAP_REVERSE\r\n};\r\n\r\nconst positionConstantMap = {\r\n    'fixed': Yoga.POSITION_TYPE_ABSOLUTE,\r\n    'relative': Yoga.POSITION_TYPE_RELATIVE,\r\n    'absolute': Yoga.POSITION_TYPE_ABSOLUTE\r\n};\r\n\r\nconst displayConstantMap = {\r\n    'flex': Yoga.DISPLAY_FLEX,\r\n    'none': Yoga.DISPLAY_NONE\r\n};\r\n\r\n/** @internal */\r\nexport function parseStyleSheet (styles: string, extra?: object): IStyleSheet {\r\n    const items = styles.split (';').map (val => val.trim()).filter(val => !!val);\r\n    const ss = {} as IStyleSheet;\r\n    for (const item of items) {\r\n        const kv = item.split(':').map (val => val.trim());\r\n        if (kv.length === 2) {\r\n            const setter = styleSetters[kv[0]];\r\n            if (setter) {\r\n                const k = kv[0].split('-').map ((val, index) => index === 0 ? val : val[0].toUpperCase() + val.substr(1)).join ('');\r\n                ss[k] = kv[1];\r\n            } else if (extra) {\r\n                extra[kv[0]] = kv[1];\r\n            }\r\n        }\r\n    }\r\n    return ss;\r\n}\r\n\r\n/** @internal */\r\nexport function serializeStyleSheet (styles: IStyleSheet): string {\r\n    let s = '';\r\n    for (const k in styles) {\r\n        if (styles[k]) {\r\n            const kk = k.replace(/([a-z0-9])([A-Z])/g, '$1 $2').split(' ').map (s => s.toLowerCase()).join ('-');\r\n            s = s + `${kk}:${styles[k]};`;\r\n        }\r\n    }\r\n    return s;\r\n}\r\n\r\n/** @internal */\r\nexport function _normalizeCSSValue (value: string): string[] {\r\n    function _fetch (value: string, pos: number): [string, number] {\r\n        function _issep (ch: string) {\r\n            return ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r';\r\n        }\r\n        let start:number, end:number;\r\n        let quot:string = null;\r\n        for (start = pos; start < value.length && _issep(value[start]); start++)\r\n            ;\r\n        if (start === value.length) {\r\n            return ['', value.length];\r\n        }\r\n        if (value[start] === ',') {\r\n            return [',', start + 1];\r\n        }\r\n        if (value[start] === '\\'' || value[start] === '\"') {\r\n            quot = value[start];\r\n        }\r\n        if (quot === null) {\r\n            for (end = start + 1; end < value.length && !_issep(value[end]) && value[end] !== ',';end++)\r\n                ;\r\n            return [value.substring(start, end), end];\r\n        } else {\r\n            let backslash = false;\r\n            for (end = start + 1; end < value.length; end++) {\r\n                if (!backslash && value[end] === quot) {\r\n                    quot = null;\r\n                    end++;\r\n                    break;\r\n                }\r\n                if (backslash) {\r\n                    backslash = false;\r\n                } else if (value[end] === '\\\\') {\r\n                    backslash = true;\r\n                }\r\n            }\r\n            if (quot !== null) {\r\n                return null;\r\n            }\r\n            if (backslash) {\r\n                end--;\r\n            }\r\n            return [value.substring(start, end), end];\r\n        }\r\n    }\r\n    const ret: string[] = [];\r\n    let pos = 0;\r\n    let last: number = -1;\r\n    for (;;) {\r\n        const t = _fetch (value, pos);\r\n        if (t === null) {\r\n            return null;\r\n        }\r\n        if (t[0] === '') {\r\n            break;\r\n        }\r\n        if (t[0] === ',') {\r\n            if (ret.length === 0) {\r\n                return null;\r\n            }\r\n            last = ret.length - 1;\r\n            ret[last] = ret[last] + ',';\r\n            pos = t[1];\r\n        } else {\r\n            if (last >= 0) {\r\n                ret[last] = ret[last] + t[0];\r\n                last = -1;\r\n            } else {\r\n                ret.push (t[0]);\r\n            }\r\n            pos = t[1];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\n/** @internal */\r\nexport function unescapeCSSString (input: string): string {\r\n    function isHexCharCode (ch: number) {\r\n        const cc0 = 0x30;\r\n        const cc9 = 0x39;\r\n        const cca = 0x61;\r\n        const ccf = 0x66;\r\n        const ccA = 0x41;\r\n        const ccF = 0x46;\r\n        return ((ch >= cc0 && ch <= cc9) || (ch >= cca && ch <= ccf) || (ch >= ccA && ch <= ccF));\r\n    }\r\n    let output: string = '';\r\n    let readoffset = 0;\r\n    let inputoffset = 0;\r\n    for (let i = 0; i < input.length; i++) {\r\n        const ch = input[i];\r\n        if (ch !== '\\\\' || i === input.length - 1) {\r\n            continue;\r\n        }\r\n        let codepoint = -1;\r\n        if (ch === '\\\\') {\r\n            const next = input[i+1];\r\n            switch (next) {\r\n                case '\\n': \r\n                    codepoint = -2;\r\n                    inputoffset = i + 1;\r\n                    break;\r\n                case ' ':\r\n                case '!':\r\n                case '\"':\r\n                case '\\'':\r\n                case '#':\r\n                case '$':\r\n                case '%':\r\n                case '&':\r\n                case '\\\\':\r\n                case '(':\r\n                case ')':\r\n                case '*':\r\n                case '+':\r\n                case ',':\r\n                case '-':\r\n                case '.':\r\n                case '/':\r\n                case ':':\r\n                case '<':\r\n                case '=':\r\n                case '>':\r\n                case '?':\r\n                case '@':\r\n                case '[':\r\n                case ']':\r\n                case '^':\r\n                case '_':\r\n                case '`':\r\n                case '{':\r\n                case '|':\r\n                case '}':\r\n                case '~':\r\n                    codepoint = next.charCodeAt (0);\r\n                    inputoffset = i + 1;\r\n                    break;\r\n            }\r\n            if (codepoint === -1) {\r\n                const cc = next.charCodeAt (0);\r\n                if (isHexCharCode (cc)) {\r\n                    // hexa escape\r\n                    let f = i + 2;\r\n                    while (f < i + 7 && f < input.length) {\r\n                        const cf = input.charCodeAt (f);\r\n                        if (!isHexCharCode (cf)) {\r\n                            break;\r\n                        }\r\n                        f++;\r\n                    }\r\n                    codepoint = parseInt (input.substring (i + 1, f), 16);\r\n                    inputoffset = f - 1;\r\n                    if (f < input.length && input[f] === ' ') {\r\n                        inputoffset++;\r\n                    }\r\n                } else if (next === '\\r' || next === '\\f') {\r\n                    i++;\r\n                    continue;\r\n                } else {\r\n                    codepoint = next.charCodeAt(0);\r\n                    inputoffset = i + 1;\r\n                }\r\n            }\r\n        }\r\n        if (i - readoffset > 0) {\r\n            output = output + input.substring (readoffset, i);\r\n        }\r\n        i = inputoffset;\r\n        readoffset = i + 1;\r\n        if (codepoint !== -2) {\r\n            output = output + String.fromCharCode (codepoint);\r\n        }\r\n    }\r\n    if (input.length > readoffset) {\r\n        output = output + input.substring (readoffset);\r\n    }\r\n    return output;\r\n}\r\n/** @internal */\r\nexport interface IStyleSheet {\r\n    display?: string;\r\n    position?: string;\r\n    overflow?: string;\r\n    overflowX?: string;\r\n    overflowY?: string;\r\n    color?: string;\r\n    font?: string;\r\n    fontSize?: string;\r\n    fontFamily?: string;\r\n    fontStyle?: string;\r\n    fontVariant?: string;\r\n    fontWeight?: string;\r\n    fontStretch?: string;\r\n    flexDirection?: string;\r\n    flexWrap?: string;\r\n    flexFlow?: string;\r\n    flexGrow?: string;\r\n    flexShrink?: string;\r\n    flexBasis?: string;\r\n    flex?: string;\r\n    justifyContent?: string;\r\n    alignItems?: string;\r\n    alignContent?: string;\r\n    alignSelf?: string;\r\n    padding?: string;\r\n    paddingLeft?: string;\r\n    paddingTop?: string;\r\n    paddingRight?: string;\r\n    paddingBottom?: string;\r\n    margin?: string;\r\n    marginLeft?: string;\r\n    marginTop?: string;\r\n    marginRight?: string;\r\n    marginBottom?: string;\r\n    borderWidth?: string;\r\n    borderLeftWidth?: string;\r\n    borderTopWidth?: string;\r\n    borderRightWidth?: string;\r\n    borderBottomWidth?: string;\r\n    borderColor?: string;\r\n    borderLeftColor?: string;\r\n    borderTopColor?: string;\r\n    borderRightColor?: string;\r\n    borderBottomColor?: string;\r\n    left?: string;\r\n    right?: string;\r\n    top?: string;\r\n    bottom?: string;\r\n    width?: string;\r\n    height?: string;\r\n    minWidth?: string;\r\n    maxWidth?: string;\r\n    minHeight?: string;\r\n    maxHeight?: string;\r\n    zIndex?: string;\r\n    cursor?: string;\r\n    backgroundColor?: string;\r\n    backgroundImage?: string;\r\n}\r\n\r\ninterface ILayout {\r\n    node: Yoga.Node;\r\n    updateZIndex (): void;\r\n    updateCursor (val: string): void;\r\n    updateDisplay (val: string): void;\r\n    updateStyle (val: string): void;\r\n    updateFont (val: string): void;\r\n    updateFontSize (val: string): void;\r\n    updateFontFamily (val: string): void;\r\n    updateFontColor (val: string): void;\r\n    updateBorderColor (edge: number, val: Vec4): void;\r\n    updateBackgroundColor (val: Vec4): void;\r\n    updateBorder (val: number): void;\r\n    invalidateLayout (): void;\r\n}\r\n\r\nexport class ElementStyle {\r\n    /** @internal */\r\n    _layout: ILayout;\r\n    /** @internal */\r\n    _setNonInline: boolean;\r\n    /** @internal */\r\n    _stylesheetInline: IStyleSheet;\r\n    /** @internal */\r\n    _stylesheet: IStyleSheet;\r\n    /** @internal */\r\n    constructor (layout: ILayout) {\r\n        this._layout = layout;\r\n        this._setNonInline = false;\r\n        this._stylesheetInline = {};\r\n        this._stylesheet = {};\r\n    }\r\n    /** @internal */\r\n    reset () {\r\n        this._setNonInline = true;\r\n        for (const k in this._stylesheet) {\r\n            this[k] = '';\r\n        }\r\n        this._stylesheet = {};\r\n        this._setNonInline = false;\r\n    }\r\n    static get defaultBackgroundColor(): Vec4 {\r\n        return { x:0, y:0, z:0, w:0 };\r\n    }\r\n    static get defaultBorderColor(): Vec4 {\r\n        return { x:0,y:0,z:0,w:1 };\r\n    }\r\n    static get defaultFontColor(): Vec4 {\r\n        return { x:0,y:0,z:0,w:1 };\r\n    }\r\n    get display (): string {\r\n        return this._stylesheet.display || '';\r\n    }\r\n    set display (val: string) {\r\n        this.setDisplay (val || '');\r\n    }\r\n    get position (): string {\r\n        return this._stylesheet.position || '';\r\n    }\r\n    set position (val: string) {\r\n        this.setPositionType (val || '');\r\n    }\r\n    get overflow (): string {\r\n        if (!this._stylesheet.overflowX || !this._stylesheet.overflowY) {\r\n            return '';\r\n        } else if (this._stylesheet.overflowX === this._stylesheet.overflowY) {\r\n            return this._stylesheet.overflowX;\r\n        } else {\r\n            return `${this._stylesheet.overflowX} ${this._stylesheet.overflowY}`\r\n        }\r\n    }\r\n    set overflow (val: string) {\r\n        this.setOverflow (val || '');\r\n    }\r\n    get overflowX (): string {\r\n        return this._stylesheet.overflowX || '';\r\n    }\r\n    set overflowX (val: string) {\r\n        this.setOverflowX (val || '');\r\n    }\r\n    get overflowY (): string {\r\n        return this._stylesheet.overflowY || '';\r\n    }\r\n    set overflowY (val: string) {\r\n        this.setOverflowY (val || '');\r\n    }\r\n    get left (): string|number {\r\n        return this._stylesheet.left || '';\r\n    }\r\n    set left (val: string|number) {\r\n        this.setLeft (val === null ? '' : String(val));\r\n    }\r\n    get top (): string|number {\r\n        return this._stylesheet.top || '';\r\n    }\r\n    set top (val: string|number) {\r\n        this.setTop (val === null ? '' : String(val));\r\n    }\r\n    get right (): string|number {\r\n        return this._stylesheet.right || '';\r\n    }\r\n    set right (val: string|number) {\r\n        this.setRight (val === null ? '' : String(val));\r\n    }\r\n    get bottom (): string|number {\r\n        return this._stylesheet.bottom || '';\r\n    }\r\n    set bottom (val: string|number) {\r\n        this.setBottom (val === null ? '' : String(val));\r\n    }\r\n    get width (): string|number {\r\n        return this._stylesheet.width || '';\r\n    }\r\n    set width (val: string|number) {\r\n        this.setWidth (val === null ? '' : String(val));\r\n    }\r\n    get minWidth (): string|number {\r\n        return this._stylesheet.minWidth || '';\r\n    }\r\n    set minWidth (val: string|number) {\r\n        this.setMinWidth (val === null ? '' : String(val));\r\n    }\r\n    get maxWidth (): string|number {\r\n        return this._stylesheet.maxWidth || '';\r\n    }\r\n    set maxWidth (val: string|number) {\r\n        this.setMaxWidth (val === null ? '' : String(val));\r\n    }\r\n    get height (): string|number {\r\n        return this._stylesheet.height || '';\r\n    }\r\n    set height (val: string|number) {\r\n        this.setHeight (val === null ? '' : String(val));\r\n    }\r\n    get minHeight (): string|number {\r\n        return this._stylesheet.minHeight || '';\r\n    }\r\n    set minHeight (val: string|number) {\r\n        this.setMinHeight (val === null ? '' : String(val));\r\n    }\r\n    get maxHeight (): string|number {\r\n        return this._stylesheet.maxHeight || '';\r\n    }\r\n    set maxHeight (val: string|number) {\r\n        this.setMaxHeight (val === null ? '' : String(val));\r\n    }\r\n    get flexDirection (): string {\r\n        return this._stylesheet.flexDirection || '';\r\n    }\r\n    set flexDirection (val: string) {\r\n        this.setFlexDirection (val || '');\r\n    }\r\n    get flexWrap (): string {\r\n        return this._stylesheet.flexWrap || '';\r\n    }\r\n    set flexWrap (val: string) {\r\n        this.setFlexWrap (val || '');\r\n    }\r\n    get flexFlow (): string|number {\r\n        const grow = this.flexGrow;\r\n        const wrap = this.flexWrap;\r\n        if (grow && wrap) {\r\n            return `${grow} ${wrap}`;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n    set flexFlow (val: string|number) {\r\n        this.setFlexFlow (val === null ? '' : String(val));\r\n    }\r\n    get alignItems (): string {\r\n        return this._stylesheet.alignItems || '';\r\n    }\r\n    set alignItems (val: string) {\r\n        this.setAlignItems (val || '');\r\n    }\r\n    get alignContent (): string {\r\n        return this._stylesheet.alignContent || '';\r\n    }\r\n    set alignContent (val: string) {\r\n        this.setAlignContent (val || '');\r\n    }\r\n    get alignSelf (): string {\r\n        return this._stylesheet.alignSelf || '';\r\n    }\r\n    set alignSelf (val: string) {\r\n        this.setAlignSelf (val || '');\r\n    }\r\n    get justifyContent (): string {\r\n        return this._stylesheet.justifyContent || '';\r\n    }\r\n    set justifyContent (val: string) {\r\n        this.setJustifyContent (val || '');\r\n    }\r\n    get flexGrow (): string|number {\r\n        return this._stylesheet.flexGrow || '';\r\n    }\r\n    set flexGrow (val: string|number) {\r\n        this.setFlexGrow (val === null ? '' : String(val));\r\n    }\r\n    get flexShrink (): string|number {\r\n        return this._stylesheet.flexShrink || '';\r\n    }\r\n    set flexShrink (val: string|number) {\r\n        this.setFlexShrink (val === null ? '' : String(val));\r\n    }\r\n    get flexBasis (): string|number {\r\n        return this._stylesheet.flexBasis || '';\r\n    }\r\n    set flexBasis (val: string|number) {\r\n        this.setFlexBasis (val === null ? '' : String(val));\r\n    }\r\n    get flex (): string|number {\r\n        const grow = this.flexGrow;\r\n        const shrink = this.flexShrink;\r\n        const basis = this.flexBasis;\r\n        if (grow && shrink && basis) {\r\n            return `${grow} ${shrink} ${basis}`;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n    set flex (val: string|number) {\r\n        this.setFlex (val === null ? '' : String(val));\r\n    }\r\n    get borderColor (): string|number {\r\n        const top = this.borderTopColor;\r\n        const right = this.borderRightColor;\r\n        const bottom = this.borderBottomColor;\r\n        const left = this.borderLeftColor;\r\n        if (!top || !right || !bottom || !left) {\r\n            return '';\r\n        } else if (top === bottom && right === left) {\r\n            if (top === right) {\r\n                return top;\r\n            } else {\r\n                return `${top} ${right}`;\r\n            }\r\n        } else if (right === left) {\r\n            return `${top} ${right} ${bottom}`;\r\n        } else {\r\n            return `${top} ${right} ${bottom} ${left}`;\r\n        }\r\n    }\r\n    set borderColor (val: string|number) {\r\n        this.setBorderColor (val === null ? '' : String(val));\r\n    }\r\n    get borderLeftColor (): string|number {\r\n        return this._stylesheet.borderLeftColor || '';\r\n    }\r\n    set borderLeftColor (val: string|number) {\r\n        this.setBorderLeftColor (val === null ? '' : String(val));\r\n    }\r\n    get borderTopColor (): string|number {\r\n        return this._stylesheet.borderTopColor || '';\r\n    }\r\n    set borderTopColor (val: string|number) {\r\n        this.setBorderTopColor (val === null ? '' : String(val));\r\n    }\r\n    get borderRightColor (): string|number {\r\n        return this._stylesheet.borderRightColor || '';\r\n    }\r\n    set borderRightColor (val: string|number) {\r\n        this.setBorderRightColor (val === null ? '' : String(val));\r\n    }\r\n    get borderBottomColor (): string|number {\r\n        return this._stylesheet.borderBottomColor || '';\r\n    }\r\n    set borderBottomColor (val: string|number) {\r\n        this.setBorderBottomColor (val === null ? '' : String(val));\r\n    }\r\n    get borderWidth (): string|number {\r\n        const top = this.borderTopWidth;\r\n        const right = this.borderRightWidth;\r\n        const bottom = this.borderBottomWidth;\r\n        const left = this.borderLeftWidth;\r\n        if (!top || !right || !bottom || !left) {\r\n            return '';\r\n        } else if (top === bottom && right === left) {\r\n            if (top === right) {\r\n                return top;\r\n            } else {\r\n                return `${top} ${right}`;\r\n            }\r\n        } else if (right === left) {\r\n            return `${top} ${right} ${bottom}`;\r\n        } else {\r\n            return `${top} ${right} ${bottom} ${left}`;\r\n        }\r\n    }\r\n    set borderWidth (val: string|number) {\r\n        this.setBorderWidth (val === null ? '' : String(val));\r\n    }\r\n    get borderLeftWidth (): string|number {\r\n        return this._stylesheet.borderLeftWidth || '';\r\n    }\r\n    set borderLeftWidth (val: string|number) {\r\n        this.setBorderLeftWidth (val === null ? '' : String(val));\r\n    }\r\n    get borderTopWidth (): string|number {\r\n        return this._stylesheet.borderTopWidth || '';\r\n    }\r\n    set borderTopWidth (val: string|number) {\r\n        this.setBorderTopWidth (val === null ? '' : String(val));\r\n    }\r\n    get borderRightWidth(): string|number {\r\n        return this._stylesheet.borderRightWidth || '';\r\n    }\r\n    set borderRightWidth (val: string|number) {\r\n        this.setBorderRightWidth (val === null ? '' : String(val));\r\n    }\r\n    get borderBottomWidth(): string|number {\r\n        return this._stylesheet.borderBottomWidth || '';\r\n    }\r\n    set borderBottomWidth (val: string|number) {\r\n        this.setBorderBottomWidth (val === null ? '' : String(val));\r\n    }\r\n    get margin (): string|number {\r\n        const top = this.marginTop;\r\n        const right = this.marginRight;\r\n        const bottom = this.marginBottom;\r\n        const left = this.marginLeft;\r\n        if (!top || !right || !bottom || !left) {\r\n            return '';\r\n        } else if (top === bottom && right === left) {\r\n            if (top === right) {\r\n                return top;\r\n            } else {\r\n                return `${top} ${right}`;\r\n            }\r\n        } else if (right === left) {\r\n            return `${top} ${right} ${bottom}`;\r\n        } else {\r\n            return `${top} ${right} ${bottom} ${left}`;\r\n        }\r\n    }\r\n    set margin (val: string|number) {\r\n        this.setMargin (val === null ? '' : String(val));\r\n    }\r\n    get marginLeft (): string|number {\r\n        return this._stylesheet.marginLeft || '';\r\n    }\r\n    set marginLeft (val: string|number) {\r\n        this.setMarginLeft (val === null ? '' : String(val));\r\n    }\r\n    get marginTop (): string|number {\r\n        return this._stylesheet.marginTop || '';\r\n    }\r\n    set marginTop (val: string|number) {\r\n        this.setMarginTop (val === null ? '' : String(val));\r\n    }\r\n    get marginRight(): string|number {\r\n        return this._stylesheet.marginRight || '';\r\n    }\r\n    set marginRight (val: string|number) {\r\n        this.setMarginRight (val === null ? '' : String(val));\r\n    }\r\n    get marginBottom(): string|number {\r\n        return this._stylesheet.marginBottom || '';\r\n    }\r\n    set marginBottom (val: string|number) {\r\n        this.setMarginBottom (val === null ? '' : String(val));\r\n    }\r\n    get padding (): string|number {\r\n        const top = this.paddingTop;\r\n        const right = this.paddingRight;\r\n        const bottom = this.paddingBottom;\r\n        const left = this.paddingLeft;\r\n        if (!top || !right || !bottom || !left) {\r\n            return '';\r\n        } else if (top === bottom && right === left) {\r\n            if (top === right) {\r\n                return top;\r\n            } else {\r\n                return `${top} ${right}`;\r\n            }\r\n        } else if (right === left) {\r\n            return `${top} ${right} ${bottom}`;\r\n        } else {\r\n            return `${top} ${right} ${bottom} ${left}`;\r\n        }\r\n    }\r\n    set padding (val: string|number) {\r\n        this.setPadding (val === null ? '' : String(val));\r\n    }\r\n    get paddingLeft (): string|number {\r\n        return this._stylesheet.paddingLeft || '';\r\n    }\r\n    set paddingLeft (val: string|number) {\r\n        this.setPaddingLeft (val === null ? '' : String(val));\r\n    }\r\n    get paddingTop (): string|number {\r\n        return this._stylesheet.paddingTop || '';\r\n    }\r\n    set paddingTop (val: string|number) {\r\n        this.setPaddingTop (val === null ? '' : String(val));\r\n    }\r\n    get paddingRight (): string|number {\r\n        return this._stylesheet.paddingRight || '';\r\n    }\r\n    set paddingRight (val: string|number) {\r\n        this.setPaddingRight (val === null ? '' : String(val));\r\n    }\r\n    get paddingBottom (): string|number {\r\n        return this._stylesheet.paddingBottom || '';\r\n    }\r\n    set paddingBottom (val: string|number) {\r\n        this.setPaddingBottom (val === null ? '' : String(val));\r\n    }\r\n    get zIndex (): string|number {\r\n        return this._stylesheet.zIndex || '';\r\n    }\r\n    set zIndex (val: string|number) {\r\n        this.setZIndex (val === null ? '' : String(val));\r\n    }\r\n    get cursor (): string {\r\n        return this._stylesheet.cursor || '';\r\n    }\r\n    set cursor (val: string) {\r\n        this.setCursor (val || '');\r\n    }\r\n    get backgroundColor (): string {\r\n        return this._stylesheet.backgroundColor || '';\r\n    }\r\n    set backgroundColor (val: string) {\r\n        this.setBackgroundColor (val || '');\r\n    }\r\n    get backgroundImage (): string {\r\n        return this._stylesheet.backgroundImage || '';\r\n    }\r\n    set backgroundImage (val: string) {\r\n        this.setBackgroundImage (val || '');\r\n    }\r\n    get font (): string {\r\n        const fontSize = this.fontSize;\r\n        const fontFamily = this.fontFamily;\r\n        return (fontSize && fontFamily) ? `${fontSize} ${fontFamily}` : '';\r\n    }\r\n    set font (val: string) {\r\n        this.setFont (val || '');\r\n    }\r\n    get fontSize (): string {\r\n        return this._stylesheet.fontSize || '';\r\n    }\r\n    set fontSize (val: string) {\r\n        this.setFontSize (val);\r\n    }\r\n    get fontFamily (): string {\r\n        return this._stylesheet.fontFamily || '';\r\n    }\r\n    set fontFamily (val: string) {\r\n        this.setFontFamily (val);\r\n    }\r\n    get color (): string {\r\n        return this._stylesheet.color || '';\r\n    }\r\n    set color (val: string) {\r\n        this.setFontColor (val || '');\r\n    }\r\n    unescapeCSSString (s: string): string {\r\n        return unescapeCSSString (s);\r\n    }\r\n    /** @internal */\r\n    _syncValue (k: string, val: string) {\r\n        if (val === '') {\r\n            delete this._stylesheet[k];\r\n            if (!this._setNonInline) {\r\n                delete this._stylesheetInline[k];\r\n            }\r\n        } else {\r\n            this._stylesheet[k] = val;\r\n            if (!this._setNonInline) {\r\n                this._stylesheetInline[k] = val;\r\n            }\r\n        }\r\n        if (!this._setNonInline) {\r\n            this._layout.updateStyle (serializeStyleSheet (this._stylesheetInline));\r\n        }\r\n    }\r\n    /** @internal */\r\n    _syncValues (values: {[k:string]:string}) {\r\n        for (const k in values) {\r\n            const val = values[k];\r\n            val ? this._stylesheet[k] = val : delete this._stylesheet[k];\r\n            if (!this._setNonInline) {\r\n                val ? this._stylesheetInline[k] = val : delete this._stylesheetInline[k];\r\n                this._layout.updateStyle (serializeStyleSheet (this._stylesheetInline));\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    setOverflow (val: string) {\r\n        const values = ElementStyle._normalizeCSSValue (val);\r\n        if (values) {\r\n            if (values.length === 1) {\r\n                this.setOverflowX (values[0]);\r\n                this.setOverflowY (values[0]);\r\n            } else if (values.length === 2) {\r\n                this.setOverflowX (values[0]);\r\n                this.setOverflowY (values[1]);\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    setOverflowX (val: string) {\r\n        if (val !== this._stylesheet.overflowX && (val === '' || overflowConstantMap[val])) {\r\n            this._syncValue ('overflowX', val);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setOverflowY (val: string) {\r\n        if (val !== this._stylesheet.overflowY && (val === '' || overflowConstantMap[val])) {\r\n            this._syncValue ('overflowY', val);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    getBorderLeft (): number {\r\n        return this._layout.node.getBorder (Yoga.EDGE_LEFT) || 0;\r\n    }\r\n    /** @internal */\r\n    getBorderTop (): number {\r\n        return this._layout.node.getBorder (Yoga.EDGE_TOP) || 0;\r\n    }\r\n    /** @internal */\r\n    getBorderRight (): number {\r\n        return this._layout.node.getBorder (Yoga.EDGE_RIGHT) || 0;\r\n    }\r\n    /** @internal */\r\n    getBorderBottom (): number {\r\n        return this._layout.node.getBorder (Yoga.EDGE_BOTTOM) || 0;\r\n    }\r\n    /** @internal */\r\n    getPaddingLeft (): number {\r\n        return this._layout.node.getPadding (Yoga.EDGE_LEFT).value || 0;\r\n    }\r\n    /** @internal */\r\n    getPaddingTop (): number {\r\n        return this._layout.node.getPadding (Yoga.EDGE_TOP).value || 0;\r\n    }\r\n    /** @internal */\r\n    getPaddingRight (): number {\r\n        return this._layout.node.getPadding (Yoga.EDGE_RIGHT).value || 0;\r\n    }\r\n    /** @internal */\r\n    getPaddingBottom (): number {\r\n        return this._layout.node.getPadding (Yoga.EDGE_BOTTOM).value || 0;\r\n    }\r\n    /** @internal */\r\n    private _checkStringConstant (k: string, v: string, defaultValue: any, constantMap: {[k:string]:any}): any {\r\n        if (v !== this[k] && (v === '' || constantMap[v] !== undefined)) {\r\n            const val = v === '' ? defaultValue : constantMap[v];\r\n            this._syncValue (k, v);\r\n            return val;\r\n        }\r\n    }\r\n    /** @internal */\r\n    setDisplay (val: string) {\r\n        const v = this._checkStringConstant ('display', val, Yoga.DISPLAY_FLEX, displayConstantMap);\r\n        if (v !== undefined) {\r\n            this._layout.node.setDisplay (v);\r\n            this._layout.updateDisplay (val);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setPositionType (val: string) {\r\n        const v = this._checkStringConstant ('position', val, Yoga.POSITION_TYPE_RELATIVE, positionConstantMap);\r\n        if (v !== undefined) {\r\n            this._layout.node.setPositionType (v);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    private _setPosition (edge: number, k: string, v: string) {\r\n        const position = (v === '') ? 0 : this.parsePosition (v);\r\n        if (v !== '') {\r\n            v = typeof position === 'number' ? `${position}px` : position;\r\n        }\r\n        if(v !== undefined && v !== this[k]) {\r\n            this._syncValue (k, v);\r\n            this._layout.node.setPosition (edge, position);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setLeft (val: string) {\r\n        this._setPosition (Yoga.EDGE_LEFT, 'left', val);\r\n    }\r\n    /** @internal */\r\n    setTop (val: string) {\r\n        this._setPosition (Yoga.EDGE_TOP, 'top', val);\r\n    }\r\n    /** @internal */\r\n    setRight (val: string) {\r\n        this._setPosition (Yoga.EDGE_RIGHT, 'right', val);\r\n    }\r\n    /** @internal */\r\n    setBottom (val: string) {\r\n        this._setPosition (Yoga.EDGE_BOTTOM, 'bottom', val);\r\n    }\r\n    /** @internal */\r\n    setWidth (val: string) {\r\n        const w = (val === '') ? 'auto' : this.parseLengthOrAuto (val);\r\n        val = typeof w === 'number' ? `${w}px` : w;\r\n        if (val !== undefined && val !== this.width) {\r\n            this._syncValue ('width', val);\r\n            this._layout.node.setWidth (w);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setMinWidth (val: string) {\r\n        const w = (val === '') ? undefined : this.parseLength (val);\r\n        val = typeof w === 'number' ? `${w}px` : w;\r\n        if (val !== this.minWidth) {\r\n            this._syncValue ('minWidth', val);\r\n            this._layout.node.setMinWidth (w);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setMaxWidth (val: string) {\r\n        const w = (val === '') ? undefined : this.parseLength (val);\r\n        val = typeof w === 'number' ? `${w}px` : w;\r\n        if (val !== this.maxWidth) {\r\n            this._syncValue ('maxWidth', val);\r\n            this._layout.node.setMaxWidth (w);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setHeight (val: string) {\r\n        const h = (val === '') ? 'auto' : this.parseLengthOrAuto (val);\r\n        val = typeof h === 'number' ? `${h}px` : h;\r\n        if (val !== undefined && val !== this.height) {\r\n            this._syncValue ('height', val);\r\n            this._layout.node.setHeight (h);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setMinHeight (val: string) {\r\n        const h = (val === '') ? undefined : this.parseLength (val);\r\n        val = typeof h === 'number' ? `${h}px` : h;\r\n        if (val !== this.minHeight) {\r\n            this._syncValue ('minHeight', val);\r\n            this._layout.node.setMinHeight (h);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setMaxHeight (val: string) {\r\n        const h = (val === '') ? undefined : this.parseLength (val);\r\n        val = typeof h === 'number' ? `${h}px` : h;\r\n        if (val !== this.maxHeight) {\r\n            this._syncValue ('maxHeight', val);\r\n            this._layout.node.setMaxHeight (h);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setFlexDirection (val: string) {\r\n        const v = this._checkStringConstant ('flexDirection', val, Yoga.FLEX_DIRECTION_ROW, directionConstantMap);\r\n        if (v !== undefined) {\r\n            this._layout.node.setFlexDirection (v);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setFlexWrap (val: string) {\r\n        const v = this._checkStringConstant ('flexWrap', val, Yoga.WRAP_NO_WRAP, wrapConstantMap);\r\n        if (v !== undefined) {\r\n            this._layout.node.setFlexWrap (v);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setFlexFlow (val: string) {\r\n        if (val !== this.flexFlow) {\r\n            if (val === '') {\r\n                this.setFlexDirection ('');\r\n                this.setFlexWrap ('');\r\n            } else {\r\n                let invalid = false;\r\n                let direction: string = '';\r\n                let wrap: string = '';\r\n                const tuples = val.trim().split(/\\s+/);\r\n                if (tuples.length < 3) {\r\n                    for (let i = 0; i < tuples.length; i++) {\r\n                        if (direction === '') {\r\n                            if (directionConstantMap[tuples[i]] !== undefined) {\r\n                                direction = tuples[i];\r\n                                continue;\r\n                            }\r\n                        }\r\n                        if (wrap === '') {\r\n                            if (wrapConstantMap[tuples[i]] !== undefined) {\r\n                                wrap = tuples[i];\r\n                                continue;\r\n                            }\r\n                        }\r\n                        invalid = true;\r\n                        break;\r\n                    }\r\n                    if (!invalid) {\r\n                        this.setFlexDirection (direction);\r\n                        this.setFlexWrap (wrap);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    setAlignItems (val: string) {\r\n        const v = this._checkStringConstant ('alignItems', val, Yoga.ALIGN_STRETCH, alignmentConstantMap);\r\n        if (v !== undefined) {\r\n            this._layout.node.setAlignItems (v);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setAlignContent (val: string) {\r\n        const v = this._checkStringConstant ('alignContent', val, Yoga.ALIGN_FLEX_START, alignmentConstantMap);\r\n        if (v !== undefined) {\r\n            this._layout.node.setAlignContent (v);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setAlignSelf (val: string) {\r\n        const v = this._checkStringConstant ('alignSelf', val, Yoga.ALIGN_AUTO, alignmentConstantMap);\r\n        if (v !== undefined) {\r\n            this._layout.node.setAlignSelf (v);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setJustifyContent (val: string) {\r\n        const v = this._checkStringConstant ('justifyContent', val, Yoga.JUSTIFY_FLEX_START, justifyConstantMap);\r\n        if (v !== undefined) {\r\n            this._layout.node.setJustifyContent (v);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setFlexGrow (val: string) {\r\n        const grow = (val === '') ? undefined : this.parseGrowOrShrink (val);\r\n        if (val !== '' && typeof grow === 'number') {\r\n            val = String(grow);\r\n        }\r\n        if((val === '' || grow !== undefined) && val !== this.flexGrow) {\r\n            this._syncValue ('flexGrow', val);\r\n            this._layout.node.setFlexGrow (grow);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setFlexShrink (val: string) {\r\n        const shrink = (val === '') ? undefined : this.parseGrowOrShrink (val);\r\n        if (val !== '' && typeof shrink === 'number') {\r\n            val = String (shrink);\r\n        }\r\n        if ((val === '' || shrink !== undefined) && val !== this.flexShrink) {\r\n            this._syncValue ('flexShrink', val);\r\n            this._layout.node.setFlexShrink (shrink);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setFlexBasis (val: string) {\r\n        const basis = (val === '') ? 'auto' : this.parseLengthOrAuto (val);\r\n        val = typeof basis === 'number' ? `${basis}px` : basis;\r\n        if (val !== undefined && val !== this.flexBasis) {\r\n            this._syncValue ('flexBasis', val);\r\n            this._layout.node.setFlexBasis (basis);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    setFlex (val: string) {\r\n        if (val !== this.flex || (val === '' && (this.flexGrow || this.flexShrink || this.flexBasis))) {\r\n            if (val === '') {\r\n                this.setFlexGrow ('');\r\n                this.setFlexShrink ('');\r\n                this.setFlexBasis ('');\r\n            } else {\r\n                let invalid = false;\r\n                const values: string[] = [];\r\n                const tuples = (String(val)).trim().split(/\\s+/);\r\n                if (tuples.length < 4) {\r\n                    for (let i = 0; i < tuples.length; i++) {\r\n                        const val = i < 2 ? this.parseGrowOrShrink (tuples[i]) : this.parseLengthOrAuto (tuples[i]);\r\n                        if (val === undefined) {\r\n                            invalid = true;\r\n                            break;\r\n                        }\r\n                        values.push (tuples[i]);\r\n                    }\r\n                    if (!invalid) {\r\n                        if (values.length > 0) {\r\n                            this.setFlexGrow (values[0]);\r\n                        } else {\r\n                            this.setFlexGrow ('');\r\n                            this.setFlexShrink ('');\r\n                            this.setFlexBasis ('');\r\n                        }\r\n                        if (values.length > 1) {\r\n                            this.setFlexShrink (values[1]);\r\n                        } else {\r\n                            this.setFlexShrink ('');\r\n                            this.setFlexBasis ('');\r\n                        }\r\n                        if (values.length > 2) {\r\n                            this.setFlexBasis (values[2]);\r\n                        } else {\r\n                            this.setFlexBasis ('');\r\n                        }\r\n                        this._layout.invalidateLayout ();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    setMarginLeft (val: string) {\r\n        this._setMargin (Yoga.EDGE_LEFT, 'marginLeft', val);\r\n    }\r\n    /** @internal */\r\n    setMarginTop (val: string) {\r\n        this._setMargin (Yoga.EDGE_TOP, 'marginTop', val);\r\n    }\r\n    /** @internal */\r\n    setMarginRight (val: string) {\r\n        this._setMargin (Yoga.EDGE_RIGHT, 'marginRight', val);\r\n    }\r\n    /** @internal */\r\n    setMarginBottom (val: string) {\r\n        this._setMargin (Yoga.EDGE_BOTTOM, 'marginBottom', val);\r\n    }\r\n    /** @internal */\r\n    setMargin (val: string) {\r\n        if (val !== this.margin || (val === '' && (this.marginLeft || this.marginTop || this.marginRight || this.marginBottom))) {\r\n            if (val === '') {\r\n                this.setMarginLeft ('');\r\n                this.setMarginTop ('');\r\n                this.setMarginRight ('');\r\n                this.setMarginBottom ('');\r\n            } else {\r\n                let invalid = false;\r\n                const values: string[] = [];\r\n                const tuples = val.trim().split(/\\s+/);\r\n                if (tuples.length < 5) {\r\n                    for (let i = 0; i < tuples.length; i++) {\r\n                        const margin = this.parseMargin (tuples[i]);\r\n                        if (margin === undefined) {\r\n                            invalid = true;\r\n                            break;\r\n                        }\r\n                        values.push (tuples[i]);\r\n                    }\r\n                    if (!invalid) {\r\n                        switch (values.length) {\r\n                            case 1:\r\n                                this.setMarginTop(values[0]);\r\n                                this.setMarginRight(values[0]);\r\n                                this.setMarginBottom(values[0]);\r\n                                this.setMarginLeft(values[0]);\r\n                                break;\r\n                            case 2:\r\n                                this.setMarginTop(values[0]);\r\n                                this.setMarginRight(values[1]);\r\n                                this.setMarginBottom(values[0]);\r\n                                this.setMarginLeft(values[1]);\r\n                                break;\r\n                            case 3:\r\n                                this.setMarginTop(values[0]);\r\n                                this.setMarginRight(values[1]);\r\n                                this.setMarginBottom(values[2]);\r\n                                this.setMarginLeft(values[1]);\r\n                                break;\r\n                            case 4:\r\n                                this.setMarginTop(values[0]);\r\n                                this.setMarginRight(values[1]);\r\n                                this.setMarginBottom(values[2]);\r\n                                this.setMarginLeft(values[3]);\r\n                                break;\r\n                        }\r\n                        this._layout.invalidateLayout ();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    setBorderLeftColor (val: string) {\r\n        this._setBorderColor (Yoga.EDGE_LEFT, 'borderLeftColor', val);\r\n    }\r\n    /** @internal */\r\n    setBorderTopColor (val: string) {\r\n        this._setBorderColor (Yoga.EDGE_TOP, 'borderTopColor', val);\r\n    }\r\n    /** @internal */\r\n    setBorderRightColor (val: string) {\r\n        this._setBorderColor (Yoga.EDGE_RIGHT, 'borderRightColor', val);\r\n    }\r\n    /** @internal */\r\n    setBorderBottomColor (val: string) {\r\n        this._setBorderColor (Yoga.EDGE_BOTTOM, 'borderBottomColor', val);\r\n    }\r\n    /** @internal */\r\n    setBorderColor (val: string) {\r\n        if (val !== this.borderColor || (val === '' && (this.borderLeftColor || this.borderTopColor || this.borderRightColor || this.borderBottomColor))) {\r\n            if (val === '') {\r\n                this.setBorderLeftColor ('');\r\n                this.setBorderTopColor ('');\r\n                this.setBorderRightColor ('');\r\n                this.setBorderBottomColor ('');\r\n            } else {\r\n                let invalid = false;\r\n                const values: string[] = [];\r\n                const tuples = val.trim().split(/\\s+/);\r\n                if (tuples.length < 5) {\r\n                    for (let i = 0; i < tuples.length; i++) {\r\n                        const color = this.parseColor (tuples[i]);\r\n                        if (color === undefined) {\r\n                            invalid = true;\r\n                            break;\r\n                        }\r\n                        values.push (tuples[i]);\r\n                    }\r\n                    if (!invalid) {\r\n                        switch (values.length) {\r\n                            case 1:\r\n                                this.setBorderTopColor(values[0]);\r\n                                this.setBorderRightColor(values[0]);\r\n                                this.setBorderBottomColor(values[0]);\r\n                                this.setBorderLeftColor(values[0]);\r\n                                break;\r\n                            case 2:\r\n                                this.setBorderTopColor(values[0]);\r\n                                this.setBorderRightColor(values[1]);\r\n                                this.setBorderBottomColor(values[0]);\r\n                                this.setBorderLeftColor(values[1]);\r\n                                break;\r\n                            case 3:\r\n                                this.setBorderTopColor(values[0]);\r\n                                this.setBorderRightColor(values[1]);\r\n                                this.setBorderBottomColor(values[2]);\r\n                                this.setBorderLeftColor(values[1]);\r\n                                break;\r\n                            case 4:\r\n                                this.setBorderTopColor(values[0]);\r\n                                this.setBorderRightColor(values[1]);\r\n                                this.setBorderBottomColor(values[2]);\r\n                                this.setBorderLeftColor(values[3]);\r\n                                break;\r\n                        }\r\n                        this._layout.invalidateLayout ();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    setBorderLeftWidth (val: string) {\r\n        this._setBorderWidth (Yoga.EDGE_LEFT, 'borderLeftWidth', val);\r\n    }\r\n    /** @internal */\r\n    setBorderTopWidth (val: string) {\r\n        this._setBorderWidth (Yoga.EDGE_TOP, 'borderTopWidth', val);\r\n    }\r\n    /** @internal */\r\n    setBorderRightWidth (val: string) {\r\n        this._setBorderWidth (Yoga.EDGE_RIGHT, 'borderRightWidth', val);\r\n    }\r\n    /** @internal */\r\n    setBorderBottomWidth (val: string) {\r\n        this._setBorderWidth (Yoga.EDGE_BOTTOM, 'borderBottomWidth', val);\r\n    }\r\n    /** @internal */\r\n    setBorderWidth (val: string) {\r\n        if (val !== this.borderWidth || (val === '' && (this.borderLeftWidth || this.borderTopWidth || this.borderRightWidth || this.borderBottomWidth))) {\r\n            if (val === '') {\r\n                this.setBorderLeftWidth ('');\r\n                this.setBorderTopWidth ('');\r\n                this.setBorderRightWidth ('');\r\n                this.setBorderBottomWidth ('');\r\n            } else {\r\n                let invalid = false;\r\n                const values: string[] = [];\r\n                const tuples = val.trim().split(/\\s+/);\r\n                if (tuples.length < 5) {\r\n                    for (let i = 0; i < tuples.length; i++) {\r\n                        const border = this.parseFixedNonNegative (tuples[i]);\r\n                        if (border === undefined) {\r\n                            invalid = true;\r\n                            break;\r\n                        }\r\n                        values.push (tuples[i]);\r\n                    }\r\n                    if (!invalid) {\r\n                        switch (values.length) {\r\n                            case 1:\r\n                                this.setBorderTopWidth(values[0]);\r\n                                this.setBorderRightWidth(values[0]);\r\n                                this.setBorderBottomWidth(values[0]);\r\n                                this.setBorderLeftWidth(values[0]);\r\n                                break;\r\n                            case 2:\r\n                                this.setBorderTopWidth(values[0]);\r\n                                this.setBorderRightWidth(values[1]);\r\n                                this.setBorderBottomWidth(values[0]);\r\n                                this.setBorderLeftWidth(values[1]);\r\n                                break;\r\n                            case 3:\r\n                                this.setBorderTopWidth(values[0]);\r\n                                this.setBorderRightWidth(values[1]);\r\n                                this.setBorderBottomWidth(values[2]);\r\n                                this.setBorderLeftWidth(values[1]);\r\n                                break;\r\n                            case 4:\r\n                                this.setBorderTopWidth(values[0]);\r\n                                this.setBorderRightWidth(values[1]);\r\n                                this.setBorderBottomWidth(values[2]);\r\n                                this.setBorderLeftWidth(values[3]);\r\n                                break;\r\n                        }\r\n                        this._layout.invalidateLayout ();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    setPaddingLeft (val: string) {\r\n        this._setPadding (Yoga.EDGE_LEFT, 'paddingLeft', val);\r\n    }\r\n    /** @internal */\r\n    setPaddingTop (val: string) {\r\n        this._setPadding (Yoga.EDGE_TOP, 'paddingTop', val);\r\n    }\r\n    /** @internal */\r\n    setPaddingRight (val: string) {\r\n        this._setPadding (Yoga.EDGE_RIGHT, 'paddingRight', val);\r\n    }\r\n    /** @internal */\r\n    setPaddingBottom (val: string) {\r\n        this._setPadding (Yoga.EDGE_BOTTOM, 'paddingBottom', val);\r\n    }\r\n    /** @internal */\r\n    setPadding (val: string) {\r\n        if (val !== this.padding || (val === '' && (this.paddingLeft || this.paddingTop || this.paddingRight || this.paddingBottom))) {\r\n            if (val === '') {\r\n                this.setPaddingLeft ('');\r\n                this.setPaddingTop ('');\r\n                this.setPaddingBottom ('');\r\n                this.setPaddingRight ('');\r\n            } else {\r\n                let invalid = false;\r\n                const values: string[] = [];\r\n                const tuples = val.trim().split(/\\s+/);\r\n                if (tuples.length < 5) {\r\n                    for (let i = 0; i < tuples.length; i++) {\r\n                        const padding = this.parseFixedNonNegative (tuples[i]);\r\n                        if (padding === undefined) {\r\n                            invalid = true;\r\n                            break;\r\n                        }\r\n                        values.push (tuples[i]);\r\n                    }\r\n                    if (!invalid) {\r\n                        switch (values.length) {\r\n                            case 1:\r\n                                this.setPaddingTop(values[0]);\r\n                                this.setPaddingRight(values[0]);\r\n                                this.setPaddingBottom(values[0]);\r\n                                this.setPaddingLeft(values[0]);\r\n                                break;\r\n                            case 2:\r\n                                this.setPaddingTop(values[0]);\r\n                                this.setPaddingRight(values[1]);\r\n                                this.setPaddingBottom(values[0]);\r\n                                this.setPaddingLeft(values[1]);\r\n                                break;\r\n                            case 3:\r\n                                this.setPaddingTop(values[0]);\r\n                                this.setPaddingRight(values[1]);\r\n                                this.setPaddingBottom(values[2]);\r\n                                this.setPaddingLeft(values[1]);\r\n                                break;\r\n                            case 4:\r\n                                this.setPaddingTop(values[0]);\r\n                                this.setPaddingRight(values[1]);\r\n                                this.setPaddingBottom(values[2]);\r\n                                this.setPaddingLeft(values[3]);\r\n                                break;\r\n                        }\r\n                        this._layout.invalidateLayout ();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    setZIndex (val: string) {\r\n        const z = (val === '') ? 0 : Number(val);\r\n        if (!Number.isNaN (z)) {\r\n            val = String(z);\r\n        }\r\n        if(!Number.isNaN (z) && val !== this.zIndex) {\r\n            this._syncValue ('zIndex', val);\r\n            this._layout.updateZIndex ()\r\n        }\r\n    }\r\n    /** @internal */\r\n    setCursor (val: string) {\r\n        val = val || 'default';\r\n        if (this._stylesheet.cursor !== val) {\r\n            this._syncValue ('cursor', val);\r\n            this._layout.updateCursor (val);\r\n        }\r\n    }\r\n    /** @internal */\r\n    setBackgroundColor (val: string) {\r\n        if (this._stylesheet.backgroundColor !== val) {\r\n            const color = val !== '' ? this.parseColor (val) : ElementStyle.defaultBackgroundColor;\r\n            if (color) {\r\n                this._syncValue ('backgroundColor', val);\r\n                this._layout.updateBackgroundColor (color);\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    setBackgroundImage (val: string) {\r\n        if (this._stylesheet.backgroundImage !== val) {\r\n            this._syncValue ('backgroundImage', val);\r\n        }\r\n    }\r\n    /** @internal */\r\n    setFontSize (val: string) {\r\n        const size = val === '' ? undefined : this.parseFixedNonNegative (val);\r\n        if (size !== undefined) {\r\n            val = typeof size === 'number' ? `${size}px` : val;\r\n        }\r\n        if(val !== this.fontSize) {\r\n            this._syncValue ('fontSize', val);\r\n            this._layout.updateFontSize (val);\r\n        }\r\n    }\r\n    /** @internal */\r\n    setFontFamily (val: string) {\r\n        if (val !== this.fontFamily) {\r\n            this._syncValue ('fontFamily', val);\r\n            this._layout.updateFontFamily (val);\r\n        }\r\n    }\r\n    /** @internal */\r\n    setFont (val: string) {\r\n        if (val === '') {\r\n            this.setFontSize ('');\r\n            this.setFontFamily ('');\r\n        } else {\r\n            const fontParts = _normalizeCSSValue (val);\r\n            if (fontParts.length > 1) {\r\n                const fontSize = fontParts[fontParts.length-2];\r\n                const fontFamily = fontParts[fontParts.length-1];\r\n                this.setFontSize (fontSize);\r\n                this.setFontFamily (fontFamily);\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    setFontColor (val: string) {\r\n        if (this._stylesheet.color !== val) {\r\n            this._syncValue ('color', val);\r\n            this._layout.updateFontColor (val);\r\n        }\r\n    }\r\n    /** @internal */\r\n    applyStyles (styles: string, inline: boolean) {\r\n        this._setNonInline = !inline\r\n        const items = styles.split (';').map (val => val.trim()).filter(val => !!val);\r\n        for (const item of items) {\r\n            const kv = item.split(':').map (val => val.trim());\r\n            if (kv.length === 2) {\r\n                const setter = styleSetters[kv[0]];\r\n                setter && setter.call (this, kv[1]);\r\n            }\r\n        }\r\n        this._setNonInline = false;\r\n    }\r\n    /** @internal */\r\n    applyStyleSheet (stylesheet: IStyleSheet, inline: boolean) {\r\n        this._setNonInline = !inline;\r\n        for (const k in stylesheet) {\r\n            const v = stylesheet[k];\r\n            if (v) {\r\n                this[k] = v;\r\n            }\r\n        }\r\n        this._setNonInline = false;\r\n    }\r\n    /** @internal */\r\n    parseColor(input: string): Vec4 {\r\n        input = input.trim ().toLowerCase ();\r\n        input = colorNames[input] || input;\r\n        if (input.substr(0,1)=='#') {\r\n            const collen = (input.length - 1) / 3;\r\n            const fact = [17, 1 , 0.062272][collen-1];\r\n            const v = { x: parseInt(input.substr(1,collen),16)*fact/255,\r\n                y: parseInt(input.substr(1+collen,collen),16)*fact/255,\r\n                z: parseInt(input.substr(1+2*collen,collen),16)*fact/255, w: 1 };\r\n            return (Number.isNaN(v.x)||Number.isNaN(v.y)||Number.isNaN(v.z)||Number.isNaN(v.w)) ? null : v;\r\n        } else {\r\n            let v: Vec4 = null;\r\n            let m: RegExpMatchArray;\r\n            if (m = input.match(/^\\s*rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)\\s*$/i)) {\r\n                v = { x:Number(m[1])/255, y:Number(m[2])/255, z:Number(m[3])/255, w:1 };\r\n            } else if (m = input.match(/^\\s*rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)\\s*$/i)) {\r\n                v = { x:Number(m[1])/255, y:Number(m[2])/255, z:Number(m[3])/255, w:Number(m[4])/255 };\r\n            }\r\n            return (!v || Number.isNaN(v.x) || Number.isNaN(v.y) || Number.isNaN(v.z) || Number.isNaN(v.w)) ? null : v;\r\n        }\r\n    }\r\n    /** @internal */\r\n    private parseGrowOrShrink (s: string) {\r\n        const val = Number(s);\r\n        if (!Number.isNaN (val) && val >= 0) {\r\n            return val;\r\n        }\r\n    }\r\n    /** @internal */\r\n    private parseLengthOrAuto (s: string): string | number {\r\n        if (s === 'auto') {\r\n            return s;\r\n        } else {\r\n            return this.parseLength (s);\r\n        }\r\n    }\r\n    /** @internal */\r\n    private parseFixed (s: string): number {\r\n        if (s.length > 2 && s.substr (s.length-2, 2) === 'px') {\r\n            s = s.substr (0, s.length - 2);\r\n        }\r\n        const pixels = Number (s);\r\n        if (!Number.isNaN (pixels)) {\r\n            return pixels;\r\n        }\r\n    }\r\n    /** @internal */\r\n    private parseFixedNonNegative (s: string): number {\r\n        const pixels = this.parseFixed (s);\r\n        if (pixels !== undefined && pixels >= 0) {\r\n            return pixels;\r\n        }\r\n    }\r\n    /** @internal */\r\n    private parseLength (s: string): string | number {\r\n        if (s[s.length - 1] === '%') {\r\n            const percent = Number (s.substr(0, s.length-1));\r\n            if (!Number.isNaN (percent) && percent >= 0) {\r\n                return s;\r\n            }\r\n        } else {\r\n            const pixels = this.parseFixed (s);\r\n            if (pixels >= 0) {\r\n                return pixels;\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    private parsePosition (s: string): string | number {\r\n        if (s[s.length - 1] === '%') {\r\n            const percent = Number (s.substr(0, s.length-1));\r\n            if (!Number.isNaN (percent) && percent >= 0) {\r\n                return s;\r\n            }\r\n        } else {\r\n            return this.parseFixed (s);\r\n        }\r\n    }\r\n    /** @internal */\r\n    private parseMargin (s: string): string | number {\r\n        if (s === 'auto') {\r\n            return s;\r\n        } else {\r\n            return this.parsePosition (s);\r\n        }\r\n    }\r\n    /** @internal */\r\n    private _setPadding (edge: number, k: string, v: string) {\r\n        const padding = (v === '') ? undefined : this.parseFixedNonNegative (v);\r\n        if (padding !== undefined) {\r\n            v = typeof padding === 'number' ? `${padding}px` : padding;\r\n        }\r\n        if((v === '' || padding !== undefined) && v !== this[k]) {\r\n            this._syncValue (k, v);\r\n            this._layout.node.setPadding (edge, padding);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    private _setMargin (edge: number, k: string, v: string) {\r\n        const margin = (v === '') ? undefined : this.parseMargin (v);\r\n        if (margin !== undefined) {\r\n            v = typeof margin === 'number' ? `${margin}px` : margin;\r\n        }\r\n        if((v === '' || margin !== undefined) && v !== this[k]) {\r\n            this._syncValue (k, v);\r\n            this._layout.node.setMargin (edge, margin);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    private _setBorderColor (edge: number, k: string, v: string) {\r\n        if (this._stylesheet[k] !== v) {\r\n            const color = v !== '' ? this.parseColor (v) : ElementStyle.defaultBorderColor;\r\n            if (color) {\r\n                this._syncValue (k, v);\r\n                this._layout.updateBorderColor (edge, color);\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    private _setBorderWidth (edge: number, k: string, v: string) {\r\n        const border = (v === '') ? undefined : this.parseFixedNonNegative (v);\r\n        if (border !== undefined) {\r\n            v = typeof border === 'number' ? `${border}px` : border;\r\n        }\r\n        if ((v === '' || border !== undefined) && v !== this[k]) {\r\n            this._syncValue (k, v);\r\n            this._layout.node.setBorder (edge, border);\r\n            this._layout.invalidateLayout ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    static _normalizeCSSValue (value: string): string[] {\r\n        return _normalizeCSSValue (value);\r\n    }\r\n}\r\n\r\nconst styleSetters: { [k: string]: (v: string)=>void } = {\r\n    'border-color': ElementStyle.prototype.setBorderColor,\r\n    'border-left-color': ElementStyle.prototype.setBorderLeftColor,\r\n    'border-top-color': ElementStyle.prototype.setBorderTopColor,\r\n    'border-right-color': ElementStyle.prototype.setBorderRightColor,\r\n    'border-bottom-color': ElementStyle.prototype.setBorderBottomColor,\r\n    'border-width': ElementStyle.prototype.setBorderWidth,\r\n    'border-left-width': ElementStyle.prototype.setBorderLeftWidth,\r\n    'border-top-width': ElementStyle.prototype.setBorderTopWidth,\r\n    'border-right-width': ElementStyle.prototype.setBorderRightWidth,\r\n    'border-bottom-width': ElementStyle.prototype.setBorderBottomWidth,\r\n    'margin': ElementStyle.prototype.setMargin,\r\n    'margin-left': ElementStyle.prototype.setMarginLeft,\r\n    'margin-top': ElementStyle.prototype.setMarginTop,\r\n    'margin-right': ElementStyle.prototype.setMarginRight,\r\n    'margin-bottom': ElementStyle.prototype.setMarginBottom,\r\n    'padding': ElementStyle.prototype.setPadding,\r\n    'padding-left': ElementStyle.prototype.setPaddingLeft,\r\n    'padding-right': ElementStyle.prototype.setPaddingRight,\r\n    'padding-top': ElementStyle.prototype.setPaddingTop,\r\n    'padding-bottom': ElementStyle.prototype.setPaddingBottom,\r\n    'position': ElementStyle.prototype.setPositionType,\r\n    'overflow': ElementStyle.prototype.setOverflow,\r\n    'overflow-x': ElementStyle.prototype.setOverflowX,\r\n    'overflow-y': ElementStyle.prototype.setOverflowY,\r\n    'display': ElementStyle.prototype.setDisplay,\r\n    'left': ElementStyle.prototype.setLeft,\r\n    'top': ElementStyle.prototype.setTop,\r\n    'right': ElementStyle.prototype.setRight,\r\n    'bottom': ElementStyle.prototype.setBottom,\r\n    'width': ElementStyle.prototype.setWidth,\r\n    'height': ElementStyle.prototype.setHeight,\r\n    'min-width': ElementStyle.prototype.setMinWidth,\r\n    'max-width': ElementStyle.prototype.setMaxWidth,\r\n    'min-height': ElementStyle.prototype.setMinHeight,\r\n    'max-height': ElementStyle.prototype.setMaxHeight,\r\n    'flex-flow': ElementStyle.prototype.setFlexFlow,\r\n    'flex-direction': ElementStyle.prototype.setFlexDirection,\r\n    'flex-wrap': ElementStyle.prototype.setFlexWrap,\r\n    'align-content': ElementStyle.prototype.setAlignContent,\r\n    'align-items': ElementStyle.prototype.setAlignItems,\r\n    'align-self': ElementStyle.prototype.setAlignSelf,\r\n    'justify-content': ElementStyle.prototype.setJustifyContent,\r\n    'flex-grow': ElementStyle.prototype.setFlexGrow,\r\n    'flex-shrink': ElementStyle.prototype.setFlexShrink,\r\n    'flex-basis': ElementStyle.prototype.setFlexBasis,\r\n    'flex': ElementStyle.prototype.setFlex,\r\n    'z-index': ElementStyle.prototype.setZIndex,\r\n    'cursor': ElementStyle.prototype.setCursor,\r\n    'background-color': ElementStyle.prototype.setBackgroundColor,\r\n    'background-image': ElementStyle.prototype.setBackgroundImage,\r\n    'font': ElementStyle.prototype.setFont,\r\n    'font-size': ElementStyle.prototype.setFontSize,\r\n    'font-family': ElementStyle.prototype.setFontFamily,\r\n    'color': ElementStyle.prototype.setFontColor\r\n}\r\n","import { RMLElement, GUI, tagname, RMLSelector, IStyleSheet, TextContentChangeEvent, Event } from '.';\r\n\r\n/** @internal */\r\nexport interface IStyleDefiniation {\r\n    selector: RMLSelector;\r\n    stylesheet: IStyleSheet;\r\n    extra: object;\r\n}\r\n\r\n@tagname ('style')\r\nexport class StyleElement extends RMLElement<StyleElement> {\r\n    private _definitions: IStyleDefiniation[];\r\n    constructor (uiscene: GUI) {\r\n        super (uiscene);\r\n        this._definitions = [];\r\n        this.addEventListener (TextContentChangeEvent.NAME, (e: Event) => {\r\n            this._update ();\r\n        });\r\n    }\r\n    /** @internal */\r\n    get definitions (): IStyleDefiniation[] {\r\n        return this._definitions;\r\n    }\r\n    /** @internal */\r\n    private _update () {\r\n        this._definitions = this._uiscene._parseStyleContent (this.textContent);\r\n        if (this._isSucceedingOf (this._uiscene.document)) {\r\n            this._uiscene.requireFullStyleRefresh ();\r\n        }\r\n    }\r\n    /** @internal */\r\n    _getDefaultStyleSheet (): IStyleSheet {\r\n        const style = {} as IStyleSheet;\r\n        style.display = 'none';\r\n        return style;\r\n    }\r\n}","import { Vec2, Texture } from '.';\r\n\r\nexport class TextureAtlas {\r\n    /** @internal */\r\n    protected _texture: Texture;\r\n    /** @internal */\r\n    protected _uvMin: Vec2;\r\n    /** @internal */\r\n    protected _uvMax: Vec2;\r\n    /** @internal */\r\n    protected _topLeftPatch9: Vec2;\r\n    /** @internal */\r\n    protected _bottomRightPatch9: Vec2;\r\n    constructor (texture?: Texture, uvMin?: Vec2, uvMax?: Vec2, topLeftPatch9?: Vec2, bottomRightPatch9?: Vec2) {\r\n        this._texture = texture || null;\r\n        this._uvMin = uvMin || { x:0, y:0 };\r\n        this._uvMax = uvMax || { x:1, y:1 };\r\n        this._topLeftPatch9 = topLeftPatch9 || null;\r\n        this._bottomRightPatch9 = bottomRightPatch9 || null;\r\n    }\r\n    get texture () {\r\n        return this._texture;\r\n    }\r\n    set texture (tex: Texture) {\r\n        this._texture = tex;\r\n    }\r\n    get uvMin () {\r\n        return this._uvMin;\r\n    }\r\n    set uvMin (v: Vec2) {\r\n        this._uvMin.x = v.x;\r\n        this._uvMin.y = v.y;\r\n    }\r\n    get uvMax () {\r\n        return this._uvMax;\r\n    }\r\n    set uvMax (v: Vec2) {\r\n        this._uvMax.x = v.x;\r\n        this._uvMax.y = v.y;\r\n    }\r\n    get topLeftPatch9 () {\r\n        return this._topLeftPatch9;\r\n    }\r\n    set topLeftPatch9 (v: Vec2) {\r\n        this._topLeftPatch9.x = v.x;\r\n        this._topLeftPatch9.y = v.y;\r\n    }\r\n    get bottomRightPatch9 () {\r\n        return this._bottomRightPatch9;\r\n    }\r\n    set bottomRightPatch9 (v: Vec2) {\r\n        this._bottomRightPatch9.x = v.x;\r\n        this._bottomRightPatch9.y = v.y;\r\n    }\r\n}\r\n","import {\r\n    YGAlign,\r\n    YGDimension,\r\n    YGDirection,\r\n    YGDisplay,\r\n    YGEdge,\r\n    YGExperimentalFeature,\r\n    YGFlexDirection,\r\n    YGJustify,\r\n    YGLogLevel,\r\n    YGMeasureMode,\r\n    YGNodeType,\r\n    YGOverflow,\r\n    YGPositionType,\r\n    YGUnit,\r\n    YGWrap\r\n} from \"./enums\";\r\n\r\nimport {\r\n    YGNodeCalculateLayout,\r\n    YGNodeCopyStyle,\r\n    YGNodeFree,\r\n    YGNodeFreeRecursive,\r\n    YGNodeStyleGetAlignContent,\r\n    YGNodeStyleGetAlignItems,\r\n    YGNodeStyleGetAlignSelf,\r\n    YGNodeStyleGetAspectRatio,\r\n    YGNodeStyleGetBorder,\r\n    YGNodeGetChild,\r\n    YGNodeGetChildCount,\r\n    YGNodeLayoutGetBorder,\r\n    YGNodeLayoutGetBottom,\r\n    YGNodeLayoutGetHeight,\r\n    YGNodeLayoutGetLeft,\r\n    YGNodeLayoutGetRight,\r\n    YGNodeLayoutGetTop,\r\n    YGNodeLayoutGetWidth,\r\n    YGNodeLayoutGetMargin,\r\n    YGNodeLayoutGetPadding,\r\n    YGNodeStyleGetDisplay,\r\n    YGNodeStyleGetFlexBasis,\r\n    YGNodeStyleGetFlexDirection,\r\n    YGNodeStyleGetFlexGrow,\r\n    YGNodeStyleGetFlexShrink,\r\n    YGNodeStyleGetFlexWrap,\r\n    YGNodeStyleGetHeight,\r\n    YGNodeStyleGetJustifyContent,\r\n    YGNodeStyleGetMargin,\r\n    YGNodeStyleGetMaxHeight,\r\n    YGNodeStyleGetMaxWidth,\r\n    YGNodeStyleGetMinHeight,\r\n    YGNodeStyleGetMinWidth,\r\n    YGNodeStyleGetOverflow,\r\n    YGNodeStyleGetPadding,\r\n    YGNodeGetParent,\r\n    YGNodeStyleGetPositionType,\r\n    YGNodeStyleGetWidth,\r\n    YGNodeInsertChild,\r\n    YGNodeIsDirty,\r\n    YGNodeMarkDirty,\r\n    YGNodeRemoveChild,\r\n    YGNodeReset,\r\n    YGNodeStyleSetAlignContent,\r\n    YGNodeStyleSetAlignItems,\r\n    YGNodeStyleSetAlignSelf,\r\n    YGNodeStyleSetAspectRatio,\r\n    YGNodeStyleSetBorder,\r\n    YGNodeStyleSetDisplay,\r\n    YGNodeStyleSetFlex,\r\n    YGNodeStyleSetFlexBasis,\r\n    YGNodeStyleSetFlexBasisAuto,\r\n    YGNodeStyleSetFlexBasisPercent,\r\n    YGNodeStyleSetFlexDirection,\r\n    YGNodeStyleSetFlexGrow,\r\n    YGNodeStyleSetFlexShrink,\r\n    YGNodeStyleSetFlexWrap,\r\n    YGNodeStyleSetHeight,\r\n    YGNodeStyleSetHeightAuto,\r\n    YGNodeStyleSetHeightPercent,\r\n    YGNodeStyleSetJustifyContent,\r\n    YGNodeStyleSetMargin,\r\n    YGNodeStyleSetMarginAuto,\r\n    YGNodeStyleSetMarginPercent,\r\n    YGNodeStyleSetMaxHeight,\r\n    YGNodeStyleSetMaxHeightPercent,\r\n    YGNodeStyleSetMaxWidth,\r\n    YGNodeStyleSetMaxWidthPercent,\r\n    YGNodeSetMeasureFunc,\r\n    YGNodeStyleSetMinHeight,\r\n    YGNodeStyleSetMinHeightPercent,\r\n    YGNodeStyleSetMinWidth,\r\n    YGNodeStyleSetMinWidthPercent,\r\n    YGNodeStyleSetOverflow,\r\n    YGNodeStyleSetPadding,\r\n    YGNodeStyleSetPaddingPercent,\r\n    YGNodeStyleSetPositionType,\r\n    YGNodeStyleSetPositionPercent,\r\n    YGNodeStyleSetWidth,\r\n    YGNodeStyleSetWidthAuto,\r\n    YGNodeStyleSetWidthPercent,\r\n    YGNodeGetContext,\r\n    YGNodeSetContext,\r\n    YGConfigFree,\r\n    YGConfigSetExperimentalFeatureEnabled,\r\n    YGConfigSetPointScaleFactor,\r\n    YGConfigIsExperimentalFeatureEnabled,\r\n    YGNodeStyleGetPosition,\r\n    YGConfigNew,\r\n    YGNodeNewWithConfig,\r\n    YGNodeNew,\r\n    YGNodeStyleSetPosition,\r\n    YGNodeGetInstanceCount\r\n} from \"./yoga\"\r\n\r\nimport { YGNode } from \"./ygnode\"\r\nimport { YGValue } from \"./ygvalue\"\r\nimport { YGConfig } from \"./ygconfig\"\r\nimport { YGFloatSanitize } from \"./utils\"\r\n\r\nexport const ALIGN_AUTO = YGAlign.Auto;\r\nexport const ALIGN_FLEX_START = YGAlign.FlexStart;\r\nexport const ALIGN_CENTER = YGAlign.Center;\r\nexport const ALIGN_FLEX_END = YGAlign.FlexEnd;\r\nexport const ALIGN_STRETCH = YGAlign.Stretch;\r\nexport const ALIGN_BASELINE = YGAlign.Baseline;\r\nexport const ALIGN_SPACE_BETWEEN = YGAlign.SpaceBetween;\r\nexport const ALIGN_SPACE_AROUND = YGAlign.SpaceAround;\r\nexport const DIMENSION_WIDTH = YGDimension.Width;\r\nexport const DIMENSION_HEIGHT = YGDimension.Height;\r\nexport const DIRECTION_INHERIT = YGDirection.Inherit;\r\nexport const DIRECTION_LTR = YGDirection.LTR;\r\nexport const DIRECTION_RTL = YGDirection.RTL;\r\nexport const DISPLAY_FLEX = YGDisplay.Flex;\r\nexport const DISPLAY_NONE = YGDisplay.None;\r\nexport const EDGE_LEFT = YGEdge.Left;\r\nexport const EDGE_TOP = YGEdge.Top;\r\nexport const EDGE_RIGHT = YGEdge.Right;\r\nexport const EDGE_BOTTOM = YGEdge.Bottom;\r\nexport const EDGE_START = YGEdge.Start;\r\nexport const EDGE_END = YGEdge.End;\r\nexport const EDGE_HORIZONTAL = YGEdge.Horizontal;\r\nexport const EDGE_VERTICAL = YGEdge.Vertical;\r\nexport const EDGE_ALL = YGEdge.All;\r\nexport const EXPERIMENTALFEATURE_WEBFLEXBASIS = YGExperimentalFeature.WebFlexBasis;\r\nexport const FLEX_DIRECTION_COLUMN = YGFlexDirection.Column;\r\nexport const FLEX_DIRECTION_COLUMN_REVERSE = YGFlexDirection.ColumnReverse;\r\nexport const FLEX_DIRECTION_ROW = YGFlexDirection.Row;\r\nexport const FLEX_DIRECTION_ROW_REVERSE = YGFlexDirection.RowReverse;\r\nexport const JUSTIFY_FLEX_START = YGJustify.FlexStart;\r\nexport const JUSTIFY_CENTER = YGJustify.Center;\r\nexport const JUSTIFY_FLEX_END = YGJustify.FlexEnd;\r\nexport const JUSTIFY_SPACE_BETWEEN = YGJustify.SpaceBetween;\r\nexport const JUSTIFY_SPACE_AROUND = YGJustify.SpaceAround;\r\nexport const JUSTIFY_SPACE_EVENLY = YGJustify.SpaceEvenly;\r\nexport const LOGLEVEL_ERROR = YGLogLevel.Error;\r\nexport const LOGLEVEL_WARN = YGLogLevel.Warn;\r\nexport const LOGLEVEL_INFO = YGLogLevel.Info;\r\nexport const LOGLEVEL_DEBUG = YGLogLevel.Debug;\r\nexport const LOGLEVEL_VERBOSE = YGLogLevel.Verbose;\r\nexport const LOGLEVEL_FATAL = YGLogLevel.Fatal;\r\nexport const MEASURE_MODE_UNDEFINED = YGMeasureMode.Undefined;\r\nexport const MEASURE_MODE_EXACTLY = YGMeasureMode.Exactly;\r\nexport const MEASURE_MODE_AT_MOST = YGMeasureMode.AtMost;\r\nexport const NODE_TYPE_DEFAULT = YGNodeType.Default;\r\nexport const NODE_TYPE_TEXT = YGNodeType.Text;\r\nexport const OVERFLOW_VISIBLE = YGOverflow.Visible;\r\nexport const OVERFLOW_HIDDEN = YGOverflow.Hidden;\r\nexport const OVERFLOW_SCROLL = YGOverflow.Scroll;\r\nexport const POSITION_TYPE_RELATIVE = YGPositionType.Relative;\r\nexport const POSITION_TYPE_ABSOLUTE = YGPositionType.Absolute;\r\nexport const UNIT_UNDEFINED = YGUnit.Undefined;\r\nexport const UNIT_POINT = YGUnit.Point;\r\nexport const UNIT_PERCENT = YGUnit.Percent;\r\nexport const UNIT_AUTO = YGUnit.Auto;\r\nexport const WRAP_NO_WRAP = YGWrap.NoWrap;\r\nexport const WRAP_WRAP = YGWrap.Wrap;\r\nexport const WRAP_WRAP_REVERSE = YGWrap.WrapReverse;\r\nexport const UNDEFINED: number = undefined;\r\n\r\nexport class Layout {\r\n    public left: number;\r\n    public right: number;\r\n    public bottom: number;\r\n    public top: number;\r\n    public width: number;\r\n    public height: number;\r\n}\r\n\r\nexport class Size {\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(width?: number, height?: number) {\r\n        if (width) {\r\n            this.width = width;\r\n            this.height = height;\r\n        } else {\r\n            this.width = 0;\r\n            this.height = 0;\r\n        }\r\n    }\r\n\r\n    static fromJS(obj: {width: number, height: number}) {\r\n        return new Size(obj.width, obj.height);\r\n    }\r\n}\r\n\r\nexport class Value {\r\n    public unit: number;\r\n    public value: number;\r\n\r\n    constructor(unit?: number, value?: number) {\r\n        if (unit) {\r\n            this.unit = unit;\r\n            this.value = value;\r\n        } else {\r\n            this.unit = YGUnit.Undefined;\r\n            this.value = 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Config {\r\n    public config: YGConfig;\r\n\r\n    static create(): Config {\r\n        return new Config();\r\n    }\r\n\r\n    constructor() {\r\n        this.config = YGConfigNew()\r\n    }\r\n\r\n    free() {\r\n        YGConfigFree(this.config);\r\n    }\r\n\r\n    setExperimentalFeatureEnabled(feature: number, enabled: boolean): void {\r\n        YGConfigSetExperimentalFeatureEnabled(this.config, feature, enabled);\r\n    }\r\n\r\n    setPointScaleFactor(pixelsInPoint: number) {\r\n        YGConfigSetPointScaleFactor(this.config, pixelsInPoint);\r\n    }\r\n\r\n    isExperimentalFeatureEnabled(feature: number) {\r\n        YGConfigIsExperimentalFeatureEnabled(this.config, feature);\r\n    }\r\n}\r\n\r\nfunction fromYGNode(node: YGNode): Node {\r\n    return YGNodeGetContext(node) as Node\r\n}\r\n\r\nfunction fromYGValue(val: YGValue): Value {\r\n    return new Value(val.unit, val.value)\r\n}\r\n\r\nexport class Node {\r\n    public node: YGNode;\r\n\r\n    static create(config?: Config) {\r\n        if (config) {\r\n            return new Node(config);\r\n        }\r\n        else {\r\n            return new Node();\r\n        }\r\n    }\r\n\r\n    static createDefault() {\r\n        return new Node(undefined);\r\n    }\r\n\r\n    static createWithConfig(config: Config) {\r\n        return new Node(config)\r\n    }\r\n\r\n    constructor(config?: Config) {\r\n        if (!config) {\r\n            this.node = YGNodeNew()\r\n        } else {\r\n            this.node = YGNodeNewWithConfig(config.config)\r\n        }\r\n\r\n        YGNodeSetContext(this.node, this);\r\n    }\r\n\r\n    calculateLayout(width?: number, height?: number, direction?: YGDirection): void {\r\n        YGNodeCalculateLayout(this.node, width, height, direction);\r\n    }\r\n\r\n    copyStyle(node: YGNode): void {\r\n        YGNodeCopyStyle(this.node, node);\r\n    }\r\n\r\n    free(): void {\r\n        YGNodeFree(this.node);\r\n    }\r\n\r\n    freeRecursive(): void {\r\n        YGNodeFreeRecursive(this.node);\r\n    }\r\n\r\n    getAlignContent(): YGAlign {\r\n        return YGNodeStyleGetAlignContent(this.node);\r\n    }\r\n\r\n    getAlignItems(): YGAlign {\r\n        return YGNodeStyleGetAlignItems(this.node);\r\n    }\r\n\r\n    getAlignSelf(): YGAlign {\r\n        return YGNodeStyleGetAlignSelf(this.node);\r\n    }\r\n\r\n    getAspectRatio(): number {\r\n        return YGNodeStyleGetAspectRatio(this.node);\r\n    }\r\n\r\n    getBorder(edge: YGEdge): number {\r\n        return YGNodeStyleGetBorder(this.node, edge);\r\n    }\r\n\r\n    getChild(index: number): Node {\r\n        return fromYGNode(YGNodeGetChild(this.node, index));\r\n    }\r\n\r\n    getChildCount(): number {\r\n        return YGNodeGetChildCount(this.node);\r\n    }\r\n\r\n    getComputedBorder(edge: YGEdge): number {\r\n        return YGNodeLayoutGetBorder(this.node, edge);\r\n    }\r\n\r\n    getComputedBottom(): number {\r\n        return YGNodeLayoutGetBottom(this.node);\r\n    }\r\n\r\n    getComputedHeight(): number {\r\n        return YGFloatSanitize(YGNodeLayoutGetHeight(this.node));\r\n    }\r\n\r\n    getComputedLayout(): Layout {\r\n        const layout: Layout = new Layout();\r\n        layout.left = YGNodeLayoutGetLeft(this.node);\r\n        layout.right = YGNodeLayoutGetRight(this.node);\r\n        layout.top = YGNodeLayoutGetTop(this.node);\r\n        layout.bottom = YGNodeLayoutGetBottom(this.node);\r\n        layout.width = YGNodeLayoutGetWidth(this.node);\r\n        layout.height = YGNodeLayoutGetHeight(this.node);\r\n        return layout;\r\n    }\r\n\r\n    getComputedLeft(): number {\r\n        return YGFloatSanitize(YGNodeLayoutGetLeft(this.node));\r\n    }\r\n\r\n    getComputedMargin(edge: YGEdge): number {\r\n        return YGFloatSanitize(YGNodeLayoutGetMargin(this.node, edge));\r\n    }\r\n\r\n    getComputedPadding(edge: YGEdge): number {\r\n        return YGFloatSanitize(YGNodeLayoutGetPadding(this.node, edge));\r\n    }\r\n\r\n    getComputedRight(): number {\r\n        return YGFloatSanitize(YGNodeLayoutGetRight(this.node));\r\n    }\r\n\r\n    getComputedTop(): number {\r\n        return YGFloatSanitize(YGNodeLayoutGetTop(this.node));\r\n    }\r\n\r\n    getComputedWidth(): number {\r\n        return YGFloatSanitize(YGNodeLayoutGetWidth(this.node));\r\n    }\r\n\r\n    getDisplay(): YGDisplay {\r\n        return YGNodeStyleGetDisplay(this.node);\r\n    }\r\n\r\n    getFlexBasis(): Value {\r\n        return fromYGValue(YGNodeStyleGetFlexBasis(this.node));\r\n    }\r\n\r\n    getFlexDirection(): YGFlexDirection {\r\n        return YGNodeStyleGetFlexDirection(this.node);\r\n    }\r\n\r\n    getFlexGrow(): number {\r\n        return YGNodeStyleGetFlexGrow(this.node);\r\n    }\r\n\r\n    getFlexShrink(): number {\r\n        return YGNodeStyleGetFlexShrink(this.node);\r\n    }\r\n\r\n    getFlexWrap(): YGWrap {\r\n        return YGNodeStyleGetFlexWrap(this.node);\r\n    }\r\n\r\n    getHeight(): Value {\r\n        return fromYGValue(YGNodeStyleGetHeight(this.node));\r\n    }\r\n\r\n    getJustifyContent(): YGJustify {\r\n        return YGNodeStyleGetJustifyContent(this.node);\r\n    }\r\n\r\n    getMargin(edge: YGEdge): Value {\r\n        return fromYGValue(YGNodeStyleGetMargin(this.node, edge));\r\n    }\r\n\r\n    getMaxHeight(): Value {\r\n        return fromYGValue(YGNodeStyleGetMaxHeight(this.node));\r\n    }\r\n\r\n    getMaxWidth(): Value {\r\n        return fromYGValue(YGNodeStyleGetMaxWidth(this.node));\r\n    }\r\n\r\n    getMinHeight(): Value {\r\n        return fromYGValue(YGNodeStyleGetMinHeight(this.node));\r\n    }\r\n\r\n    getMinWidth(): Value {\r\n        return fromYGValue(YGNodeStyleGetMinWidth(this.node));\r\n    }\r\n\r\n    getOverflow(): YGOverflow {\r\n        return YGNodeStyleGetOverflow(this.node);\r\n    }\r\n\r\n    getPadding(edge: YGEdge): Value {\r\n        return fromYGValue(YGNodeStyleGetPadding(this.node, edge));\r\n    }\r\n\r\n    getParent(): Node {\r\n        const parent: YGNode = YGNodeGetParent(this.node);\r\n        if (!parent) {\r\n            return undefined;\r\n        }\r\n\r\n        return fromYGNode(parent)\r\n    }\r\n\r\n    getPosition(edge: YGEdge): Value {\r\n        return fromYGValue(YGNodeStyleGetPosition(this.node, edge));\r\n    }\r\n\r\n    getPositionType(): YGPositionType {\r\n        return YGNodeStyleGetPositionType(this.node);\r\n    }\r\n\r\n    getWidth(): Value {\r\n        return fromYGValue(YGNodeStyleGetWidth(this.node));\r\n    }\r\n\r\n    insertChild(child: Node, index: number): void {\r\n        YGNodeInsertChild(this.node, child.node, index);\r\n    }\r\n\r\n    isDirty(): boolean {\r\n        return YGNodeIsDirty(this.node);\r\n    }\r\n\r\n    markDirty(): void {\r\n        YGNodeMarkDirty(this.node);\r\n    }\r\n\r\n    removeChild(child: Node): void {\r\n        YGNodeRemoveChild(this.node, child.node);\r\n    }\r\n\r\n    reset(): void {\r\n        // m_measureFunc.reset(nullptr);\r\n        YGNodeReset(this.node);\r\n    }\r\n\r\n    setAlignContent(alignContent: YGAlign): void {\r\n        YGNodeStyleSetAlignContent(this.node, alignContent);\r\n    }\r\n\r\n    setAlignItems(alignItems: YGAlign): void {\r\n        YGNodeStyleSetAlignItems(this.node, alignItems);\r\n    }\r\n\r\n    setAlignSelf(alignSelf: YGAlign): void {\r\n        YGNodeStyleSetAlignSelf(this.node, alignSelf);\r\n    }\r\n\r\n    setAspectRatio(aspectRatio: number): void {\r\n        YGNodeStyleSetAspectRatio(this.node, aspectRatio);\r\n    }\r\n\r\n    setBorder(edge: YGEdge, borderWidth: number): void {\r\n        YGNodeStyleSetBorder(this.node, edge, borderWidth);\r\n    }\r\n\r\n    setDisplay(display: YGDisplay): void {\r\n        YGNodeStyleSetDisplay(this.node, display);\r\n    }\r\n\r\n    setFlex(flex: number): void {\r\n        YGNodeStyleSetFlex(this.node, flex);\r\n    }\r\n\r\n    setFlexBasis(flexBasis: number | string): void {\r\n        if (typeof flexBasis === 'string') {\r\n            if (flexBasis === 'auto') {\r\n                this.setFlexBasisAuto ();\r\n            } else if (flexBasis[flexBasis.length - 1] === '%') {\r\n                this.setFlexBasisPercent(parseFloat(flexBasis));\r\n            } else {\r\n                // modified: no throw\r\n                // removed -- throw new Error('Invalid input type');\r\n                return;\r\n            }\r\n        } else if (typeof flexBasis === 'number') {\r\n            YGNodeStyleSetFlexBasis(this.node, flexBasis);\r\n        }\r\n    }\r\n\r\n    setFlexBasisAuto (): void {\r\n        YGNodeStyleSetFlexBasisAuto(this.node);\r\n    }\r\n\r\n    setFlexBasisPercent(flexBasis: number): void {\r\n        YGNodeStyleSetFlexBasisPercent(this.node, flexBasis);\r\n    }\r\n\r\n    setFlexDirection(flexDirection: YGFlexDirection): void {\r\n        YGNodeStyleSetFlexDirection(this.node, flexDirection);\r\n    }\r\n\r\n    setFlexGrow(flexGrow: number): void {\r\n        YGNodeStyleSetFlexGrow(this.node, flexGrow);\r\n    }\r\n\r\n    setFlexShrink(flexShrink: number): void {\r\n        YGNodeStyleSetFlexShrink(this.node, flexShrink);\r\n    }\r\n\r\n    setFlexWrap(flexWrap: YGWrap): void {\r\n        YGNodeStyleSetFlexWrap(this.node, flexWrap);\r\n    }\r\n\r\n    setHeight(height: number | string): void {\r\n        if (typeof height === 'string') {\r\n            if (height === 'auto') {\r\n                this.setHeightAuto();\r\n            }\r\n            else if (height[height.length - 1] === '%') {\r\n                this.setHeightPercent(parseFloat(height));\r\n            } else {\r\n                throw new Error('Invalid input type.');\r\n            }\r\n        } else {\r\n            YGNodeStyleSetHeight(this.node, height as number);\r\n        }\r\n    }\r\n\r\n    setHeightAuto(): void {\r\n        YGNodeStyleSetHeightAuto(this.node);\r\n    }\r\n\r\n    setHeightPercent(height: number): void {\r\n        YGNodeStyleSetHeightPercent(this.node, height);\r\n    }\r\n\r\n    setJustifyContent(justifyContent: YGJustify): void {\r\n        YGNodeStyleSetJustifyContent(this.node, justifyContent);\r\n    }\r\n\r\n    setMargin(edge: YGEdge, margin: number | string): void {\r\n        if (typeof margin === 'string') {\r\n            if (margin === 'auto') {\r\n                this.setMarginAuto(edge);\r\n            }\r\n            else if (margin[margin.length - 1] === '%') {\r\n                this.setMarginPercent(edge, parseFloat(margin));\r\n            } else {\r\n                throw new Error('Invalid input type.');\r\n            }\r\n        } else {\r\n            YGNodeStyleSetMargin(this.node, edge, margin);\r\n        }\r\n    }\r\n\r\n    setMarginAuto(edge: YGEdge): void {\r\n        YGNodeStyleSetMarginAuto(this.node, edge);\r\n    }\r\n\r\n    setMarginPercent(edge: YGEdge, margin: number): void {\r\n        YGNodeStyleSetMarginPercent(this.node, edge, margin);\r\n    }\r\n\r\n    setMaxHeight(maxHeight: number | string): void {\r\n        if (typeof maxHeight === 'string') {\r\n            if (maxHeight[maxHeight.length - 1] === '%') {\r\n                this.setMaxHeightPercent(parseFloat(maxHeight))\r\n            } else {\r\n                throw new Error('Invalid input type.');\r\n            }\r\n        } else {\r\n            YGNodeStyleSetMaxHeight(this.node, maxHeight as number);\r\n        }\r\n    }\r\n\r\n    setMaxHeightPercent(maxHeight: number): void {\r\n        YGNodeStyleSetMaxHeightPercent(this.node, maxHeight);\r\n    }\r\n\r\n    setMaxWidth(maxWidth: number | string): void {\r\n        if (typeof maxWidth === 'string') {\r\n            if (maxWidth[maxWidth.length - 1] === '%') {\r\n                this.setMaxWidthPercent(parseFloat(maxWidth))\r\n            } else {\r\n                throw new Error('Invalid input type.');\r\n            }\r\n        } else {\r\n            YGNodeStyleSetMaxWidth(this.node, maxWidth as number);\r\n        }\r\n    }\r\n\r\n    setMaxWidthPercent(maxWidth: number): void {\r\n        YGNodeStyleSetMaxWidthPercent(this.node, maxWidth);\r\n    }\r\n\r\n    setMeasureFunc(measureFunc: any): void {\r\n        if (measureFunc == null) {\r\n            this.unsetMeasureFunc();\r\n        } else {\r\n            YGNodeSetMeasureFunc(this.node, measureFunc);\r\n        }\r\n    }\r\n\r\n    unsetMeasureFunc() {\r\n        YGNodeSetMeasureFunc(this.node, null);\r\n    }\r\n\r\n    setMinHeight(minHeight: number | string): void {\r\n        if (typeof minHeight === 'string') {\r\n            if (minHeight[minHeight.length - 1] === '%') {\r\n                this.setMinHeightPercent(parseFloat(minHeight))\r\n            } else {\r\n                throw new Error('Invalid input type.');\r\n            }\r\n        } else {\r\n            YGNodeStyleSetMinHeight(this.node, minHeight as number);\r\n        }\r\n    }\r\n\r\n    setMinHeightPercent(minHeight: number): void {\r\n        YGNodeStyleSetMinHeightPercent(this.node, minHeight);\r\n    }\r\n\r\n    setMinWidth(minWidth: number | string): void {\r\n        if (typeof minWidth === 'string') {\r\n            if (minWidth[minWidth.length - 1] === '%') {\r\n                this.setMinWidthPercent(parseFloat(minWidth))\r\n            } else {\r\n                throw new Error('Invalid input type.');\r\n            }\r\n        } else {\r\n            YGNodeStyleSetMinWidth(this.node, minWidth as number);\r\n        }\r\n    }\r\n\r\n    setMinWidthPercent(minWidth: number): void {\r\n        YGNodeStyleSetMinWidthPercent(this.node, minWidth);\r\n    }\r\n\r\n    setOverflow(overflow: YGOverflow): void {\r\n        YGNodeStyleSetOverflow(this.node, overflow);\r\n    }\r\n\r\n    setPadding(edge: YGEdge, padding: number | string): void {\r\n        if (typeof padding === 'string') {\r\n            if (padding[padding.length - 1] === '%') {\r\n                this.setPaddingPercent(edge, parseFloat(padding))\r\n            } else {\r\n                throw new Error('Invalid input type.');\r\n            }\r\n        } else {\r\n            YGNodeStyleSetPadding(this.node, edge, padding as number);\r\n        }\r\n    }\r\n\r\n    setPaddingPercent(edge: YGEdge, padding: number): void {\r\n        YGNodeStyleSetPaddingPercent(this.node, edge, padding);\r\n    }\r\n\r\n    setPosition(edge: YGEdge, position: number | string): void {\r\n        if (typeof position === 'string') {\r\n            if (position[position.length - 1] === '%') {\r\n                this.setPositionPercent(edge, parseFloat(position))\r\n            } else {\r\n                throw new Error('Invalid input type.');\r\n            }\r\n        } else {\r\n            YGNodeStyleSetPosition(this.node, edge, position as number);\r\n        }\r\n    }\r\n\r\n    setPositionPercent(edge: YGEdge, position: number): void {\r\n        YGNodeStyleSetPositionPercent(this.node, edge, position);\r\n    }\r\n\r\n    setPositionType(positionType: YGPositionType): void {\r\n        YGNodeStyleSetPositionType(this.node, positionType);\r\n    }\r\n\r\n    setWidth(width: number | string): void {\r\n        if (typeof width === 'string') {\r\n            if (width[width.length - 1] === '%') {\r\n                this.setWidthPercent(parseFloat(width));\r\n            } else if (width === 'auto') {\r\n                this.setWidthAuto();\r\n            } else {\r\n                throw new Error('Invalid input type.');\r\n            }\r\n        } else {\r\n            YGNodeStyleSetWidth(this.node, width as number);\r\n        }\r\n    }\r\n\r\n    setWidthAuto(): void {\r\n        YGNodeStyleSetWidthAuto(this.node);\r\n    }\r\n\r\n    setWidthPercent(width: number): void {\r\n        YGNodeStyleSetWidthPercent(this.node, width);\r\n    }\r\n\r\n    unsetMeasureFun(): void {\r\n        YGNodeSetMeasureFunc(this.node, undefined);\r\n    }\r\n}\r\n\r\n\r\nexport function getInstanceCount(): number {\r\n    return YGNodeGetInstanceCount()\r\n}\r\n","export const YGAlignCount = 8;\r\n\r\nexport enum YGAlign {\r\n    Auto,\r\n    FlexStart,\r\n    Center,\r\n    FlexEnd,\r\n    Stretch,\r\n    Baseline,\r\n    SpaceBetween,\r\n    SpaceAround\r\n}\r\n\r\nexport function YGAlignToString(value : YGAlign): string {\r\n    switch(value) {\r\n        case YGAlign.Auto:\r\n            return \"auto\";\r\n        case YGAlign.FlexStart:\r\n            return \"flex-start\";\r\n        case YGAlign.Center:\r\n            return \"center\";\r\n        case YGAlign.FlexEnd:\r\n            return \"flex-end\";\r\n        case YGAlign.Stretch:\r\n            return \"stretch\";\r\n        case YGAlign.Baseline:\r\n            return \"baseline\";\r\n        case YGAlign.SpaceBetween:\r\n            return \"space-between\";\r\n        case YGAlign.SpaceAround:\r\n            return \"space-around\";\r\n    }\r\n    \r\n    return \"unknown\";\r\n}\r\n\r\nexport const YGDimensionCount = 2;\r\n\r\nexport enum YGDimension {\r\n    Width,\r\n    Height\r\n}\r\n\r\nexport function YGDimensionToString(value : YGDimension) : string {\r\n    switch(value) {\r\n        case YGDimension.Width:\r\n            return \"width\";\r\n        case YGDimension.Height:\r\n            return \"height\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nexport enum YGDirection {\r\n    Inherit,\r\n    LTR,\r\n    RTL\r\n}\r\n\r\nexport function YGDirectionToString(value : YGDirection) : string {\r\n    switch(value) {\r\n        case YGDirection.Inherit:\r\n            return \"inherit\";\r\n        case YGDirection.LTR:\r\n            return \"ltr\";\r\n        case YGDirection.RTL:\r\n            return \"rtl\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nexport const YGDisplayCount = 2;\r\n\r\nexport enum YGDisplay {\r\n    Flex,\r\n    None\r\n}\r\n\r\nexport function YGDisplayToString(value : YGDisplay) : string {\r\n    switch(value) {\r\n        case YGDisplay.Flex:\r\n            return \"flex\";\r\n        case YGDisplay.None:\r\n            return \"none\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\n\r\nexport const YGEdgeCount = 9;\r\n\r\nexport enum YGEdge {\r\n    Left,\r\n    Top,\r\n    Right,\r\n    Bottom,\r\n    Start,\r\n    End,\r\n    Horizontal,\r\n    Vertical,\r\n    All\r\n}\r\n\r\nexport function YGEdgeToString(value : YGEdge) : string {\r\n    switch(value) {\r\n        case YGEdge.Left:\r\n            return \"left\";\r\n        case YGEdge.Top:\r\n            return \"top\";\r\n        case YGEdge.Right:\r\n            return \"right\";\r\n        case YGEdge.Bottom:\r\n            return \"bottom\";\r\n        case YGEdge.Start:\r\n            return \"start\";\r\n        case YGEdge.End:\r\n            return \"end\";\r\n        case YGEdge.Horizontal:\r\n            return \"horizontal\";\r\n        case YGEdge.Vertical:\r\n            return \"vertical\";\r\n        case YGEdge.All:\r\n            return \"all\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nexport const YGExperimentalFeatureCount = 1;\r\n\r\nexport enum YGExperimentalFeature {\r\n    WebFlexBasis\r\n}\r\n\r\nexport function YGExperimentalFeatureToString(value : YGExperimentalFeature) : string {\r\n    switch(value) {\r\n        case YGExperimentalFeature.WebFlexBasis:\r\n            return \"web-flex-basis\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nexport const YGFlexDirectionCount = 4;\r\n\r\nexport enum YGFlexDirection {\r\n    Column,\r\n    ColumnReverse,\r\n    Row,\r\n    RowReverse\r\n}\r\n\r\nexport function YGFlexDirectionToString(value : YGFlexDirection) : string {\r\n    switch(value) {\r\n        case YGFlexDirection.Column:\r\n            return \"column\";\r\n        case YGFlexDirection.ColumnReverse:\r\n            return \"column-reverse\";\r\n        case YGFlexDirection.Row:\r\n            return \"row\";\r\n        case YGFlexDirection.RowReverse:\r\n            return \"row-reverse\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nexport const YGJustifyCount = 6;\r\n\r\nexport enum YGJustify {\r\n    FlexStart,\r\n    Center,\r\n    FlexEnd,\r\n    SpaceBetween,\r\n    SpaceAround,\r\n    SpaceEvenly\r\n}\r\n\r\nexport function YGJustifyToString(value : YGJustify) : string {\r\n    switch(value) {\r\n        case YGJustify.FlexStart:\r\n            return \"flex-start\";\r\n        case YGJustify.Center:\r\n            return \"center\";\r\n        case YGJustify.FlexEnd:\r\n            return \"flex-end\";\r\n        case YGJustify.SpaceBetween:\r\n            return \"space-between\";\r\n        case YGJustify.SpaceAround:\r\n            return \"space-around\";\r\n        case YGJustify.SpaceEvenly:\r\n            return \"space-evenly\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nexport const YGLogLevelCount = 6;\r\n\r\nexport enum YGLogLevel {\r\n    Error,\r\n    Warn,\r\n    Info,\r\n    Debug,\r\n    Verbose,\r\n    Fatal\r\n}\r\n\r\nexport function YGLogLevelToString(value : YGLogLevel) : string {\r\n    switch(value) {\r\n        case YGLogLevel.Error:\r\n            return \"error\";\r\n        case YGLogLevel.Warn:\r\n            return \"warn\";\r\n        case YGLogLevel.Info:\r\n            return \"info\";\r\n        case YGLogLevel.Debug:\r\n            return \"debug\";\r\n        case YGLogLevel.Verbose:\r\n            return \"verbose\";\r\n        case YGLogLevel.Fatal:\r\n            return \"fatal\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nexport const YGMeasureModeCount = 3;\r\n\r\nexport enum YGMeasureMode {\r\n    Undefined,\r\n    Exactly,\r\n    AtMost\r\n}\r\n\r\nexport function YGMeasureModeToString(value : YGMeasureMode) : string {\r\n    switch(value) {\r\n        case YGMeasureMode.Undefined:\r\n            return \"undefined\";\r\n        case YGMeasureMode.Exactly:\r\n            return \"exactly\";\r\n        case YGMeasureMode.AtMost:\r\n            return \"at-most\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nexport const YGNodeTypeCount = 2;\r\n\r\nexport enum YGNodeType {\r\n    Default,\r\n    Text\r\n}\r\n\r\nexport function YGNodeTypeToString(value : YGNodeType) : string {\r\n    switch(value) {\r\n        case YGNodeType.Default:\r\n            return \"default\";\r\n        case YGNodeType.Text:\r\n            return \"text\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nexport const YGOverflowCount = 3;\r\n\r\nexport enum YGOverflow {\r\n    Visible,\r\n    Hidden,\r\n    Scroll\r\n}\r\n\r\nexport function YGOverflowToString(value : YGOverflow) : string {\r\n    switch(value) {\r\n        case YGOverflow.Visible:\r\n            return \"visible\";\r\n        case YGOverflow.Hidden:\r\n            return \"hidden\";\r\n        case YGOverflow.Scroll:\r\n            return \"scroll\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nexport const YGPositionTypeCount = 2;\r\n\r\nexport enum YGPositionType {\r\n    Relative,\r\n    Absolute\r\n}\r\n\r\nexport function YGPositionTypeToString(value : YGPositionType) : string {\r\n    switch(value) {\r\n        case YGPositionType.Relative:\r\n            return \"relative\";\r\n        case YGPositionType.Absolute:\r\n            return \"absolute\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nexport const YGPrintOptionsCount = 3;\r\n\r\nexport enum YGPrintOptions {\r\n    Layout = 1,\r\n    Style = 2,\r\n    Children = 4\r\n}\r\n\r\nexport function YGPrintOptionsToString(value : YGPrintOptions) : string {\r\n    switch(value) {\r\n        case YGPrintOptions.Layout:\r\n            return \"layout\";\r\n        case YGPrintOptions.Style:\r\n            return \"style\";\r\n        case YGPrintOptions.Children:\r\n            return \"children\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nexport const YGUnitCount = 4;\r\n\r\nexport enum YGUnit {\r\n    Undefined,\r\n    Point,\r\n    Percent,\r\n    Auto\r\n}\r\n\r\nexport function YGUnitToString(value : YGUnit) : string {\r\n    switch(value) {\r\n        case YGUnit.Undefined:\r\n            return \"undefined\";\r\n        case YGUnit.Point:\r\n            return \"point\";\r\n        case YGUnit.Percent:\r\n            return \"percent\";\r\n        case YGUnit.Auto:\r\n            return \"auto\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nexport const YGWrapCount = 3;\r\n\r\nexport enum YGWrap {\r\n    NoWrap,\r\n    Wrap,\r\n    WrapReverse\r\n}\r\n\r\nexport function YGWrapToString(value : YGWrap) : string {\r\n    switch(value) {\r\n        case YGWrap.NoWrap:\r\n            return \"no-wrap\";\r\n        case YGWrap.Wrap:\r\n            return \"wrap\";\r\n        case YGWrap.WrapReverse:\r\n            return \"wrap-reverse\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}","import {\r\n    YGMeasureMode,\r\n    YGEdge,\r\n    YGUnit,\r\n    YGLogLevel,\r\n    YGDimension\r\n} from \"./enums\";\r\n\r\nimport { YGNode } from \"./ygnode\";\r\n\r\nimport {\r\n    YGFloatIsUndefined,\r\n} from \"./yoga\";\r\n\r\nexport class YGCachedMeasurement {\r\n    public availableWidth: number;\r\n    public availableHeight: number;\r\n    public widthMeasureMode: YGMeasureMode;\r\n    public heightMeasureMode: YGMeasureMode;\r\n    public computedWidth: number;\r\n    public computedHeight: number;\r\n\r\n    constructor() {\r\n        this.availableWidth = 0;\r\n        this.availableHeight = 0;\r\n        this.widthMeasureMode = YGMeasureMode.AtMost;\r\n        this.heightMeasureMode = YGMeasureMode.AtMost;\r\n        this.computedWidth = -1;\r\n        this.computedHeight = -1;\r\n    }\r\n\r\n    isEqual(measurement: YGCachedMeasurement) {\r\n        let isEqual = this.widthMeasureMode == measurement.widthMeasureMode && this.heightMeasureMode == measurement.heightMeasureMode;\r\n\r\n        if (!YGFloatIsUndefined(this.availableWidth) || !YGFloatIsUndefined(measurement.availableWidth)) {\r\n            isEqual = isEqual && this.availableWidth == measurement.availableWidth;\r\n        }\r\n\r\n        if (!YGFloatIsUndefined(this.availableHeight) || !YGFloatIsUndefined(measurement.availableHeight)) {\r\n            isEqual = isEqual && this.availableHeight == measurement.availableHeight;\r\n        }\r\n\r\n        if (!YGFloatIsUndefined(this.computedWidth) || !YGFloatIsUndefined(measurement.computedWidth)) {\r\n            isEqual = isEqual && this.computedWidth == measurement.computedWidth;\r\n        }\r\n\r\n        if (!YGFloatIsUndefined(this.computedHeight) || !YGFloatIsUndefined(measurement.computedHeight)) {\r\n            isEqual = isEqual && this.computedHeight == measurement.computedHeight;\r\n        }\r\n\r\n        return isEqual;\r\n    }\r\n\r\n    clone(): YGCachedMeasurement {\r\n        let newCached = new YGCachedMeasurement();\r\n        newCached.availableWidth = this.availableWidth;\r\n        newCached.availableHeight = this.availableHeight;\r\n        newCached.widthMeasureMode = this.widthMeasureMode;\r\n        newCached.heightMeasureMode = this.heightMeasureMode;\r\n        newCached.computedWidth = this.computedWidth;\r\n        newCached.computedHeight = this.computedHeight;\r\n        return newCached;\r\n    }\r\n}\r\n\r\nexport const leading: [YGEdge, YGEdge, YGEdge, YGEdge] = [YGEdge.Top, YGEdge.Bottom, YGEdge.Left, YGEdge.Right];\r\nexport const trailing: [YGEdge, YGEdge, YGEdge, YGEdge] = [YGEdge.Bottom, YGEdge.Top, YGEdge.Right, YGEdge.Left];\r\nexport const pos: [YGEdge, YGEdge, YGEdge, YGEdge] = [YGEdge.Top, YGEdge.Bottom, YGEdge.Left, YGEdge.Right];\r\nexport const dim: [YGDimension, YGDimension, YGDimension, YGDimension] = [YGDimension.Height, YGDimension.Height, YGDimension.Width, YGDimension.Width];\r\n\r\nexport const YG_MAX_CACHED_RESULT_COUNT: number = 16;\r\nexport const kDefaultFlexGrow: number = 0.0;\r\nexport const kDefaultFlexShrink: number = 0.0;\r\nexport const kWebDefaultFlexShrink: number = 1.0;\r\n","import {\r\n    YGUnit,\r\n    YGFlexDirection,\r\n    YGDirection\r\n} from './enums';\r\n\r\nimport { YGFloatOptional } from './ygfloatoptional';\r\n\r\nimport {\r\n    YGFloatIsUndefined,\r\n    YGUndefined\r\n} from \"./yoga\";\r\n\r\nimport { YGNode } from \"./ygnode\";\r\nimport { YGValue } from \"./ygvalue\";\r\n\r\nexport class YGCollectFlexItemsRowValues {\r\n    public itemsOnLine: number = 0;\r\n    public sizeConsumedOnCurrentLine: number = 0;\r\n    public totalFlexGrowFactors: number = 0;\r\n    public totalFlexShrinkScaledFactors: number = 0;\r\n    public endOfLineIndex: number = 0;\r\n    public relativeChildren: Array<YGNode> = [];\r\n    public remainingFreeSpace: number = 0;\r\n    public mainDim: number = 0;\r\n    public crossDim: number = 0;\r\n}\r\n\r\nexport function YGValueEqual(a: YGValue, b: YGValue): boolean {\r\n    if (a.unit != b.unit) {\r\n        return false;\r\n    }\r\n\r\n    if (a.unit == YGUnit.Undefined || (YGFloatIsUndefined(a.value) && YGFloatIsUndefined(b.value))) {\r\n        return true;\r\n    }\r\n\r\n    return Math.abs(a.value - b.value) < 0.0001;\r\n}\r\n\r\nexport function YGFloatsEqual(a: number, b: number): boolean {\r\n    if (!YGFloatIsUndefined(a) && !YGFloatIsUndefined(b)) {\r\n        return Math.abs(a - b) < 0.0001;\r\n    }\r\n    return YGFloatIsUndefined(a) && YGFloatIsUndefined(b);\r\n}\r\n\r\nexport function YGFloatMax(a: number, b: number): number {\r\n    if (!YGFloatIsUndefined(a) && !YGFloatIsUndefined(b)) {\r\n        return Math.max(a, b);\r\n    }\r\n    return YGFloatIsUndefined(a) ? b : a;\r\n}\r\n\r\nexport function YGFloatOptionalMax(op1: YGFloatOptional, op2: YGFloatOptional): YGFloatOptional {\r\n    if (!op1.isUndefined() && !op2.isUndefined()) {\r\n        return op1.getValue() > op2.getValue() ? op1 : op2;\r\n    }\r\n\r\n    return op1.isUndefined() ? op2 : op1;\r\n}\r\n\r\nexport function YGFloatMin(a: number, b: number): number {\r\n    if (!YGFloatIsUndefined(a) && !YGFloatIsUndefined(b)) {\r\n        return Math.min(a, b);\r\n    }\r\n    return YGFloatIsUndefined(a) ? b : a;\r\n}\r\n\r\nexport function YGFloatArrayEqual(val1: Array<number>, val2: Array<number>) {\r\n    let areEqual: boolean = true;\r\n    for (let i = 0; i < val1.length && areEqual; ++i) {\r\n        areEqual = YGFloatsEqual(val1[i], val2[i]);\r\n    }\r\n    return areEqual;\r\n}\r\n\r\nexport function YGValueArrayEqual(val1: Array<YGValue>, val2: Array<YGValue>) {\r\n    let areEqual: boolean = true;\r\n    for (let i = 0; i < val1.length && areEqual; ++i) {\r\n        areEqual = YGValueEqual(val1[i], val2[i]);\r\n    }\r\n    return areEqual;\r\n}\r\n\r\nexport function YGFloatSanitize(val: number): number {\r\n    return YGFloatIsUndefined(val) ? 0 : val;\r\n}\r\n\r\nexport function YGUnwrapFloatOptional(op: YGFloatOptional): number {\r\n    return op.isUndefined() ? YGUndefined : op.getValue();\r\n}\r\n\r\nexport function YGFlexDirectionCross(flexDirection: YGFlexDirection, direction: YGDirection): YGFlexDirection {\r\n    return YGFlexDirectionIsColumn(flexDirection) ? YGResolveFlexDirection(YGFlexDirection.Row, direction) : YGFlexDirection.Column;\r\n}\r\n\r\nexport function YGFlexDirectionIsRow(flexDirection: YGFlexDirection): boolean {\r\n    return flexDirection == YGFlexDirection.Row || flexDirection == YGFlexDirection.RowReverse;\r\n}\r\n\r\nexport function YGResolveValue(value: YGValue, ownerSize: number): YGFloatOptional {\r\n    switch (value.unit) {\r\n        case YGUnit.Undefined:\r\n        case YGUnit.Auto:\r\n            return new YGFloatOptional();\r\n        case YGUnit.Point:\r\n            return new YGFloatOptional(value.value);\r\n        case YGUnit.Percent:\r\n            return new YGFloatOptional(value.value * ownerSize * 0.01);\r\n    }\r\n    return new YGFloatOptional();\r\n}\r\n\r\nexport function YGFlexDirectionIsColumn(flexDirection: YGFlexDirection): boolean {\r\n    return flexDirection == YGFlexDirection.Column || flexDirection == YGFlexDirection.ColumnReverse;\r\n}\r\n\r\nexport function YGResolveFlexDirection(flexDirection: YGFlexDirection, direction: YGDirection): YGFlexDirection {\r\n    if (direction == YGDirection.RTL) {\r\n        if (flexDirection == YGFlexDirection.Row) {\r\n            return YGFlexDirection.RowReverse;\r\n        } else if (flexDirection == YGFlexDirection.RowReverse) {\r\n            return YGFlexDirection.Row;\r\n        }\r\n    }\r\n    return flexDirection;\r\n}\r\n\r\nexport function YGResolveValueMargin(value: YGValue, ownerSize: number): YGFloatOptional {\r\n    return value.unit == YGUnit.Auto ? new YGFloatOptional(0) : YGResolveValue(value, ownerSize);\r\n}\r\n\r\nexport function cloneYGValueArray(array: Array<YGValue>): Array<YGValue> {\r\n    let ret = new Array(array.length);\r\n    for (let i = 0; i < array.length; i++) {\r\n        ret[i] = array[i].clone();\r\n    }\r\n    return ret;\r\n}","import {\r\n    YGLogger,\r\n    YGCloneNodeFunc\r\n} from \"./yoga\";\r\n\r\nconst kYGDefaultExperimentalFeatures: () => Array<boolean> = () => [false, false, false];\r\n\r\nclass YGConfig {\r\n    public experimentalFeatures: Array<boolean>;\r\n    public useWebDefaults: boolean;\r\n    public useLegacyStretchBehaviour: boolean;\r\n    public shouldDiffLayoutWithoutLegacyStretchBehaviour: boolean;\r\n    public pointScaleFactor: number;\r\n    public logger: YGLogger;\r\n    public cloneNodeCallback: YGCloneNodeFunc = null;\r\n    public context: any;\r\n\r\n    constructor(logger: YGLogger) {\r\n        this.experimentalFeatures = kYGDefaultExperimentalFeatures();\r\n        this.useWebDefaults = false;\r\n        this.useLegacyStretchBehaviour = false;\r\n        this.shouldDiffLayoutWithoutLegacyStretchBehaviour = false;\r\n        this.pointScaleFactor = 1.0;\r\n        this.logger = logger;\r\n        this.context = null;\r\n    }\r\n}\r\n\r\nexport {\r\n    YGConfig\r\n};","import {\r\n    YGFloatIsUndefined\r\n} from \"./yoga\";\r\n\r\nclass YGFloatOptional {\r\n    private value_: number;\r\n    private isUndefined_: boolean;\r\n    \r\n    constructor(value: number|YGFloatOptional = undefined) {\r\n        if (value instanceof YGFloatOptional) {\r\n            this.value_ = value.getValue();\r\n            this.isUndefined_ = value.isUndefined();\r\n            return;\r\n        }\r\n\r\n        if (YGFloatIsUndefined(value)) {\r\n            this.value_ = 0;\r\n            this.isUndefined_ = true;\r\n        } else {\r\n            this.value_ = value;\r\n            this.isUndefined_ = false;\r\n        }\r\n    }\r\n\r\n    clone(): YGFloatOptional {\r\n        return new YGFloatOptional(this.isUndefined_ ? undefined : this.value_)\r\n    }\r\n\r\n    getValue(): number {\r\n        if (this.isUndefined_) {\r\n            throw \"Tried to get value of an undefined YGFloatOptional\";\r\n        }\r\n\r\n        return this.value_;\r\n    }\r\n\r\n    setValue(value: number) {\r\n        this.value_ = value;\r\n        this.isUndefined_ = false;\r\n    }\r\n\r\n    isUndefined(): boolean {\r\n        return this.isUndefined_;\r\n    }\r\n\r\n    add(op: YGFloatOptional): YGFloatOptional {\r\n        if (!this.isUndefined_ && !op.isUndefined()) {\r\n            return new YGFloatOptional(this.value_ + op.getValue());\r\n        }\r\n        return new YGFloatOptional();\r\n    }\r\n\r\n    isBigger(op: YGFloatOptional): boolean {\r\n        if (this.isUndefined_ || op.isUndefined()) {\r\n            return false;\r\n        }\r\n\r\n        return this.value_ > op.getValue();\r\n    }\r\n\r\n    isSmaller(op: YGFloatOptional): boolean {\r\n        if (this.isUndefined_ || op.isUndefined()) {\r\n            return false;\r\n        }\r\n\r\n        return this.value_ < op.getValue();\r\n    }\r\n\r\n    isBiggerEqual(op: YGFloatOptional): boolean {\r\n        return this.isEqual(op) ? true : this.isBigger(op);\r\n    }\r\n\r\n    isSmallerEqual(op: YGFloatOptional): boolean {\r\n        return this.isEqual(op) ? true : this.isSmaller(op);\r\n    }\r\n\r\n    isEqual(op: YGFloatOptional): boolean {\r\n        if (this.isUndefined_ == op.isUndefined()) {\r\n            return this.isUndefined_ ? true : this.value_ == op.getValue();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isDiff(op: YGFloatOptional): boolean {\r\n        return !this.isEqual(op);\r\n    }\r\n\r\n    isEqualValue(val: number): boolean {\r\n        if (YGFloatIsUndefined(val) == this.isUndefined_) {\r\n            return this.isUndefined_ || val == this.value_;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isDiffValue(val: number): boolean {\r\n        return !this.isEqualValue(val);\r\n    }\r\n}\r\n\r\nexport {\r\n    YGFloatOptional\r\n}","import { YGDirection } from './enums';\r\nimport { YGFloatOptional } from './ygfloatoptional';\r\nimport { YGCachedMeasurement } from './internal';\r\nimport { YGFloatArrayEqual } from \"./utils\";\r\nimport { YGFloatIsUndefined } from \"./yoga\";\r\n\r\nconst kYGDefaultDimensionValues: () => [number, number] = () => [undefined, undefined];\r\nconst YG_MAX_CACHED_RESULT_COUNT: number = 16;\r\n\r\nfunction buildCache(c: number): Array<YGCachedMeasurement> {\r\n    let ret: Array<YGCachedMeasurement> = [];\r\n    for(let i = 0; i < c; i++) {\r\n        ret.push(new YGCachedMeasurement());\r\n    }\r\n    return ret;\r\n}\r\n\r\nclass YGLayout {\r\n    public position: [number, number, number, number];\r\n    public dimensions: [number, number];\r\n    public margin: [number, number, number, number, number, number];\r\n    public border: [number, number, number, number, number, number];\r\n    public padding: [number, number, number, number, number, number];\r\n    public direction: YGDirection;\r\n\r\n    public computedFlexBasisGeneration: number;\r\n    public computedFlexBasis: YGFloatOptional;\r\n    public hadOverflow: boolean;\r\n\r\n    public generationCount: number;\r\n    public lastOwnerDirection: YGDirection;\r\n\r\n    public nextCachedMeasurementsIndex: number;\r\n    public cachedMeasurements: Array<YGCachedMeasurement>;\r\n    public measuredDimensions: Array<number>;\r\n\r\n    public cachedLayout: YGCachedMeasurement;\r\n    public didUseLegacyFlag: boolean;\r\n    public doesLegacyStretchFlagAffectsLayout: boolean;\r\n\r\n    constructor() {\r\n        this.dimensions = kYGDefaultDimensionValues();\r\n        this.direction = YGDirection.Inherit;\r\n        this.computedFlexBasisGeneration = 0;\r\n        this.computedFlexBasis = new YGFloatOptional();\r\n        this.hadOverflow = false;\r\n        this.generationCount = 0;\r\n        this.lastOwnerDirection = YGDirection.RTL;\r\n        this.nextCachedMeasurementsIndex = 0;\r\n        this.measuredDimensions = kYGDefaultDimensionValues();\r\n        this.cachedLayout = new YGCachedMeasurement();\r\n        this.didUseLegacyFlag = false;\r\n        this.doesLegacyStretchFlagAffectsLayout = false;\r\n        this.position = [undefined, undefined, undefined, undefined]\r\n        this.margin = [undefined, undefined, undefined, undefined, undefined, undefined];\r\n        this.border = [undefined, undefined, undefined, undefined, undefined, undefined];\r\n        this.padding = [undefined, undefined, undefined, undefined, undefined, undefined];\r\n        this.cachedMeasurements = buildCache(YG_MAX_CACHED_RESULT_COUNT);\r\n    }\r\n\r\n    equal(layout: YGLayout) : boolean {\r\n        let isEqual: boolean = YGFloatArrayEqual(this.position, layout.position) &&\r\n                               YGFloatArrayEqual(this.dimensions, layout.dimensions) &&\r\n                               YGFloatArrayEqual(this.margin, layout.margin) &&\r\n                               YGFloatArrayEqual(this.border, layout.border) &&\r\n                               YGFloatArrayEqual(this.padding, layout.padding) &&\r\n                               this.direction == layout.direction &&\r\n                               this.hadOverflow == layout.hadOverflow &&\r\n                               this.lastOwnerDirection == layout.lastOwnerDirection &&\r\n                               this.nextCachedMeasurementsIndex == layout.nextCachedMeasurementsIndex &&\r\n                               this.cachedLayout == layout.cachedLayout &&\r\n                               this.computedFlexBasis == layout.computedFlexBasis;\r\n        \r\n        for (let i = 0; i < YG_MAX_CACHED_RESULT_COUNT && isEqual; ++i) {\r\n            isEqual = isEqual && this.cachedMeasurements[i] == layout.cachedMeasurements[i];\r\n        }\r\n\r\n        if (!YGFloatIsUndefined(this.measuredDimensions[0]) || !YGFloatIsUndefined(layout.measuredDimensions[0])) {\r\n            isEqual = isEqual && (this.measuredDimensions[0] == layout.measuredDimensions[0]);\r\n        }\r\n\r\n        if (!YGFloatIsUndefined(this.measuredDimensions[1]) || !YGFloatIsUndefined(layout.measuredDimensions[1])) {\r\n            isEqual = isEqual && (this.measuredDimensions[1] == layout.measuredDimensions[1]);\r\n        }\r\n\r\n        return isEqual;\r\n    }\r\n\r\n    diff(layout: YGLayout): boolean {\r\n        return !this.equal(layout);\r\n    }\r\n\r\n    clean(): void {\r\n        this.dimensions = kYGDefaultDimensionValues();\r\n        this.direction = YGDirection.Inherit;\r\n        this.computedFlexBasisGeneration = 0;\r\n        this.computedFlexBasis = new YGFloatOptional();\r\n        this.hadOverflow = false;\r\n        this.generationCount = 0;\r\n        this.lastOwnerDirection = YGDirection.RTL;\r\n        this.nextCachedMeasurementsIndex = 0;\r\n        this.measuredDimensions = kYGDefaultDimensionValues();\r\n        this.cachedLayout = new YGCachedMeasurement();\r\n        this.didUseLegacyFlag = false;\r\n        this.doesLegacyStretchFlagAffectsLayout = false;\r\n        this.position = [undefined, undefined, undefined, undefined]\r\n        this.margin = [undefined, undefined, undefined, undefined, undefined, undefined];\r\n        this.border = [undefined, undefined, undefined, undefined, undefined, undefined];\r\n        this.padding = [undefined, undefined, undefined, undefined, undefined, undefined];\r\n        this.cachedMeasurements = buildCache(YG_MAX_CACHED_RESULT_COUNT);\r\n    }\r\n\r\n    clone(): YGLayout {\r\n        let newLayout = new YGLayout();\r\n        newLayout.dimensions = [this.dimensions[0], this.dimensions[1]]\r\n        newLayout.direction = this.direction;\r\n        newLayout.computedFlexBasisGeneration = this.computedFlexBasisGeneration;\r\n        newLayout.computedFlexBasis = this.computedFlexBasis.clone();\r\n        newLayout.hadOverflow = this.hadOverflow;\r\n        newLayout.generationCount = this.generationCount;\r\n        newLayout.lastOwnerDirection = this.lastOwnerDirection;\r\n        newLayout.nextCachedMeasurementsIndex = this.nextCachedMeasurementsIndex;\r\n        newLayout.measuredDimensions = [this.measuredDimensions[0], this.measuredDimensions[1]];\r\n        newLayout.cachedLayout = this.cachedLayout.clone();\r\n        newLayout.didUseLegacyFlag = this.didUseLegacyFlag;\r\n        newLayout.doesLegacyStretchFlagAffectsLayout = this.doesLegacyStretchFlagAffectsLayout;\r\n        newLayout.position = [this.position[0], this.position[1], this.position[2], this.position[3]]\r\n        newLayout.margin = [this.margin[0], this.margin[1], this.margin[2], this.margin[3], this.margin[4], this.margin[5]]\r\n        newLayout.border = [this.border[0], this.border[1], this.border[2], this.border[3], this.border[4], this.border[5]]\r\n        newLayout.padding = [this.padding[0], this.padding[1], this.padding[2], this.padding[3], this.padding[4], this.padding[5]]\r\n        newLayout.cachedMeasurements = buildCache(YG_MAX_CACHED_RESULT_COUNT);\r\n        return newLayout;\r\n    }\r\n}\r\n\r\nexport {\r\n    YGLayout\r\n};","import { \r\n    YGFlexDirection,\r\n    YGDirection,\r\n    YGNodeType,\r\n    YGUnit,\r\n    YGEdge,\r\n    YGDimension,\r\n    YGDimensionCount,\r\n    YGPositionType,\r\n    YGAlign\r\n} from \"./enums\";\r\n\r\nimport { YGFloatOptional } from \"./ygfloatoptional\";\r\nimport { YGConfig } from \"./ygconfig\";\r\n\r\nimport {\r\n    YGFlexDirectionIsRow,\r\n    YGResolveValue,\r\n    YGResolveValueMargin,\r\n    YGFloatOptionalMax,\r\n    YGFloatMax,\r\n    YGFlexDirectionCross,\r\n    YGResolveFlexDirection,\r\n    YGValueEqual,\r\n    YGUnwrapFloatOptional\r\n} from \"./utils\";\r\n\r\nimport { YGLayout } from \"./yglayout\";\r\nimport { YGStyle } from \"./ygstyle\";\r\nimport { YGValue } from \"./ygvalue\";\r\n\r\nimport {\r\n    trailing,\r\n    leading,\r\n    kDefaultFlexGrow,\r\n    kDefaultFlexShrink,\r\n    kWebDefaultFlexShrink\r\n} from \"./internal\";\r\n\r\nimport {\r\n    YGComputedEdgeValue,\r\n    YGFloatIsUndefined,\r\n    YGPrintFunc,\r\n    YGMeasureFunc,\r\n    YGBaselineFunc,\r\n    YGDirtiedFunc,\r\n    YGCloneNodeFunc,\r\n    YGNodeClone,\r\n    YGValueUndefined,\r\n    YGValueZero,\r\n    YGValueAuto,\r\n} from \"./yoga\";\r\n\r\nclass YGNode {\r\n    private context_: any;\r\n    private print_: YGPrintFunc;\r\n    private hasNewLayout_: boolean;\r\n    private nodeType_: YGNodeType;\r\n    private measure_: YGMeasureFunc;\r\n    private baseline_: YGBaselineFunc;\r\n    private dirtied_: YGDirtiedFunc;\r\n    private style_: YGStyle;\r\n    private layout_: YGLayout;\r\n    private lineIndex_: number;\r\n    private owner_: YGNode;\r\n    private children_: Array<YGNode>;\r\n    private config_: YGConfig;\r\n    private isDirty_: boolean;\r\n    private resolvedDimensions_: [YGValue, YGValue];\r\n\r\n    private relativePosition(axis: YGFlexDirection, axisSize: number): YGFloatOptional {\r\n        if (this.isLeadingPositionDefined(axis)) {\r\n            return this.getLeadingPosition(axis, axisSize);\r\n        }\r\n\r\n        let trailingPosition: YGFloatOptional = this.getTrailingPosition(axis, axisSize);\r\n        if (!trailingPosition.isUndefined()) {\r\n            trailingPosition.setValue(-1 * trailingPosition.getValue());\r\n        }\r\n\r\n        return trailingPosition;\r\n    }\r\n\r\n    constructor(node?: YGNode);\r\n    constructor(config?: YGConfig);\r\n    constructor(contextOrNodeOrConfig: any|YGNode|YGConfig = null,\r\n                print: YGPrintFunc = null,\r\n                hasNewLayout: boolean = true,\r\n                nodeType: YGNodeType = YGNodeType.Default,\r\n                measure: YGMeasureFunc = null,\r\n                baseline: YGBaselineFunc = null,\r\n                dirtied: YGDirtiedFunc = null,\r\n                style: YGStyle = new YGStyle(),\r\n                layout: YGLayout = new YGLayout(),\r\n                lineIndex: number = 0,\r\n                owner: YGNode = null,\r\n                children: Array<YGNode> = [],\r\n                config: YGConfig = null,\r\n                isDirty: boolean = false,\r\n                resolvedDimensions: [YGValue, YGValue] = [YGValueUndefined(), YGValueUndefined()]\r\n                ) {\r\n        \r\n        if (contextOrNodeOrConfig instanceof YGNode) {\r\n            console.log('from node')\r\n            this.fromNode(contextOrNodeOrConfig);\r\n            return;\r\n        }\r\n\r\n        this.print_ = print;\r\n        this.hasNewLayout_ = hasNewLayout;\r\n        this.nodeType_ = nodeType;\r\n        this.measure_ = measure;\r\n        this.baseline_ = baseline;\r\n        this.dirtied_ = dirtied;\r\n        this.style_ = style;\r\n        this.layout_ = layout;\r\n        this.lineIndex_ = lineIndex;\r\n        this.owner_ = owner;\r\n        this.children_ = children;\r\n        this.config_ = config;\r\n        this.isDirty_ = isDirty;\r\n        this.resolvedDimensions_ = resolvedDimensions;\r\n\r\n        if (contextOrNodeOrConfig instanceof YGConfig) {\r\n            this.config_ = contextOrNodeOrConfig;\r\n            this.context_ = null;\r\n        } else {\r\n            this.context_ = contextOrNodeOrConfig;\r\n        }\r\n    }\r\n\r\n    operatorAtrib(node: YGNode): YGNode {\r\n        if (node == this) {\r\n            return this;\r\n        }\r\n\r\n        this.clearChildren();\r\n        this.fromNode(node);\r\n        return this;\r\n    }\r\n\r\n    fromNode(node: YGNode): void {\r\n        console.log(node);\r\n        \r\n        this.context_ = node.context_;\r\n        this.print_ = node.print_;\r\n        this.hasNewLayout_ = node.hasNewLayout_;\r\n        this.nodeType_ = node.nodeType_;\r\n        this.measure_ = node.measure_;\r\n        this.baseline_ = node.baseline_;\r\n        this.dirtied_ = node.dirtied_;\r\n\r\n        this.style_ = node.style_; //\r\n        // this.style_ = node.style_.clone();\r\n\r\n        this.layout_ = node.layout_; //\r\n        // this.layout_ = node.layout_.clone();\r\n\r\n        this.lineIndex_ = node.lineIndex_;\r\n        this.owner_ = node.owner_;\r\n\r\n        this.children_ = node.children_; //\r\n        // let newChildren: Array<YGNode> = new Array(node.children_.length);\r\n        // for(let i = 0; i < node.children_.length; ++i) {\r\n        //     newChildren[i] = node.children_[i]\r\n        // }\r\n        // this.children_ = newChildren;\r\n\r\n        this.config_ = node.config_;\r\n        this.isDirty_ = node.isDirty_;\r\n\r\n        this.resolvedDimensions_ = node.resolvedDimensions_; // \r\n        // this.resolvedDimensions_ = [node.resolvedDimensions_[0].clone(), node.resolvedDimensions_[1].clone()];\r\n    }\r\n\r\n    getContext(): any {\r\n        return this.context_;\r\n    }\r\n\r\n    getPrintFunc(): YGPrintFunc {\r\n        return this.print_;\r\n    }\r\n\r\n    getHasNewLayout(): boolean {\r\n        return this.hasNewLayout_;\r\n    }\r\n\r\n    getNodeType(): YGNodeType {\r\n        return this.nodeType_;\r\n    }\r\n\r\n    getMeasure(): YGMeasureFunc {\r\n        return this.measure_;\r\n    }\r\n\r\n    getBaseline(): YGBaselineFunc {\r\n        return this.baseline_;\r\n    }\r\n\r\n    getDirtied(): YGDirtiedFunc {\r\n        return this.dirtied_;\r\n    }\r\n\r\n    getStyle(): YGStyle {\r\n        return this.style_;\r\n    }\r\n\r\n    getLayout(): YGLayout {\r\n        return this.layout_;\r\n    }\r\n\r\n    getLineIndex(): number {\r\n        return this.lineIndex_;\r\n    }\r\n\r\n    getOwner(): YGNode {\r\n        return this.owner_;\r\n    }\r\n\r\n    getParent(): YGNode {\r\n        return this.getOwner();\r\n    }\r\n\r\n    getChildren(): Array<YGNode> {\r\n        return this.children_;\r\n    }\r\n\r\n    getChildrenCount(): number {\r\n        return this.children_.length;\r\n    }\r\n\r\n    getChild(index: number): YGNode {\r\n        return this.children_[index];\r\n    }\r\n\r\n    getConfig(): YGConfig {\r\n        return this.config_;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n        return this.isDirty_;\r\n    }\r\n\r\n    getResolvedDimensions(): [YGValue, YGValue] {\r\n        return this.resolvedDimensions_;\r\n    }\r\n\r\n    getResolvedDimension(index: number): YGValue {\r\n        return this.resolvedDimensions_[index];\r\n    }\r\n\r\n    getLeadingPosition(axis: YGFlexDirection, axisSize: number): YGFloatOptional {\r\n        if (YGFlexDirectionIsRow(axis)) {\r\n            const leadingPosition: YGValue = YGComputedEdgeValue(this.style_.position, YGEdge.Start, YGValueUndefined());\r\n            if (leadingPosition.unit != YGUnit.Undefined) {\r\n                return YGResolveValue(leadingPosition, axisSize);\r\n            }\r\n        }\r\n\r\n        const leadingPosition: YGValue = YGComputedEdgeValue(this.style_.position, leading[axis], YGValueUndefined());\r\n        return leadingPosition.unit == YGUnit.Undefined ? new YGFloatOptional(0) : YGResolveValue(leadingPosition, axisSize);\r\n    }\r\n\r\n    isLeadingPositionDefined(axis: YGFlexDirection): boolean {\r\n        return (YGFlexDirectionIsRow(axis) && (YGComputedEdgeValue(this.style_.position, YGEdge.Start, YGValueUndefined())).unit != YGUnit.Undefined) ||\r\n               (YGComputedEdgeValue(this.style_.position, leading[axis], YGValueUndefined())).unit != YGUnit.Undefined;\r\n    }\r\n\r\n    isTrailingPosDefined(axis: YGFlexDirection): boolean {\r\n        return (YGFlexDirectionIsRow(axis) && (YGComputedEdgeValue(this.style_.position, YGEdge.End, YGValueUndefined())).unit != YGUnit.Undefined) ||\r\n               (YGComputedEdgeValue(this.style_.position, trailing[axis], YGValueUndefined())).unit != YGUnit.Undefined;\r\n    }\r\n\r\n    getTrailingPosition(axis: YGFlexDirection, axisSize: number): YGFloatOptional {\r\n        if (YGFlexDirectionIsRow(axis)) {\r\n            const trailingPosition: YGValue = YGComputedEdgeValue(this.style_.position, YGEdge.End, YGValueUndefined());\r\n            if (trailingPosition.unit != YGUnit.Undefined) {\r\n                return YGResolveValue(trailingPosition, axisSize);\r\n            }\r\n        }\r\n\r\n        const trailingPosition: YGValue = YGComputedEdgeValue(this.style_.position, trailing[axis], YGValueUndefined());\r\n        return trailingPosition.unit == YGUnit.Undefined ? new YGFloatOptional(0) : YGResolveValue(trailingPosition, axisSize);\r\n    }\r\n\r\n    getLeadingMargin(axis: YGFlexDirection, widthSize: number): YGFloatOptional {\r\n        if (YGFlexDirectionIsRow(axis) && this.style_.margin[YGEdge.Start].unit != YGUnit.Undefined) {\r\n            return YGResolveValueMargin(this.style_.margin[YGEdge.Start], widthSize);\r\n        }\r\n\r\n        return YGResolveValueMargin(YGComputedEdgeValue(this.style_.margin, leading[axis], YGValueZero()), widthSize);\r\n    }\r\n\r\n    getTrailingMargin(axis: YGFlexDirection, widthSize: number): YGFloatOptional {\r\n        if (YGFlexDirectionIsRow(axis) && this.style_.margin[YGEdge.End].unit != YGUnit.Undefined) {\r\n            return YGResolveValueMargin(this.style_.margin[YGEdge.End], widthSize);\r\n        }\r\n\r\n        return YGResolveValueMargin(YGComputedEdgeValue(this.style_.margin, trailing[axis], YGValueZero()), widthSize);\r\n    }\r\n\r\n    getLeadingBorder(axis: YGFlexDirection): number {\r\n        if (YGFlexDirectionIsRow(axis) &&\r\n            this.style_.border[YGEdge.Start].unit != YGUnit.Undefined &&\r\n            !YGFloatIsUndefined(this.style_.border[YGEdge.Start].value) &&\r\n            this.style_.border[YGEdge.Start].value >= 0.0) {\r\n            return this.style_.border[YGEdge.Start].value;\r\n        }\r\n\r\n        const computedEdgeValue: number = YGComputedEdgeValue(this.style_.border, leading[axis], YGValueZero()).value;\r\n        return YGFloatMax(computedEdgeValue, 0.0);\r\n    }\r\n\r\n    getTrailingBorder(axis: YGFlexDirection): number {\r\n        if (YGFlexDirectionIsRow(axis) &&\r\n            this.style_.border[YGEdge.End].unit != YGUnit.Undefined &&\r\n            !YGFloatIsUndefined(this.style_.border[YGEdge.End].value) &&\r\n            this.style_.border[YGEdge.End].value >= 0.0) {\r\n            return this.style_.border[YGEdge.End].value;\r\n        }\r\n\r\n        const computedEdgeValue: number = YGComputedEdgeValue(this.style_.border, trailing[axis], YGValueZero()).value;\r\n        return YGFloatMax(computedEdgeValue, 0.0);\r\n    }\r\n\r\n    getLeadingPadding(axis: YGFlexDirection, widthSize: number): YGFloatOptional {\r\n        const paddingEdgeStart: YGFloatOptional = YGResolveValue(this.style_.padding[YGEdge.Start], widthSize);\r\n        if (YGFlexDirectionIsRow(axis) &&\r\n            this.style_.padding[YGEdge.Start].unit != YGUnit.Undefined &&\r\n            !paddingEdgeStart.isUndefined() && paddingEdgeStart.getValue() > 0.0) {\r\n            return paddingEdgeStart;\r\n        }\r\n\r\n        const resolvedValue: YGFloatOptional = YGResolveValue(YGComputedEdgeValue(this.style_.padding, leading[axis], YGValueZero()), widthSize);\r\n        return YGFloatOptionalMax(resolvedValue, new YGFloatOptional(0.0));\r\n    }\r\n\r\n    getTrailingPadding(axis: YGFlexDirection, widthSize: number): YGFloatOptional {\r\n        const paddingEdgeEnd: YGFloatOptional = YGResolveValue(this.style_.padding[YGEdge.End], widthSize);\r\n        if (YGFlexDirectionIsRow(axis) &&\r\n            this.style_.padding[YGEdge.End].unit != YGUnit.Undefined &&\r\n            !paddingEdgeEnd.isUndefined() && paddingEdgeEnd.getValue() >= 0.0) {\r\n            return paddingEdgeEnd;\r\n        }\r\n\r\n        const resolvedValue: YGFloatOptional = YGResolveValue(YGComputedEdgeValue(this.style_.padding, trailing[axis], YGValueZero()), widthSize);\r\n        return YGFloatOptionalMax(resolvedValue, new YGFloatOptional(0.0));\r\n    }\r\n\r\n    getLeadingPaddingAndBorder(axis: YGFlexDirection, widthSize: number): YGFloatOptional {\r\n        return this.getLeadingPadding(axis, widthSize).add(new YGFloatOptional(this.getLeadingBorder(axis)));\r\n    }\r\n\r\n    getTrailingPaddingAndBorder(axis: YGFlexDirection, widthSize: number): YGFloatOptional {\r\n        return this.getTrailingPadding(axis, widthSize).add(new YGFloatOptional(this.getTrailingBorder(axis)));\r\n    }\r\n\r\n    getMarginForAxis(axis: YGFlexDirection, widthSize: number): YGFloatOptional {\r\n        return this.getLeadingMargin(axis, widthSize).add(this.getTrailingMargin(axis, widthSize));\r\n    }\r\n\r\n    setContext(context: any): void {\r\n        this.context_ = context;\r\n    }\r\n\r\n    setPrintFunc(printFunc: YGPrintFunc): void {\r\n        this.print_ = printFunc;\r\n    }\r\n    \r\n    setHasNewLayout(hasNewLayout: boolean): void {\r\n        this.hasNewLayout_ = hasNewLayout;\r\n    }\r\n\r\n    setNodeType(nodeType: YGNodeType): void {\r\n        this.nodeType_ = nodeType;\r\n    }\r\n\r\n    setMeasureFunc(measureFunc: YGMeasureFunc): void {\r\n        if (measureFunc == null) {\r\n            this.measure_ = null;\r\n            this.nodeType_ = YGNodeType.Default;\r\n        }\r\n        else {\r\n            //YGAssertWithNode(this, this.children_.size() == 0, \"Cannot set measure function: Nodes with measure functions cannot have children.\");\r\n            if (this.children_.length != 0) {\r\n                console.error(\"Cannot set measure function: Nodes with measure functions cannot have children.\");\r\n            }\r\n            this.measure_ = measureFunc;\r\n            this.setNodeType(YGNodeType.Text);\r\n        }\r\n\r\n        this.measure_ = measureFunc;\r\n    }\r\n\r\n    setBaseLineFunc(baseLineFunc: YGBaselineFunc): void {\r\n        this.baseline_ = baseLineFunc;\r\n    }\r\n\r\n    setDirtiedFunc(dirtiedFunc: YGDirtiedFunc): void {\r\n        this.dirtied_ = dirtiedFunc;\r\n    }\r\n\r\n    setStyle(style: YGStyle): void {\r\n        this.style_ = style;\r\n    }\r\n\r\n    setStyleFlexDirection(direction: YGFlexDirection): void {\r\n        this.style_.flexDirection = direction;\r\n    }\r\n\r\n    setStyleAlignContent(alignContent: YGAlign): void {\r\n        this.style_.alignContent = alignContent;\r\n    }\r\n\r\n    setLayout(layout: YGLayout) : void {\r\n        this.layout_ = layout;\r\n    }\r\n\r\n    setLineIndex(lineIndex: number): void {\r\n        this.lineIndex_ = lineIndex;\r\n    }\r\n\r\n    setOwner(owner: YGNode): void {\r\n        this.owner_ = owner;\r\n    }\r\n\r\n    setChildren(children: Array<YGNode>): void {\r\n        this.children_ = children;\r\n    }\r\n\r\n    setConfig(config: YGConfig): void {\r\n        this.config_ = config;\r\n    }\r\n\r\n    setDirty(isDirty: boolean): void {\r\n        this.isDirty_ = isDirty;\r\n    }\r\n\r\n    setLayoutLastOwnerDirection(direction: YGDirection): void {\r\n        this.layout_.lastOwnerDirection = direction;\r\n    }\r\n\r\n    setLayoutComputedFlexBasis(computedFlexBasis: YGFloatOptional): void {\r\n        this.layout_.computedFlexBasis = computedFlexBasis;\r\n    }\r\n\r\n    setLayoutComputedFlexBasisGeneration(computedFlexBasisGeneration: number): void {\r\n        this.layout_.computedFlexBasisGeneration = computedFlexBasisGeneration;\r\n    }\r\n\r\n    setLayoutMeasuredDimension(measuredDimension: number, index: number): void {\r\n        this.layout_.measuredDimensions[index] = measuredDimension;\r\n    }\r\n\r\n    setLayoutHadOverflow(hadOverflow: boolean): void {\r\n        this.layout_.hadOverflow = hadOverflow;\r\n    }\r\n\r\n    setLayoutDimension(dimension: number, index: number): void {\r\n        this.layout_.dimensions[index] = dimension;\r\n    }\r\n\r\n    setLayoutDirection(direction: YGDirection): void {\r\n        this.layout_.direction = direction;\r\n    }\r\n\r\n    setLayoutMargin(margin: number , index: number): void {\r\n        this.layout_.margin[index] = margin;\r\n    }\r\n\r\n    setLayoutBorder(border: number, index: number): void {\r\n        this.layout_.border[index] = border;\r\n    }\r\n\r\n    setLayoutPadding(padding: number, index: number): void {\r\n        this.layout_.padding[index] = padding;\r\n    }\r\n\r\n    setLayoutPosition(position: number, index: number): void {\r\n        this.layout_.position[index] = position;\r\n    }\r\n\r\n    setPosition(direction: YGDirection, mainSize: number, crossSize: number, ownerWidth: number): void {\r\n        const directionRespectingRoot: YGDirection = this.owner_ != null ? direction : YGDirection.LTR;\r\n        const mainAxis: YGFlexDirection = YGResolveFlexDirection(this.style_.flexDirection, directionRespectingRoot);\r\n        const crossAxis: YGFlexDirection = YGFlexDirectionCross(mainAxis, directionRespectingRoot);\r\n        const relativePositionMain: YGFloatOptional = this.relativePosition(mainAxis, mainSize);\r\n        const relativePositionCross: YGFloatOptional = this.relativePosition(crossAxis, crossSize);\r\n\r\n        this.setLayoutPosition(YGUnwrapFloatOptional(this.getLeadingMargin(mainAxis, ownerWidth).add(relativePositionMain)), leading[mainAxis]);\r\n        this.setLayoutPosition(YGUnwrapFloatOptional(this.getTrailingMargin(mainAxis, ownerWidth).add(relativePositionMain)), trailing[mainAxis]);\r\n        this.setLayoutPosition(YGUnwrapFloatOptional(this.getLeadingMargin(crossAxis, ownerWidth).add(relativePositionCross)), leading[crossAxis]);\r\n        this.setLayoutPosition(YGUnwrapFloatOptional(this.getTrailingMargin(crossAxis, ownerWidth).add(relativePositionCross)), trailing[crossAxis]);\r\n    }\r\n\r\n    setAndPropogateUseLegacyFlag(useLegacyFlag: boolean): void {\r\n        this.config_.useLegacyStretchBehaviour = useLegacyFlag;\r\n\r\n        for(let i = 0; i < this.children_.length; i++) {\r\n            this.children_[i].getConfig().useLegacyStretchBehaviour = useLegacyFlag;\r\n        }\r\n    }\r\n\r\n    setLayoutDoesLegacyFlagAffectsLayout(doesLegacyFlagAffectsLayout: boolean): void {\r\n        this.layout_.doesLegacyStretchFlagAffectsLayout = doesLegacyFlagAffectsLayout;\r\n    }\r\n\r\n    setLayoutDidUseLegacyFlag(didUseLegacyFlag: boolean): void {\r\n        this.layout_.didUseLegacyFlag = didUseLegacyFlag;\r\n    }\r\n\r\n    markDirtyAndPropogateDownwards(): void {\r\n        this.isDirty_ = true;\r\n        for (let i = 0; i < this.children_.length; i++) {\r\n            this.children_[i].markDirtyAndPropogateDownwards();\r\n        }\r\n    }\r\n\r\n    marginLeadingValue(axis: YGFlexDirection): YGValue {\r\n        if (YGFlexDirectionIsRow(axis) && this.style_.margin[YGEdge.Start].unit != YGUnit.Undefined) {\r\n            return this.style_.margin[YGEdge.Start];\r\n        } else {\r\n            return this.style_.margin[leading[axis]];\r\n        }\r\n    }\r\n\r\n    marginTrailingValue(axis: YGFlexDirection): YGValue {\r\n        if (YGFlexDirectionIsRow(axis) && this.style_.margin[YGEdge.End].unit != YGUnit.Undefined) {\r\n            return this.style_.margin[YGEdge.End];\r\n        } else {\r\n            return this.style_.margin[trailing[axis]];\r\n        }\r\n    }\r\n\r\n    resolveFlexBasisPtr(): YGValue {\r\n        const flexBasis: YGValue = this.style_.flexBasis;\r\n\r\n        if (flexBasis.unit != YGUnit.Auto && flexBasis.unit != YGUnit.Undefined) {\r\n            return flexBasis;\r\n        }\r\n\r\n        if (!this.style_.flex.isUndefined() && this.style_.flex.getValue() > 0.0) {\r\n            return this.config_.useWebDefaults ? YGValueAuto() : YGValueZero();\r\n        }\r\n\r\n        return YGValueAuto();\r\n    }\r\n\r\n    resolveDimension(): void {\r\n        for (let dim = YGDimension.Width; dim < YGDimensionCount; ++dim) {\r\n            if (this.style_.maxDimensions[dim].unit != YGUnit.Undefined && YGValueEqual(this.style_.maxDimensions[dim], this.style_.minDimensions[dim])) {\r\n                this.resolvedDimensions_[dim] = this.style_.maxDimensions[dim];\r\n            } else {\r\n                this.resolvedDimensions_[dim] = this.style_.dimensions[dim];\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveDirection(ownerDirection: YGDirection): YGDirection {\r\n        if (this.style_.direction == YGDirection.Inherit) {\r\n            return ownerDirection > YGDirection.Inherit ? ownerDirection : YGDirection.LTR;\r\n        } else {\r\n            return this.style_.direction;\r\n        }\r\n    }\r\n\r\n    clearChildren(): void {\r\n        while (this.children_.length > 0) {\r\n            this.children_.pop();\r\n        }\r\n    }\r\n\r\n    replaceChild(oldChild: YGNode, newChild: YGNode): void {\r\n        const index = this.children_.indexOf(oldChild);\r\n        if (index >= 0) {\r\n            this.children_[index] = newChild;\r\n        }\r\n    }\r\n\r\n    replaceChildIndex(child: YGNode, index: number): void {\r\n        this.children_[index] = child;\r\n    }\r\n\r\n    insertChildIndex(child: YGNode, index: number): void {\r\n        this.children_.splice(index, 0, child);\r\n    }\r\n\r\n    removeChild(child: YGNode): boolean {\r\n        const index = this.children_.indexOf(child);\r\n\r\n        if (index >= 0) {\r\n            this.children_.splice(index, 1);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    removeChildIndex(index: number): void {\r\n        this.children_.splice(index, 1);\r\n    }\r\n\r\n    cloneChildrenIfNeeded(): void {\r\n        const childCount: number = this.children_.length;\r\n        if (childCount == 0) {\r\n            return;\r\n        }\r\n\r\n        const firstChild: YGNode = this.children_[0];\r\n        if (firstChild.getOwner() == this) {\r\n            return;\r\n        }\r\n\r\n        const cloneNodeCallback: YGCloneNodeFunc = this.config_.cloneNodeCallback;\r\n        for (let i: number = 0; i < childCount; ++i) {\r\n            const oldChild: YGNode = this.children_[i];\r\n            let newChild: YGNode = null;\r\n\r\n            if (cloneNodeCallback) {\r\n                newChild = cloneNodeCallback(oldChild, this, i);\r\n            }\r\n\r\n            if (newChild == null) {\r\n                newChild = YGNodeClone(oldChild);\r\n            }\r\n\r\n            this.replaceChildIndex(newChild, i);\r\n            newChild.setOwner(this);\r\n        }\r\n    }\r\n\r\n    markDirtyAndPropogate(): void {\r\n        if (!this.isDirty_) {\r\n            this.setDirty(true);\r\n            this.setLayoutComputedFlexBasis(new YGFloatOptional());\r\n\r\n            if (this.owner_) {\r\n                this.owner_.markDirtyAndPropogate();\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveFlexGrow(): number {\r\n        if (this.owner_ == null) {\r\n            return 0.0;\r\n        }\r\n\r\n        if (!this.style_.flexGrow.isUndefined()) {\r\n            return this.style_.flexGrow.getValue();\r\n        }\r\n\r\n        if (!this.style_.flex.isUndefined() && this.style_.flex.getValue() > 0.0) {\r\n            return this.style_.flex.getValue();\r\n        }\r\n\r\n        return kDefaultFlexGrow;\r\n    }\r\n\r\n    resolveFlexShrink(): number {\r\n        if (this.owner_ == null) {\r\n            return 0.0;\r\n        }\r\n\r\n        if (!this.style_.flexShrink.isUndefined()) {\r\n            return this.style_.flexShrink.getValue();\r\n        }\r\n\r\n        if (!this.config_.useWebDefaults && !this.style_.flex.isUndefined() && this.style_.flex.getValue() < 0.0) {\r\n            return -this.style_.flex.getValue();\r\n        }\r\n\r\n        return this.config_.useWebDefaults ? kWebDefaultFlexShrink : kDefaultFlexShrink;\r\n    }\r\n\r\n    isNodeFlexible(): boolean {\r\n        return ((this.style_.positionType == YGPositionType.Relative) && (this.resolveFlexGrow() != 0 || this.resolveFlexShrink() != 0));\r\n    }\r\n\r\n    didUseLegacyFlag(): boolean {\r\n        let didUseLegacyFlag: boolean = this.layout_.didUseLegacyFlag;\r\n        if (didUseLegacyFlag) {\r\n            return true;\r\n        }\r\n\r\n        for (let i: number = 0; i < this.children_.length; i++) {\r\n            if (this.children_[i].getLayout().didUseLegacyFlag) {\r\n                didUseLegacyFlag = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return didUseLegacyFlag;\r\n    }\r\n\r\n    isLayoutTreeEqualToNode(node: YGNode): boolean {\r\n        if (this.children_.length != node.getChildren().length) {\r\n            return false;\r\n        }\r\n\r\n        if (this.layout_.diff(node.getLayout())) {\r\n            return false;\r\n        }\r\n\r\n        if (this.children_.length == 0) {\r\n            return true;\r\n        }\r\n\r\n        let isLayoutTreeEqual: boolean = true;\r\n        for (let i: number = 0; i < this.children_.length; ++i) {\r\n            const otherNodeChildren: YGNode = node.getChild(i);\r\n            isLayoutTreeEqual = this.children_[i].isLayoutTreeEqualToNode(otherNodeChildren);\r\n            if (!isLayoutTreeEqual) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return isLayoutTreeEqual;\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    YGNode\r\n}","import {\r\n    YGDirection,\r\n    YGFlexDirection,\r\n    YGPositionType,\r\n    YGJustify,\r\n    YGAlign,\r\n    YGWrap,\r\n    YGOverflow,\r\n    YGDisplay,\r\n    YGEdgeCount,\r\n    YGUnit\r\n} from \"./enums\";\r\n\r\nimport {\r\n    YGValueEqual,\r\n    YGValueArrayEqual,\r\n    cloneYGValueArray\r\n} from \"./utils\";\r\n\r\nimport { YGValue } from \"./ygvalue\";\r\nimport { YGFloatOptional } from \"./ygfloatoptional\";\r\n\r\nconst kYGValueUndefined: () => YGValue = () => new YGValue(0, YGUnit.Undefined);\r\nconst kYGValueAuto: () => YGValue = () => new YGValue(0, YGUnit.Auto);\r\nconst kYGDefaultEdgeValuesUnit: () => Array<YGValue> = () => [\r\n    kYGValueUndefined(),\r\n    kYGValueUndefined(),\r\n    kYGValueUndefined(),\r\n    kYGValueUndefined(),\r\n    kYGValueUndefined(),\r\n    kYGValueUndefined(),\r\n    kYGValueUndefined(),\r\n    kYGValueUndefined(),\r\n    kYGValueUndefined()\r\n];\r\nconst kYGDefaultDimensionValuesAutoUnit: () => [YGValue, YGValue] = () => [kYGValueAuto(), kYGValueAuto()];\r\nconst kYGDefaultDimensionValuesUnit: () => [YGValue, YGValue] = () => [kYGValueUndefined(), kYGValueUndefined()];\r\n\r\nclass YGStyle {\r\n    public direction: YGDirection;\r\n    public flexDirection: YGFlexDirection;\r\n    public justifyContent: YGJustify;\r\n    public alignContent: YGAlign;\r\n    public alignItems: YGAlign;\r\n    public alignSelf: YGAlign;\r\n    public positionType: YGPositionType;\r\n    public flexWrap: YGWrap;\r\n    public overflow: YGOverflow;\r\n    public display: YGDisplay;\r\n    public flex: YGFloatOptional;\r\n    public flexGrow: YGFloatOptional;\r\n    public flexShrink: YGFloatOptional;\r\n    public flexBasis: YGValue;\r\n    public margin: Array<YGValue> = new Array(YGEdgeCount);\r\n    public position: Array<YGValue> = new Array(YGEdgeCount);\r\n    public padding: Array<YGValue> = new Array(YGEdgeCount);\r\n    public border: Array<YGValue> = new Array(YGEdgeCount);\r\n    public dimensions: [YGValue, YGValue];\r\n    public minDimensions: [YGValue, YGValue];\r\n    public maxDimensions: [YGValue, YGValue];\r\n    public aspectRatio: YGFloatOptional;\r\n\r\n    constructor() {\r\n        this.direction = YGDirection.Inherit;\r\n        this.flexDirection = YGFlexDirection.Row;\r\n        this.justifyContent = YGJustify.FlexStart;\r\n        this.alignContent = YGAlign.FlexStart;\r\n        this.alignItems = YGAlign.Stretch;\r\n        this.alignSelf = YGAlign.Auto;\r\n        this.positionType = YGPositionType.Relative;\r\n        this.flexWrap = YGWrap.NoWrap;\r\n        this.overflow = YGOverflow.Visible;\r\n        this.display = YGDisplay.Flex;\r\n        this.flex = new YGFloatOptional();  \r\n        this.flexGrow = new YGFloatOptional();\r\n        this.flexShrink = new YGFloatOptional();\r\n        this.flexBasis = kYGValueAuto();\r\n        this.margin = kYGDefaultEdgeValuesUnit();\r\n        this.position = kYGDefaultEdgeValuesUnit();\r\n        this.padding = kYGDefaultEdgeValuesUnit();\r\n        this.border = kYGDefaultEdgeValuesUnit();\r\n        this.dimensions = kYGDefaultDimensionValuesAutoUnit(); \r\n        this.minDimensions = kYGDefaultDimensionValuesUnit();\r\n        this.maxDimensions = kYGDefaultDimensionValuesUnit();\r\n        this.aspectRatio = new YGFloatOptional();\r\n    }\r\n\r\n    isEqual(style: YGStyle): boolean {\r\n        let areNonFloatValuesEqual: boolean = this.direction == style.direction &&\r\n                                              this.flexDirection == style.flexDirection &&\r\n                                              this.justifyContent == style.justifyContent &&\r\n                                              this.alignContent == style.alignContent &&\r\n                                              this.alignItems == style.alignItems &&\r\n                                              this.alignSelf == style.alignSelf &&\r\n                                              this.positionType == style.positionType &&\r\n                                              this.flexWrap == style.flexWrap &&\r\n                                              this.overflow == style.overflow &&\r\n                                              this.display == style.display &&\r\n                                              YGValueEqual(this.flexBasis, style.flexBasis) &&\r\n                                              YGValueArrayEqual(this.margin, style.margin) &&\r\n                                              YGValueArrayEqual(this.position, style.position) &&\r\n                                              YGValueArrayEqual(this.padding, style.padding) &&\r\n                                              YGValueArrayEqual(this.border, style.border) &&\r\n                                              YGValueArrayEqual(this.dimensions, style.dimensions) &&\r\n                                              YGValueArrayEqual(this.minDimensions, style.minDimensions) &&\r\n                                              YGValueArrayEqual(this.maxDimensions, style.maxDimensions);\r\n        \r\n        areNonFloatValuesEqual = areNonFloatValuesEqual && this.flex.isUndefined() == style.flex.isUndefined();\r\n        if (areNonFloatValuesEqual && !this.flex.isUndefined() && !style.flex.isUndefined()) {\r\n            areNonFloatValuesEqual = areNonFloatValuesEqual && this.flex.getValue() == style.flex.getValue();\r\n        }\r\n\r\n        areNonFloatValuesEqual = areNonFloatValuesEqual && this.flexGrow.isUndefined() == style.flexGrow.isUndefined();\r\n        if (areNonFloatValuesEqual && !this.flexGrow.isUndefined()) {\r\n            areNonFloatValuesEqual = areNonFloatValuesEqual && this.flexGrow.getValue() == style.flexGrow.getValue();\r\n        }\r\n\r\n        areNonFloatValuesEqual = areNonFloatValuesEqual && this.flexShrink.isUndefined() == style.flexShrink.isUndefined();\r\n        if (areNonFloatValuesEqual && !style.flexShrink.isUndefined()) {\r\n            areNonFloatValuesEqual = areNonFloatValuesEqual && this.flexShrink.getValue() == style.flexShrink.getValue();\r\n        }\r\n\r\n        if (!(this.aspectRatio.isUndefined() && style.aspectRatio.isUndefined())) {\r\n            areNonFloatValuesEqual = areNonFloatValuesEqual && this.aspectRatio.getValue() == style.aspectRatio.getValue();\r\n        }\r\n\r\n        return areNonFloatValuesEqual;\r\n    }\r\n\r\n    isDiff(style: YGStyle): boolean {\r\n        return !this.isEqual(style);\r\n    }\r\n\r\n    clone(): YGStyle {\r\n        let newStyle: YGStyle = new YGStyle();\r\n        newStyle.direction = this.direction;\r\n        newStyle.flexDirection = this.flexDirection;\r\n        newStyle.justifyContent = this.justifyContent;\r\n        newStyle.alignContent = this.alignContent;\r\n        newStyle.alignItems = this.alignItems;\r\n        newStyle.alignSelf = this.alignSelf;\r\n        newStyle.positionType = this.positionType;\r\n        newStyle.flexWrap = this.flexWrap;\r\n        newStyle.overflow = this.overflow;\r\n        newStyle.display = this.display;\r\n        newStyle.flex = this.flex.clone(); \r\n        newStyle.flexGrow = this.flexGrow.clone(); \r\n        newStyle.flexShrink = this.flexShrink.clone(); \r\n        newStyle.flexBasis = this.flexBasis.clone();\r\n        newStyle.margin = cloneYGValueArray(this.margin);\r\n        newStyle.position = cloneYGValueArray(this.position);\r\n        newStyle.padding = cloneYGValueArray(this.padding);\r\n        newStyle.border = cloneYGValueArray(this.border);\r\n        newStyle.dimensions = [this.dimensions[0].clone(), this.dimensions[1].clone()];\r\n        newStyle.minDimensions = [this.minDimensions[0].clone(), this.minDimensions[1].clone()];\r\n        newStyle.maxDimensions = [this.maxDimensions[0].clone(), this.maxDimensions[1].clone()];\r\n        newStyle.aspectRatio = this.aspectRatio.clone();\r\n        return newStyle;\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    YGStyle\r\n}","import {\r\n    YGUnit\r\n} from \"./enums\";\r\n\r\nexport class YGValue {\r\n    public value: number;\r\n    public unit: YGUnit;\r\n\r\n    constructor(value: number, unit: YGUnit) {\r\n        this.value = value;\r\n        this.unit = unit;\r\n    }\r\n\r\n    clone(): YGValue {\r\n        return new YGValue(this.value, this.unit)\r\n    }\r\n}\r\n","import {\r\n    YGUnit,\r\n    YGEdge,\r\n    YGNodeType,\r\n    YGFlexDirection,\r\n    YGAlign,\r\n    YGMeasureMode,\r\n    YGLogLevel,\r\n    YGDirection,\r\n    YGJustify,\r\n    YGPositionType,\r\n    YGWrap,\r\n    YGOverflow,\r\n    YGDisplay,\r\n    YGDimension,\r\n    YGPrintOptions,\r\n    YGExperimentalFeature,\r\n    YGMeasureModeCount\r\n} from \"./enums\";\r\n\r\nimport { YGNode } from \"./ygnode\";\r\nimport { YGConfig } from \"./ygconfig\";\r\nimport { YGLayout } from \"./yglayout\";\r\nimport { YGStyle } from \"./ygstyle\";\r\nimport { YGFloatOptional } from \"./ygfloatoptional\";\r\nimport { YGValue } from \"./ygvalue\";\r\n\r\nimport {\r\n    YGFloatSanitize,\r\n    YGUnwrapFloatOptional,\r\n    YGFlexDirectionIsColumn,\r\n    YGResolveValue,\r\n    YGFlexDirectionIsRow,\r\n    YGFloatMax,\r\n    YGResolveFlexDirection,\r\n    YGFloatOptionalMax,\r\n    YGFlexDirectionCross,\r\n    YGFloatMin,\r\n    YGCollectFlexItemsRowValues,\r\n    YGFloatsEqual\r\n} from \"./utils\";\r\n\r\nimport {\r\n    kDefaultFlexGrow,\r\n    kWebDefaultFlexShrink,\r\n    kDefaultFlexShrink,\r\n    pos,\r\n    trailing,\r\n    leading,\r\n    dim,\r\n    YGCachedMeasurement,\r\n    YG_MAX_CACHED_RESULT_COUNT\r\n} from \"./internal\";\r\n\r\nexport class YGSize {\r\n    public width: number;\r\n    public height: number;\r\n}\r\n\r\nexport const YGUndefined: number = undefined;\r\nexport const YGValueUndefined: () => YGValue = () => new YGValue(YGUndefined, YGUnit.Undefined);\r\nexport const YGValueAuto: () => YGValue = () => new YGValue(YGUndefined, YGUnit.Auto);\r\nexport const YGValueZero: () => YGValue = () => new YGValue(0, YGUnit.Point);\r\n\r\nexport interface YGPrintFunc { (node: YGNode): void };\r\nexport interface YGMeasureFunc { (node: YGNode, width: number, widthMode: YGMeasureMode, height: number, heightMode: YGMeasureMode): YGSize };\r\nexport interface YGBaselineFunc { (node: YGNode, width: number, height: number): number };\r\nexport interface YGDirtiedFunc { (node: YGNode): void };\r\nexport interface YGLogger { (config: YGConfig, node: YGNode, level: YGLogLevel, format: string, ...args: any[]): void };\r\nexport interface YGCloneNodeFunc { (oldNode: YGNode, owner: YGNode, childIndex: number): YGNode };\r\n\r\nfunction formatToString(format: string, args: any[]) {\r\n    let ret: string = format;\r\n\r\n    for (let arg of args[0][0]) {\r\n        ret = ret.replace(/%[d|s|f]/, arg)\r\n    }\r\n\r\n    return ret\r\n}\r\n\r\nfunction YGDefaultLog(config: YGConfig, node: YGNode, level: YGLogLevel, format: string, ...args: any[]): void {\r\n    switch (level) {\r\n        case YGLogLevel.Error:\r\n        case YGLogLevel.Fatal:\r\n            return console.error(formatToString(format, args));\r\n        case YGLogLevel.Warn:\r\n        case YGLogLevel.Info:\r\n        case YGLogLevel.Debug:\r\n        case YGLogLevel.Verbose:\r\n        default:\r\n            return console.log(formatToString(format, args));\r\n    }\r\n}\r\n\r\nexport function YGFloatIsUndefined(value: number) {\r\n    if (value === undefined || isNaN(value)) {\r\n        return true;\r\n    }\r\n    return false;\r\n    // return value >= 10E8 || value <= -10E8;\r\n}\r\n\r\nexport function YGComputedEdgeValue(edges: Array<YGValue>, edge: YGEdge, defaultValue: YGValue): YGValue {\r\n    if (edges[edge].unit != YGUnit.Undefined) {\r\n        return edges[edge];\r\n    }\r\n\r\n    if ((edge == YGEdge.Top || edge == YGEdge.Bottom) &&\r\n        edges[YGEdge.Vertical].unit != YGUnit.Undefined) {\r\n        return edges[YGEdge.Vertical];\r\n    }\r\n\r\n    if ((edge == YGEdge.Left || edge == YGEdge.Right || edge == YGEdge.Start ||\r\n        edge == YGEdge.End) &&\r\n        edges[YGEdge.Horizontal].unit != YGUnit.Undefined) {\r\n        return edges[YGEdge.Horizontal];\r\n    }\r\n\r\n    if (edges[YGEdge.All].unit != YGUnit.Undefined) {\r\n        return edges[YGEdge.All];\r\n    }\r\n\r\n    if (edge == YGEdge.Start || edge == YGEdge.End) {\r\n        return YGValueUndefined();\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function YGNodeGetContext(node: YGNode): any {\r\n    return node.getContext();\r\n}\r\n\r\nexport function YGNodeSetContext(node: YGNode, context: any): void {\r\n    return node.setContext(context);\r\n}\r\n\r\nexport function YGNodeGetMeasureFunc(node: YGNode): YGMeasureFunc {\r\n    return node.getMeasure();\r\n}\r\n\r\nexport function YGNodeSetMeasureFunc(node: YGNode, measureFunc: YGMeasureFunc): void {\r\n    node.setMeasureFunc(measureFunc);\r\n}\r\n\r\nexport function YGNodeGetBaselineFunc(node: YGNode): YGBaselineFunc {\r\n    return node.getBaseline();\r\n}\r\n\r\nexport function YGNodeSetBaselineFunc(node: YGNode, baselineFunc: YGBaselineFunc): void {\r\n    node.setBaseLineFunc(baselineFunc);\r\n}\r\n\r\nexport function YGNodeGetDirtiedFunc(node: YGNode): YGDirtiedFunc {\r\n    return node.getDirtied();\r\n}\r\n\r\nexport function YGNodeSetDirtiedFunc(node: YGNode, dirtiedFunc: YGDirtiedFunc) {\r\n    node.setDirtiedFunc(dirtiedFunc);\r\n}\r\n\r\nexport function YGNodeGetPrintFunc(node: YGNode): YGPrintFunc {\r\n    return node.getPrintFunc();\r\n}\r\n\r\nexport function YGNodeSetPrintFunc(node: YGNode, printFunc: YGPrintFunc): void {\r\n    node.setPrintFunc(printFunc);\r\n}\r\n\r\nexport function YGNodeGetHasNewLayout(node: YGNode): boolean {\r\n    return node.getHasNewLayout();\r\n}\r\n\r\nexport function YGNodeSetHasNewLayout(node: YGNode, hasNewLayout: boolean): void {\r\n    node.setHasNewLayout(hasNewLayout);\r\n}\r\n\r\nexport function YGNodeGetNodeType(node: YGNode): YGNodeType {\r\n    return node.getNodeType();\r\n}\r\n\r\nexport function YGNodeSetNodeType(node: YGNode, nodeType: YGNodeType): void {\r\n    node.setNodeType(nodeType);\r\n}\r\n\r\nexport function YGNodeIsDirty(node: YGNode): boolean {\r\n    return node.isDirty();\r\n}\r\n\r\nexport function YGNodeLayoutGetDidUseLegacyFlag(node: YGNode): boolean {\r\n    return node.didUseLegacyFlag();\r\n}\r\n\r\nexport function YGNodeMarkDirtyAndPropogateToDescendants(node: YGNode): void {\r\n    node.markDirtyAndPropogateDownwards();\r\n}\r\n\r\nlet gNodeInstanceCount: number = 0;\r\nlet gConfigInstanceCount: number = 0;\r\n\r\nexport function YGNodeNewWithConfig(config: YGConfig): YGNode {\r\n    const node: YGNode = new YGNode();\r\n    gNodeInstanceCount++;\r\n\r\n    if (config.useWebDefaults) {\r\n        node.setStyleFlexDirection(YGFlexDirection.Row);\r\n        node.setStyleAlignContent(YGAlign.Stretch);\r\n    }\r\n\r\n    node.setConfig(config);\r\n    return node;\r\n}\r\n\r\nexport function YGConfigGetDefault(): YGConfig {\r\n    return YGConfigNew();\r\n}\r\n\r\nexport function YGNodeNew(): YGNode {\r\n    return YGNodeNewWithConfig(YGConfigGetDefault());\r\n}\r\n\r\nexport function YGNodeClone(oldNode: YGNode) {\r\n    console.log('clone?')\r\n    const node: YGNode = new YGNode(oldNode);\r\n    gNodeInstanceCount++;\r\n    node.setOwner(null);\r\n    return node;\r\n}\r\n\r\nexport function YGConfigClone(oldConfig: YGConfig) {\r\n    const config: YGConfig = new YGConfig(oldConfig.logger);\r\n    gConfigInstanceCount++;\r\n    return config;\r\n}\r\n\r\nexport function YGNodeDeepClone(oldNode: YGNode): YGNode {\r\n    const node: YGNode = YGNodeClone(oldNode);\r\n    const vec: Array<YGNode> = new Array(oldNode.getChildren().length);\r\n\r\n    let childNode: YGNode = null;\r\n    for (let i: number = 0; i < oldNode.getChildren().length; ++i) {\r\n        const item: YGNode = oldNode.getChild(i);\r\n        childNode = YGNodeDeepClone(item);\r\n        childNode.setOwner(node);\r\n        vec.push(childNode);\r\n    }\r\n\r\n    node.setChildren(vec);\r\n\r\n    if (oldNode.getConfig() != null) {\r\n        node.setConfig(YGConfigClone(oldNode.getConfig()));\r\n    }\r\n\r\n    return node;\r\n}\r\n\r\nexport function YGNodeFree(node: YGNode): void {\r\n    const owner: YGNode = node.getOwner();\r\n\r\n    if (owner != null) {\r\n        owner.removeChild(node);\r\n        node.setOwner(null);\r\n    }\r\n\r\n    const childCount: number = YGNodeGetChildCount(node);\r\n    for (let i: number = 0; i < childCount; i++) {\r\n        const child: YGNode = YGNodeGetChild(node, i);\r\n        child.setOwner(null);\r\n    }\r\n\r\n    node.clearChildren();\r\n    gNodeInstanceCount--;\r\n}\r\n\r\nexport function YGConfigFreeRecursive(root: YGNode): void {\r\n    if (root.getConfig() != null) {\r\n        gConfigInstanceCount--;\r\n        root.setConfig(null);\r\n    }\r\n\r\n    for (let i: number = 0; i < root.getChildrenCount(); ++i) {\r\n        YGConfigFreeRecursive(root.getChild(i));\r\n    }\r\n}\r\n\r\nexport function YGNodeFreeRecursive(root: YGNode): void {\r\n    while (YGNodeGetChildCount(root) > 0) {\r\n        const child: YGNode = YGNodeGetChild(root, 0);\r\n        if (child.getOwner() != root) {\r\n            break;\r\n        }\r\n\r\n        YGNodeRemoveChild(root, child);\r\n        YGNodeFreeRecursive(child);\r\n    }\r\n    YGNodeFree(root);\r\n}\r\n\r\nexport function YGNodeReset(node: YGNode): void {\r\n    YGAssertWithNode(node, YGNodeGetChildCount(node) == 0, \"Cannot reset a node which still has children attached\");\r\n    YGAssertWithNode(node, node.getOwner() == null, \"Cannot reset a node still attached to a owner\");\r\n\r\n    node.clearChildren();\r\n    const config: YGConfig = node.getConfig();\r\n\r\n    node.fromNode(new YGNode());\r\n\r\n    if (config.useWebDefaults) {\r\n        node.setStyleFlexDirection(YGFlexDirection.Row);\r\n        node.setStyleAlignContent(YGAlign.Stretch);\r\n    }\r\n\r\n    node.setConfig(config);\r\n}\r\n\r\nexport function YGNodeGetInstanceCount(): number {\r\n    return gNodeInstanceCount;\r\n}\r\n\r\nexport function YGConfigGetInstanceCount(): number {\r\n    return gConfigInstanceCount;\r\n}\r\n\r\nexport function YGConfigNew(): YGConfig {\r\n    const config: YGConfig = new YGConfig(YGDefaultLog);\r\n    gConfigInstanceCount++;\r\n    return config;\r\n}\r\n\r\nexport function YGConfigFree(config: YGConfig): void {\r\n    gConfigInstanceCount--;\r\n}\r\n\r\nexport function YGConfigCopy(dest: YGConfig, src: YGConfig) {\r\n    (<any>Object).assign(dest, src);\r\n}\r\n\r\nexport function YGNodeInsertChild(node: YGNode, child: YGNode, index: number): void {\r\n    YGAssertWithNode(node, child.getOwner() == null, \"Child already has a owner, it must be removed first.\");\r\n    YGAssertWithNode(node, node.getMeasure() == null, \"Cannot add child: Nodes with measure functions cannot have children.\");\r\n    node.cloneChildrenIfNeeded();\r\n    node.insertChildIndex(child, index);\r\n    const owner: YGNode = child.getOwner() ? null : node;\r\n    child.setOwner(owner);\r\n    node.markDirtyAndPropogate();\r\n}\r\n\r\nexport function YGNodeInsertSharedChild(node: YGNode, child: YGNode, index: number): void {\r\n    YGAssertWithNode(node, node.getMeasure() == null, \"Cannot add child: Nodes with measure functions cannot have children.\");\r\n    node.insertChildIndex(child, index);\r\n    child.setOwner(null);\r\n    node.markDirtyAndPropogate();\r\n}\r\n\r\nexport function YGNodeRemoveChild(owner: YGNode, excludedChild: YGNode): void {\r\n    const childCount: number = YGNodeGetChildCount(owner);\r\n\r\n    if (childCount == 0) {\r\n        return;\r\n    }\r\n\r\n    const firstChild: YGNode = YGNodeGetChild(owner, 0);\r\n    if (firstChild.getOwner() == owner) {\r\n        if (owner.removeChild(excludedChild)) {\r\n            excludedChild.setLayout(new YGLayout());\r\n            excludedChild.setOwner(null);\r\n            owner.markDirtyAndPropogate();\r\n        }\r\n        return;\r\n    }\r\n\r\n    const cloneNodeCallback: YGCloneNodeFunc = owner.getConfig().cloneNodeCallback;\r\n    let nextInsertIndex: number = 0;\r\n\r\n    for (let i: number = 0; i < childCount; i++) {\r\n        const oldChild: YGNode = owner.getChild(i);\r\n        if (excludedChild == oldChild) {\r\n            owner.markDirtyAndPropogate();\r\n            continue;\r\n        }\r\n\r\n        let newChild: YGNode = null;\r\n        if (cloneNodeCallback) {\r\n            newChild = cloneNodeCallback(oldChild, owner, nextInsertIndex);\r\n        }\r\n\r\n        if (newChild == null) {\r\n            newChild = YGNodeClone(oldChild);\r\n        }\r\n\r\n        owner.replaceChildIndex(newChild, nextInsertIndex);\r\n        newChild.setOwner(owner);\r\n\r\n        nextInsertIndex++;\r\n    }\r\n\r\n    while (nextInsertIndex < childCount) {\r\n        owner.removeChildIndex(nextInsertIndex);\r\n        nextInsertIndex++;\r\n    }\r\n}\r\n\r\nexport function YGNodeRemoveAllChildren(owner: YGNode): void {\r\n    const childCount = YGNodeGetChildCount(owner);\r\n    if (childCount == 0) {\r\n        return;\r\n    }\r\n\r\n    const firstChild: YGNode = YGNodeGetChild(owner, 0);\r\n    if (firstChild.getOwner() == owner) {\r\n        for (let i = 0; i < childCount; i++) {\r\n            const oldChild: YGNode = YGNodeGetChild(owner, i);\r\n            oldChild.setLayout(new YGLayout()); // new YGNode().getLayout()\r\n            oldChild.setOwner(null);\r\n        }\r\n\r\n        owner.clearChildren();\r\n        owner.markDirtyAndPropogate();\r\n        return;\r\n    }\r\n\r\n    owner.setChildren(new Array());\r\n    owner.markDirtyAndPropogate();\r\n}\r\n\r\nexport function YGNodeSetChildrenInternal(owner: YGNode, children: Array<YGNode>): void {\r\n    if (!owner) {\r\n        return;\r\n    }\r\n\r\n    const ownerChildren: Array<YGNode> = owner.getChildren();\r\n    if (children.length == 0) {\r\n        if (ownerChildren.length > 0) {\r\n            for (let i = 0; i < ownerChildren.length; i++) {\r\n                const child: YGNode = ownerChildren[i];\r\n                child.setLayout(new YGLayout());\r\n                child.setOwner(null);\r\n            }\r\n\r\n            owner.setChildren(new Array());\r\n            owner.markDirtyAndPropogate();\r\n        }\r\n    } else {\r\n        if (ownerChildren.length > 0) {\r\n            for (let i = 0; i < ownerChildren.length; i++) {\r\n                const oldChild: YGNode = ownerChildren[i];\r\n                if (children.indexOf(oldChild) < 0) {\r\n                    oldChild.setLayout(new YGLayout());\r\n                    oldChild.setOwner(null);\r\n                }\r\n            }\r\n        }\r\n\r\n        owner.setChildren(children);\r\n        for (let i = 0; i < children.length; i++) {\r\n            children[i].setOwner(owner);\r\n        }\r\n\r\n        owner.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\n/*function YGNodeSetChildren(owner: YGNode, c: Array<YGNode>, count: number) {\r\n    YGVector children = { c, c + count };\r\n    YGNodeSetChildrenInternal(owner, children);\r\n}*/\r\n\r\nexport function YGNodeSetChildren(owner: YGNode, children: Array<YGNode>): void {\r\n    YGNodeSetChildrenInternal(owner, children);\r\n}\r\n\r\n\r\nexport function YGNodeGetChild(node: YGNode, index: number): YGNode {\r\n    const children = node.getChildren();\r\n    if (index < children.length) {\r\n        return children[index];\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function YGNodeGetChildCount(node: YGNode): number {\r\n    return node.getChildrenCount();\r\n}\r\n\r\nexport function YGNodeGetOwner(node: YGNode): YGNode {\r\n    return node.getOwner();\r\n}\r\n\r\nexport function YGNodeGetParent(node: YGNode): YGNode {\r\n    return node.getOwner();\r\n}\r\n\r\nexport function YGNodeMarkDirty(node: YGNode): void {\r\n    YGAssertWithNode(node, node.getMeasure() != null, \"Only leaf nodes with custom measure functions should manually mark themselves as dirty\");\r\n    node.markDirtyAndPropogate();\r\n}\r\n\r\nexport function YGNodeCopyStyle(dstNode: YGNode, srcNode: YGNode): void {\r\n    if (!(dstNode.getStyle().isEqual(srcNode.getStyle()))) {\r\n        dstNode.setStyle(srcNode.getStyle());\r\n        dstNode.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetFlexGrow(node: YGNode): number {\r\n    return node.getStyle().flexGrow.isUndefined() ? kDefaultFlexGrow : node.getStyle().flexGrow.getValue();\r\n}\r\n\r\nexport function YGNodeStyleGetFlexShrink(node: YGNode): number {\r\n    return node.getStyle().flexShrink.isUndefined() ? (node.getConfig().useWebDefaults ? kWebDefaultFlexShrink : kDefaultFlexShrink) : node.getStyle().flexShrink.getValue();\r\n}\r\n\r\n// MACROS START\r\n\r\nexport function YGNodeStyleSetDirection(node: YGNode, direction: YGDirection): void {\r\n    if (node.getStyle().direction != direction) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.direction = direction;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetDirection(node: YGNode): YGDirection {\r\n    return node.getStyle().direction;\r\n}\r\n\r\nexport function YGNodeStyleSetFlexDirection(node: YGNode, flexDirection: YGFlexDirection): void {\r\n    if (node.getStyle().flexDirection != flexDirection) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.flexDirection = flexDirection;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetFlexDirection(node: YGNode): YGFlexDirection {\r\n    return node.getStyle().flexDirection;\r\n}\r\n\r\nexport function YGNodeStyleSetJustifyContent(node: YGNode, justifyContent: YGJustify): void {\r\n    if (node.getStyle().justifyContent != justifyContent) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.justifyContent = justifyContent;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetJustifyContent(node: YGNode): YGJustify {\r\n    return node.getStyle().justifyContent;\r\n}\r\n\r\nexport function YGNodeStyleSetAlignContent(node: YGNode, alignContent: YGAlign): void {\r\n    if (node.getStyle().alignContent != alignContent) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.alignContent = alignContent;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetAlignContent(node: YGNode): YGAlign {\r\n    return node.getStyle().alignContent;\r\n}\r\n\r\nexport function YGNodeStyleSetAlignItems(node: YGNode, alignItems: YGAlign): void {\r\n    if (node.getStyle().alignItems != alignItems) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.alignItems = alignItems;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetAlignItems(node: YGNode): YGAlign {\r\n    return node.getStyle().alignItems;\r\n}\r\n\r\nexport function YGNodeStyleSetAlignSelf(node: YGNode, alignSelf: YGAlign): void {\r\n    if (node.getStyle().alignSelf != alignSelf) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.alignSelf = alignSelf;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetAlignSelf(node: YGNode): YGAlign {\r\n    return node.getStyle().alignSelf;\r\n}\r\n\r\nexport function YGNodeStyleSetPositionType(node: YGNode, positionType: YGPositionType): void {\r\n    if (node.getStyle().positionType != positionType) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.positionType = positionType;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetPositionType(node: YGNode): YGPositionType {\r\n    return node.getStyle().positionType;\r\n}\r\n\r\nexport function YGNodeStyleSetFlexWrap(node: YGNode, flexWrap: YGWrap): void {\r\n    if (node.getStyle().flexWrap != flexWrap) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.flexWrap = flexWrap;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetFlexWrap(node: YGNode): YGWrap {\r\n    return node.getStyle().flexWrap;\r\n}\r\n\r\nexport function YGNodeStyleSetOverflow(node: YGNode, overflow: YGOverflow): void {\r\n    if (node.getStyle().overflow != overflow) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.overflow = overflow;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetOverflow(node: YGNode): YGOverflow {\r\n    return node.getStyle().overflow;\r\n}\r\n\r\nexport function YGNodeStyleSetDisplay(node: YGNode, display: YGDisplay): void {\r\n    if (node.getStyle().display != display) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.display = display;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetDisplay(node: YGNode): YGDisplay {\r\n    return node.getStyle().display;\r\n}\r\n\r\nexport function YGNodeStyleSetPosition(node: YGNode, edge: YGEdge, position: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(position),\r\n        YGFloatIsUndefined(position) ? YGUnit.Undefined : YGUnit.Point,\r\n    );\r\n\r\n    if ((node.getStyle().position[edge].value != value.value &&\r\n        value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().position[edge].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.position[edge] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\n\r\nexport function YGNodeStyleSetPositionPercent(node: YGNode, edge: YGEdge, position: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(position),\r\n        YGFloatIsUndefined(position) ? YGUnit.Undefined : YGUnit.Percent,\r\n    );\r\n\r\n    if ((node.getStyle().position[edge].value != value.value &&\r\n        value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().position[edge].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.position[edge] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetPosition(node: YGNode, edge: YGEdge): YGValue {\r\n    const value: YGValue = node.getStyle().position[edge];\r\n    if (value.unit == YGUnit.Undefined || value.unit == YGUnit.Auto) {\r\n        value.value = YGUndefined;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function YGNodeStyleSetMargin(node: YGNode, edge: YGEdge, margin: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(margin),\r\n        YGFloatIsUndefined(margin) ? YGUnit.Undefined : YGUnit.Point,\r\n    );\r\n\r\n    if ((node.getStyle().margin[edge].value != value.value &&\r\n        value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().margin[edge].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.margin[edge] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\n\r\nexport function YGNodeStyleSetMarginPercent(node: YGNode, edge: YGEdge, margin: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(margin),\r\n        YGFloatIsUndefined(margin) ? YGUnit.Undefined : YGUnit.Percent,\r\n    );\r\n\r\n    if ((node.getStyle().margin[edge].value != value.value &&\r\n        value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().margin[edge].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.margin[edge] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetMargin(node: YGNode, edge: YGEdge): YGValue {\r\n    const value: YGValue = node.getStyle().margin[edge];\r\n    if (value.unit == YGUnit.Undefined || value.unit == YGUnit.Auto) {\r\n        value.value = YGUndefined;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function YGNodeStyleSetPadding(node: YGNode, edge: YGEdge, padding: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(padding),\r\n        YGFloatIsUndefined(padding) ? YGUnit.Undefined : YGUnit.Point,\r\n    );\r\n\r\n    if ((node.getStyle().padding[edge].value != value.value &&\r\n        value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().padding[edge].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.padding[edge] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\n\r\nexport function YGNodeStyleSetPaddingPercent(node: YGNode, edge: YGEdge, padding: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(padding),\r\n        YGFloatIsUndefined(padding) ? YGUnit.Undefined : YGUnit.Percent,\r\n    );\r\n\r\n    if ((node.getStyle().padding[edge].value != value.value &&\r\n        value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().padding[edge].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.padding[edge] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetPadding(node: YGNode, edge: YGEdge): YGValue {\r\n    const value: YGValue = node.getStyle().padding[edge];\r\n    if (value.unit == YGUnit.Undefined || value.unit == YGUnit.Auto) {\r\n        value.value = YGUndefined;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function YGNodeStyleSetMarginAuto(node: YGNode, edge: YGEdge): void {\r\n    if (node.getStyle().margin[edge].unit != YGUnit.Auto) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.margin[edge].value = 0;\r\n        style.margin[edge].unit = YGUnit.Auto;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\nexport function YGNodeStyleSetWidth(node: YGNode, width: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(width),\r\n        YGFloatIsUndefined(width) ? YGUnit.Undefined : YGUnit.Point,\r\n    );\r\n\r\n    if ((node.getStyle().dimensions[YGDimension.Width].value != value.value && value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().dimensions[YGDimension.Width].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.dimensions[YGDimension.Width] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleSetWidthPercent(node: YGNode, width: number): void {\r\n    if (node.getStyle().dimensions[YGDimension.Width].value != YGFloatSanitize(width) ||\r\n        node.getStyle().dimensions[YGDimension.Width].unit != YGUnit.Percent) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.dimensions[YGDimension.Width].value = YGFloatSanitize(width);\r\n        style.dimensions[YGDimension.Width].unit = YGFloatIsUndefined(width) ? YGUnit.Auto : YGUnit.Percent;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleSetWidthAuto(node: YGNode): void {\r\n    if (node.getStyle().dimensions[YGDimension.Width].unit != YGUnit.Auto) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.dimensions[YGDimension.Width].value = 0;\r\n        style.dimensions[YGDimension.Width].unit = YGUnit.Auto;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetWidth(node: YGNode): YGValue {\r\n    const value: YGValue = node.getStyle().dimensions[YGDimension.Width];\r\n    if (value.unit == YGUnit.Undefined || value.unit == YGUnit.Auto) {\r\n        value.value = YGUndefined;\r\n    }\r\n    return value;\r\n}\r\nexport function YGNodeStyleSetHeight(node: YGNode, height: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(height),\r\n        YGFloatIsUndefined(height) ? YGUnit.Undefined : YGUnit.Point,\r\n    );\r\n\r\n    if ((node.getStyle().dimensions[YGDimension.Height].value != value.value && value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().dimensions[YGDimension.Height].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.dimensions[YGDimension.Height] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleSetHeightPercent(node: YGNode, height: number): void {\r\n    if (node.getStyle().dimensions[YGDimension.Height].value != YGFloatSanitize(height) ||\r\n        node.getStyle().dimensions[YGDimension.Height].unit != YGUnit.Percent) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.dimensions[YGDimension.Height].value = YGFloatSanitize(height);\r\n        style.dimensions[YGDimension.Height].unit = YGFloatIsUndefined(height) ? YGUnit.Auto : YGUnit.Percent;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleSetHeightAuto(node: YGNode): void {\r\n    if (node.getStyle().dimensions[YGDimension.Height].unit != YGUnit.Auto) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.dimensions[YGDimension.Height].value = 0;\r\n        style.dimensions[YGDimension.Height].unit = YGUnit.Auto;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetHeight(node: YGNode): YGValue {\r\n    const value: YGValue = node.getStyle().dimensions[YGDimension.Height];\r\n    if (value.unit == YGUnit.Undefined || value.unit == YGUnit.Auto) {\r\n        value.value = YGUndefined;\r\n    }\r\n    return value;\r\n}\r\nexport function YGNodeStyleSetMinWidth(node: YGNode, minWidth: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(minWidth),\r\n        YGFloatIsUndefined(minWidth) ? YGUnit.Undefined : YGUnit.Point\r\n    );\r\n\r\n    if ((node.getStyle().minDimensions[YGDimension.Width].value != value.value && value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().minDimensions[YGDimension.Width].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.minDimensions[YGDimension.Width] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleSetMinWidthPercent(node: YGNode, minWidth: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(minWidth),\r\n        YGFloatIsUndefined(minWidth) ? YGUnit.Undefined : YGUnit.Percent,\r\n    );\r\n\r\n    if ((node.getStyle().minDimensions[YGDimension.Width].value != value.value && value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().minDimensions[YGDimension.Width].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.minDimensions[YGDimension.Width] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetMinWidth(node: YGNode): YGValue {\r\n    const value: YGValue = node.getStyle().minDimensions[YGDimension.Width];\r\n    if (value.unit == YGUnit.Undefined || value.unit == YGUnit.Auto) {\r\n        value.value = YGUndefined;\r\n    }\r\n    return value;\r\n}\r\nexport function YGNodeStyleSetMinHeight(node: YGNode, minHeight: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(minHeight),\r\n        YGFloatIsUndefined(minHeight) ? YGUnit.Undefined : YGUnit.Point\r\n    );\r\n\r\n    if ((node.getStyle().minDimensions[YGDimension.Height].value != value.value && value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().minDimensions[YGDimension.Height].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.minDimensions[YGDimension.Height] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleSetMinHeightPercent(node: YGNode, minHeight: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(minHeight),\r\n        YGFloatIsUndefined(minHeight) ? YGUnit.Undefined : YGUnit.Percent,\r\n    );\r\n\r\n    if ((node.getStyle().minDimensions[YGDimension.Height].value != value.value && value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().minDimensions[YGDimension.Height].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.minDimensions[YGDimension.Height] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetMinHeight(node: YGNode): YGValue {\r\n    const value: YGValue = node.getStyle().minDimensions[YGDimension.Height];\r\n    if (value.unit == YGUnit.Undefined || value.unit == YGUnit.Auto) {\r\n        value.value = YGUndefined;\r\n    }\r\n    return value;\r\n}\r\nexport function YGNodeStyleSetMaxWidth(node: YGNode, maxWidth: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(maxWidth),\r\n        YGFloatIsUndefined(maxWidth) ? YGUnit.Undefined : YGUnit.Point\r\n    );\r\n\r\n    if ((node.getStyle().maxDimensions[YGDimension.Width].value != value.value && value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().maxDimensions[YGDimension.Width].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.maxDimensions[YGDimension.Width] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleSetMaxWidthPercent(node: YGNode, maxWidth: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(maxWidth),\r\n        YGFloatIsUndefined(maxWidth) ? YGUnit.Undefined : YGUnit.Percent,\r\n    );\r\n\r\n    if ((node.getStyle().maxDimensions[YGDimension.Width].value != value.value && value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().maxDimensions[YGDimension.Width].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.maxDimensions[YGDimension.Width] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetMaxWidth(node: YGNode): YGValue {\r\n    const value: YGValue = node.getStyle().maxDimensions[YGDimension.Width];\r\n    if (value.unit == YGUnit.Undefined || value.unit == YGUnit.Auto) {\r\n        value.value = YGUndefined;\r\n    }\r\n    return value;\r\n}\r\nexport function YGNodeStyleSetMaxHeight(node: YGNode, maxHeight: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(maxHeight),\r\n        YGFloatIsUndefined(maxHeight) ? YGUnit.Undefined : YGUnit.Point\r\n    );\r\n\r\n    if ((node.getStyle().maxDimensions[YGDimension.Height].value != value.value && value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().maxDimensions[YGDimension.Height].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.maxDimensions[YGDimension.Height] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleSetMaxHeightPercent(node: YGNode, maxHeight: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(maxHeight),\r\n        YGFloatIsUndefined(maxHeight) ? YGUnit.Undefined : YGUnit.Percent,\r\n    );\r\n\r\n    if ((node.getStyle().maxDimensions[YGDimension.Height].value != value.value && value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().maxDimensions[YGDimension.Height].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.maxDimensions[YGDimension.Height] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetMaxHeight(node: YGNode): YGValue {\r\n    const value: YGValue = node.getStyle().maxDimensions[YGDimension.Height];\r\n    if (value.unit == YGUnit.Undefined || value.unit == YGUnit.Auto) {\r\n        value.value = YGUndefined;\r\n    }\r\n    return value;\r\n}\r\nexport function YGNodeLayoutGetLeft(node: YGNode): number {\r\n    return node.getLayout().position[YGEdge.Left];\r\n}\r\nexport function YGNodeLayoutGetTop(node: YGNode): number {\r\n    return node.getLayout().position[YGEdge.Top];\r\n}\r\nexport function YGNodeLayoutGetRight(node: YGNode): number {\r\n    return node.getLayout().position[YGEdge.Right];\r\n}\r\nexport function YGNodeLayoutGetBottom(node: YGNode): number {\r\n    return node.getLayout().position[YGEdge.Bottom];\r\n}\r\nexport function YGNodeLayoutGetWidth(node: YGNode): number {\r\n    return node.getLayout().dimensions[YGDimension.Width];\r\n}\r\nexport function YGNodeLayoutGetHeight(node: YGNode): number {\r\n    return node.getLayout().dimensions[YGDimension.Height];\r\n}\r\nexport function YGNodeLayoutGetDirection(node: YGNode): YGDirection {\r\n    return node.getLayout().direction;\r\n}\r\nexport function YGNodeLayoutGetHadOverflow(node: YGNode): boolean {\r\n    return node.getLayout().hadOverflow;\r\n}\r\nexport function YGNodeLayoutGetMargin(node: YGNode, edge: YGEdge): number {\r\n    YGAssertWithNode(node, edge <= YGEdge.End, \"Cannot get layout properties of multi-edge shorthands\");\r\n\r\n    if (edge == YGEdge.Left) {\r\n        if (node.getLayout().direction == YGDirection.RTL) {\r\n            return node.getLayout().margin[YGEdge.End];\r\n        } else {\r\n            return node.getLayout().margin[YGEdge.Start];\r\n        }\r\n    }\r\n\r\n    if (edge == YGEdge.Right) {\r\n        if (node.getLayout().direction == YGDirection.RTL) {\r\n            return node.getLayout().margin[YGEdge.Start];\r\n        } else {\r\n            return node.getLayout().margin[YGEdge.End];\r\n        }\r\n    }\r\n\r\n    return node.getLayout().margin[edge as number];\r\n}\r\nexport function YGNodeLayoutGetBorder(node: YGNode, edge: YGEdge): number {\r\n    YGAssertWithNode(node, edge <= YGEdge.End, \"Cannot get layout properties of multi-edge shorthands\");\r\n\r\n    if (edge == YGEdge.Left) {\r\n        if (node.getLayout().direction == YGDirection.RTL) {\r\n            return node.getLayout().border[YGEdge.End];\r\n        } else {\r\n            return node.getLayout().border[YGEdge.Start];\r\n        }\r\n    }\r\n\r\n    if (edge == YGEdge.Right) {\r\n        if (node.getLayout().direction == YGDirection.RTL) {\r\n            return node.getLayout().border[YGEdge.Start];\r\n        } else {\r\n            return node.getLayout().border[YGEdge.End];\r\n        }\r\n    }\r\n\r\n    return node.getLayout().border[edge as number];\r\n}\r\nexport function YGNodeLayoutGetPadding(node: YGNode, edge: YGEdge): number {\r\n    YGAssertWithNode(node, edge <= YGEdge.End, \"Cannot get layout properties of multi-edge shorthands\");\r\n\r\n    if (edge == YGEdge.Left) {\r\n        if (node.getLayout().direction == YGDirection.RTL) {\r\n            return node.getLayout().padding[YGEdge.End];\r\n        } else {\r\n            return node.getLayout().padding[YGEdge.Start];\r\n        }\r\n    }\r\n\r\n    if (edge == YGEdge.Right) {\r\n        if (node.getLayout().direction == YGDirection.RTL) {\r\n            return node.getLayout().padding[YGEdge.Start];\r\n        } else {\r\n            return node.getLayout().padding[YGEdge.End];\r\n        }\r\n    }\r\n\r\n    return node.getLayout().padding[edge as number];\r\n}\r\n\r\n// MACROS END\r\n\r\nexport function YGNodeStyleSetFlex(node: YGNode, flex: number): void {\r\n    if (node.getStyle().flex.isDiffValue(flex)) {\r\n        const style: YGStyle = node.getStyle();\r\n        if (YGFloatIsUndefined(flex)) {\r\n            style.flex = new YGFloatOptional();\r\n        } else {\r\n            style.flex = new YGFloatOptional(flex);\r\n        }\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetFlex(node: YGNode): number {\r\n    return node.getStyle().flex.isUndefined() ? YGUndefined : node.getStyle().flex.getValue();\r\n}\r\n\r\nexport function YGNodeStyleSetFlexGrow(node: YGNode, flexGrow: number): void {\r\n    if (node.getStyle().flexGrow.isDiffValue(flexGrow)) {\r\n        const style: YGStyle = node.getStyle();\r\n        if (YGFloatIsUndefined(flexGrow)) {\r\n            style.flexGrow = new YGFloatOptional();\r\n        } else {\r\n            style.flexGrow = new YGFloatOptional(flexGrow);\r\n        }\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleSetFlexShrink(node: YGNode, flexShrink: number): void {\r\n    if (node.getStyle().flexShrink.isDiffValue(flexShrink)) {\r\n        const style: YGStyle = node.getStyle();\r\n        if (YGFloatIsUndefined(flexShrink)) {\r\n            style.flexShrink = new YGFloatOptional();\r\n        } else {\r\n            style.flexShrink = new YGFloatOptional(flexShrink);\r\n        }\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetFlexBasis(node: YGNode): YGValue {\r\n    const flexBasis: YGValue = node.getStyle().flexBasis;\r\n    if (flexBasis.unit == YGUnit.Undefined || flexBasis.unit == YGUnit.Auto) {\r\n        flexBasis.value = YGUndefined;\r\n    }\r\n    return flexBasis;\r\n}\r\n\r\nexport function YGNodeStyleSetFlexBasis(node: YGNode, flexBasis: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(flexBasis),\r\n        YGFloatIsUndefined(flexBasis) ? YGUnit.Undefined : YGUnit.Point,\r\n    );\r\n\r\n    if ((node.getStyle().flexBasis.value != value.value && value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().flexBasis.unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.flexBasis = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleSetFlexBasisPercent(node: YGNode, flexBasisPercent: number): void {\r\n    if (node.getStyle().flexBasis.value != flexBasisPercent || node.getStyle().flexBasis.unit != YGUnit.Percent) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.flexBasis.value = YGFloatSanitize(flexBasisPercent);\r\n        style.flexBasis.unit = YGFloatIsUndefined(flexBasisPercent) ? YGUnit.Auto : YGUnit.Percent;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleSetFlexBasisAuto(node: YGNode): void {\r\n    if (node.getStyle().flexBasis.unit != YGUnit.Auto) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.flexBasis.value = 0;\r\n        style.flexBasis.unit = YGUnit.Auto;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleSetBorder(node: YGNode, edge: YGEdge, border: number): void {\r\n    const value: YGValue = new YGValue(\r\n        YGFloatSanitize(border),\r\n        YGFloatIsUndefined(border) ? YGUnit.Undefined : YGUnit.Point,\r\n    );\r\n\r\n    if ((node.getStyle().border[edge].value != value.value && value.unit != YGUnit.Undefined) ||\r\n        node.getStyle().border[edge].unit != value.unit) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.border[edge] = value;\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeStyleGetBorder(node: YGNode, edge: YGEdge): number {\r\n    if (node.getStyle().border[edge].unit == YGUnit.Undefined ||\r\n        node.getStyle().border[edge].unit == YGUnit.Auto) {\r\n        return YGUndefined;\r\n    }\r\n\r\n    return node.getStyle().border[edge].value;\r\n}\r\n\r\nexport function YGNodeStyleGetAspectRatio(node: YGNode): number {\r\n    const op: YGFloatOptional = node.getStyle().aspectRatio;\r\n    return op.isUndefined() ? YGUndefined : op.getValue();\r\n}\r\n\r\nexport function YGNodeStyleSetAspectRatio(node: YGNode, aspectRatio: number): void {\r\n    if (node.getStyle().aspectRatio.isDiffValue(aspectRatio)) {\r\n        const style: YGStyle = node.getStyle();\r\n        style.aspectRatio = new YGFloatOptional(aspectRatio);\r\n        node.setStyle(style);\r\n        node.markDirtyAndPropogate();\r\n    }\r\n}\r\n\r\nexport function YGNodeLayoutGetDidLegacyStretchFlagAffectLayout(node: YGNode): boolean {\r\n    return node.getLayout().doesLegacyStretchFlagAffectsLayout;\r\n}\r\n\r\nlet gCurrentGenerationCount = 0;\r\n\r\nexport function YGNodePrintInternal(node: YGNode, options: YGPrintOptions): void {\r\n    //const str: string = YGNodeToString(str, node, options, 0);\r\n    //YGLog(node, YGLogLevel.Debug, str);\r\n}\r\n\r\nexport function YGNodePrint(node: YGNode, options: YGPrintOptions): void {\r\n    YGNodePrintInternal(node, options);\r\n}\r\n\r\nexport function YGNodePaddingAndBorderForAxis(node: YGNode, axis: YGFlexDirection, widthSize: number): number {\r\n    return YGUnwrapFloatOptional(node.getLeadingPaddingAndBorder(axis, widthSize).add(node.getTrailingPaddingAndBorder(axis, widthSize)));\r\n}\r\n\r\nexport function YGNodeAlignItem(node: YGNode, child: YGNode): YGAlign {\r\n    const align: YGAlign = child.getStyle().alignSelf == YGAlign.Auto\r\n        ? node.getStyle().alignItems\r\n        : child.getStyle().alignSelf;\r\n    if (align == YGAlign.Baseline && YGFlexDirectionIsColumn(node.getStyle().flexDirection)) {\r\n        return YGAlign.FlexStart;\r\n    }\r\n    return align;\r\n}\r\n\r\nexport function YGBaseline(node: YGNode): number {\r\n    if (node.getBaseline() != null) {\r\n        const baseline: number = node.getBaseline()(node, node.getLayout().measuredDimensions[YGDimension.Width], node.getLayout().measuredDimensions[YGDimension.Height]);\r\n        YGAssertWithNode(node, !YGFloatIsUndefined(baseline), \"Expect custom baseline function to not return NaN\");\r\n        return baseline;\r\n    }\r\n\r\n    let baselineChild: YGNode = null;\r\n    const childCount = YGNodeGetChildCount(node);\r\n    for (let i: number = 0; i < childCount; i++) {\r\n        const child: YGNode = YGNodeGetChild(node, i);\r\n        if (child.getLineIndex() > 0) {\r\n            break;\r\n        }\r\n\r\n        if (child.getStyle().positionType == YGPositionType.Absolute) {\r\n            continue;\r\n        }\r\n\r\n        if (YGNodeAlignItem(node, child) == YGAlign.Baseline) {\r\n            baselineChild = child;\r\n            break;\r\n        }\r\n\r\n        if (baselineChild == null) {\r\n            baselineChild = child;\r\n        }\r\n    }\r\n\r\n    if (baselineChild == null) {\r\n        return node.getLayout().measuredDimensions[YGDimension.Height];\r\n    }\r\n\r\n    const baseline: number = YGBaseline(baselineChild);\r\n    return baseline + baselineChild.getLayout().position[YGEdge.Top];\r\n}\r\n\r\nexport function YGIsBaselineLayout(node: YGNode): boolean {\r\n    if (YGFlexDirectionIsColumn(node.getStyle().flexDirection)) {\r\n        return false;\r\n    }\r\n\r\n    if (node.getStyle().alignItems == YGAlign.Baseline) {\r\n        return true;\r\n    }\r\n\r\n    const childCount: number = YGNodeGetChildCount(node);\r\n    for (let i: number = 0; i < childCount; i++) {\r\n        const child: YGNode = YGNodeGetChild(node, i);\r\n        if (child.getStyle().positionType == YGPositionType.Relative &&\r\n            child.getStyle().alignSelf == YGAlign.Baseline) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function YGNodeDimWithMargin(node: YGNode, axis: YGFlexDirection, widthSize: number) {\r\n    return node.getLayout().measuredDimensions[dim[axis]] +\r\n        YGUnwrapFloatOptional(\r\n            node.getLeadingMargin(axis, widthSize).add(node.getTrailingMargin(axis, widthSize))\r\n        );\r\n}\r\n\r\nexport function YGNodeIsStyleDimDefined(node: YGNode, axis: YGFlexDirection, ownerSize: number): boolean {\r\n    let isUndefined: boolean = YGFloatIsUndefined(node.getResolvedDimension(dim[axis]).value);\r\n    return !(\r\n        node.getResolvedDimension(dim[axis]).unit == YGUnit.Auto ||\r\n        node.getResolvedDimension(dim[axis]).unit == YGUnit.Undefined ||\r\n        (node.getResolvedDimension(dim[axis]).unit == YGUnit.Point &&\r\n            !isUndefined && node.getResolvedDimension(dim[axis]).value < 0.0) ||\r\n        (node.getResolvedDimension(dim[axis]).unit == YGUnit.Percent &&\r\n            !isUndefined &&\r\n            (node.getResolvedDimension(dim[axis]).value < 0.0 ||\r\n                YGFloatIsUndefined(ownerSize))));\r\n}\r\n\r\nexport function YGNodeIsLayoutDimDefined(node: YGNode, axis: YGFlexDirection): boolean {\r\n    const value: number = node.getLayout().measuredDimensions[dim[axis]];\r\n    return !YGFloatIsUndefined(value) && value >= 0.0;\r\n}\r\n\r\n\r\nexport function YGNodeBoundAxisWithinMinAndMax(node: YGNode, axis: YGFlexDirection, value: number, axisSize: number): YGFloatOptional {\r\n    let min: YGFloatOptional;\r\n    let max: YGFloatOptional;\r\n\r\n    if (YGFlexDirectionIsColumn(axis)) {\r\n        min = YGResolveValue(node.getStyle().minDimensions[YGDimension.Height], axisSize);\r\n        max = YGResolveValue(node.getStyle().maxDimensions[YGDimension.Height], axisSize);\r\n    } else if (YGFlexDirectionIsRow(axis)) {\r\n        min = YGResolveValue(node.getStyle().minDimensions[YGDimension.Width], axisSize);\r\n        max = YGResolveValue(node.getStyle().maxDimensions[YGDimension.Width], axisSize);\r\n    }\r\n\r\n    if (!max.isUndefined() && max.getValue() >= 0 && value > max.getValue()) {\r\n        return max;\r\n    }\r\n\r\n    if (!min.isUndefined() && min.getValue() >= 0 && value < min.getValue()) {\r\n        return min;\r\n    }\r\n\r\n    return new YGFloatOptional(value);\r\n}\r\n\r\nexport function YGNodeBoundAxis(node: YGNode, axis: YGFlexDirection, value: number, axisSize: number, widthSize: number) {\r\n    return YGFloatMax(\r\n        YGUnwrapFloatOptional(\r\n            YGNodeBoundAxisWithinMinAndMax(node, axis, value, axisSize)),\r\n        YGNodePaddingAndBorderForAxis(node, axis, widthSize));\r\n}\r\n\r\nexport function YGNodeSetChildTrailingPosition(node: YGNode, child: YGNode, axis: YGFlexDirection) {\r\n    const size: number = child.getLayout().measuredDimensions[dim[axis]];\r\n    child.setLayoutPosition(\r\n        node.getLayout().measuredDimensions[dim[axis]] - size -\r\n        child.getLayout().position[pos[axis] as number],\r\n        trailing[axis]);\r\n}\r\n\r\n\r\nexport function YGConstrainMaxSizeForMode(node: YGNode, axis: YGFlexDirection, ownerAxisSize: number, ownerWidth: number, mode: { value: YGMeasureMode }, size: { value: number }): void {\r\n    const maxSize: YGFloatOptional = YGResolveValue(node.getStyle().maxDimensions[dim[axis]], ownerAxisSize).add(node.getMarginForAxis(axis, ownerWidth));\r\n\r\n    switch (mode.value) {\r\n        case YGMeasureMode.Exactly:\r\n        case YGMeasureMode.AtMost:\r\n            size.value = (maxSize.isUndefined() || size.value < maxSize.getValue()) ? size.value : maxSize.getValue();\r\n            break;\r\n        case YGMeasureMode.Undefined:\r\n            if (!maxSize.isUndefined()) {\r\n                mode.value = YGMeasureMode.AtMost;\r\n                size.value = maxSize.getValue();\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\n\r\nexport function YGNodeComputeFlexBasisForChild(node: YGNode, child: YGNode, width: number, widthMode: YGMeasureMode, height: number, ownerWidth: number, ownerHeight: number, heightMode: YGMeasureMode, direction: YGDirection, config: YGConfig): void {\r\n    const mainAxis: YGFlexDirection = YGResolveFlexDirection(node.getStyle().flexDirection, direction);\r\n    const isMainAxisRow: boolean = YGFlexDirectionIsRow(mainAxis);\r\n    const mainAxisSize: number = isMainAxisRow ? width : height;\r\n    const mainAxisownerSize: number = isMainAxisRow ? ownerWidth : ownerHeight;\r\n\r\n    let childWidth: number;\r\n    let childHeight: number;\r\n    let childWidthMeasureMode: YGMeasureMode;\r\n    let childHeightMeasureMode: YGMeasureMode;\r\n\r\n    const resolvedFlexBasis: YGFloatOptional = YGResolveValue(child.resolveFlexBasisPtr(), mainAxisownerSize);\r\n    const isRowStyleDimDefined: boolean = YGNodeIsStyleDimDefined(child, YGFlexDirection.Row, ownerWidth);\r\n    const isColumnStyleDimDefined: boolean = YGNodeIsStyleDimDefined(child, YGFlexDirection.Column, ownerHeight);\r\n\r\n    if (!resolvedFlexBasis.isUndefined() && !YGFloatIsUndefined(mainAxisSize)) {\r\n        if (child.getLayout().computedFlexBasis.isUndefined() ||\r\n            (YGConfigIsExperimentalFeatureEnabled(child.getConfig(), YGExperimentalFeature.WebFlexBasis) &&\r\n                child.getLayout().computedFlexBasisGeneration != gCurrentGenerationCount)) {\r\n            const paddingAndBorder: YGFloatOptional = new YGFloatOptional(YGNodePaddingAndBorderForAxis(child, mainAxis, ownerWidth));\r\n            child.setLayoutComputedFlexBasis(YGFloatOptionalMax(resolvedFlexBasis, paddingAndBorder));\r\n        }\r\n    } else if (isMainAxisRow && isRowStyleDimDefined) {\r\n        const paddingAndBorder: YGFloatOptional = new YGFloatOptional(YGNodePaddingAndBorderForAxis(child, YGFlexDirection.Row, ownerWidth));\r\n        child.setLayoutComputedFlexBasis(YGFloatOptionalMax(YGResolveValue(child.getResolvedDimension(YGDimension.Width), ownerWidth), paddingAndBorder));\r\n    } else if (!isMainAxisRow && isColumnStyleDimDefined) {\r\n        const paddingAndBorder: YGFloatOptional = new YGFloatOptional(YGNodePaddingAndBorderForAxis(child, YGFlexDirection.Column, ownerWidth));\r\n        child.setLayoutComputedFlexBasis(YGFloatOptionalMax(YGResolveValue(child.getResolvedDimension(YGDimension.Height), ownerHeight), paddingAndBorder));\r\n    } else {\r\n        childWidth = YGUndefined;\r\n        childHeight = YGUndefined;\r\n        childWidthMeasureMode = YGMeasureMode.Undefined;\r\n        childHeightMeasureMode = YGMeasureMode.Undefined;\r\n\r\n        const marginRow: number = YGUnwrapFloatOptional(child.getMarginForAxis(YGFlexDirection.Row, ownerWidth));\r\n        const marginColumn: number = YGUnwrapFloatOptional(child.getMarginForAxis(YGFlexDirection.Column, ownerWidth));\r\n\r\n        if (isRowStyleDimDefined) {\r\n            childWidth = YGUnwrapFloatOptional(YGResolveValue(child.getResolvedDimension(YGDimension.Width), ownerWidth)) + marginRow;\r\n            childWidthMeasureMode = YGMeasureMode.Exactly;\r\n        }\r\n        if (isColumnStyleDimDefined) {\r\n            childHeight = YGUnwrapFloatOptional(YGResolveValue(child.getResolvedDimension(YGDimension.Height), ownerHeight)) + marginColumn;\r\n            childHeightMeasureMode = YGMeasureMode.Exactly;\r\n        }\r\n        if ((!isMainAxisRow && node.getStyle().overflow == YGOverflow.Scroll) ||\r\n            node.getStyle().overflow != YGOverflow.Scroll) {\r\n            if (YGFloatIsUndefined(childWidth) && !YGFloatIsUndefined(width)) {\r\n                childWidth = width;\r\n                childWidthMeasureMode = YGMeasureMode.AtMost;\r\n            }\r\n        }\r\n\r\n        if ((isMainAxisRow && node.getStyle().overflow == YGOverflow.Scroll) ||\r\n            node.getStyle().overflow != YGOverflow.Scroll) {\r\n            if (YGFloatIsUndefined(childHeight) && !YGFloatIsUndefined(height)) {\r\n                childHeight = height;\r\n                childHeightMeasureMode = YGMeasureMode.AtMost;\r\n            }\r\n        }\r\n\r\n        if (!child.getStyle().aspectRatio.isUndefined()) {\r\n            if (!isMainAxisRow && childWidthMeasureMode == YGMeasureMode.Exactly) {\r\n                childHeight = marginColumn + (childWidth - marginRow) / child.getStyle().aspectRatio.getValue();\r\n                childHeightMeasureMode = YGMeasureMode.Exactly;\r\n            } else if (isMainAxisRow && childHeightMeasureMode == YGMeasureMode.Exactly) {\r\n                childWidth = marginRow + (childHeight - marginColumn) * child.getStyle().aspectRatio.getValue();\r\n                childWidthMeasureMode = YGMeasureMode.Exactly;\r\n            }\r\n        }\r\n\r\n        const hasExactWidth: boolean = !YGFloatIsUndefined(width) && widthMode == YGMeasureMode.Exactly;\r\n        const childWidthStretch: boolean = YGNodeAlignItem(node, child) == YGAlign.Stretch && childWidthMeasureMode != YGMeasureMode.Exactly;\r\n        if (!isMainAxisRow && !isRowStyleDimDefined && hasExactWidth && childWidthStretch) {\r\n            childWidth = width;\r\n            childWidthMeasureMode = YGMeasureMode.Exactly;\r\n            if (!child.getStyle().aspectRatio.isUndefined()) {\r\n                childHeight =\r\n                    (childWidth - marginRow) / child.getStyle().aspectRatio.getValue();\r\n                childHeightMeasureMode = YGMeasureMode.Exactly;\r\n            }\r\n        }\r\n\r\n        const hasExactHeight: boolean = !YGFloatIsUndefined(height) && heightMode == YGMeasureMode.Exactly;\r\n        const childHeightStretch: boolean = YGNodeAlignItem(node, child) == YGAlign.Stretch && childHeightMeasureMode != YGMeasureMode.Exactly;\r\n\r\n        if (isMainAxisRow && !isColumnStyleDimDefined && hasExactHeight && childHeightStretch) {\r\n            childHeight = height;\r\n            childHeightMeasureMode = YGMeasureMode.Exactly;\r\n\r\n            if (!child.getStyle().aspectRatio.isUndefined()) {\r\n                childWidth = (childHeight - marginColumn) * child.getStyle().aspectRatio.getValue();\r\n                childWidthMeasureMode = YGMeasureMode.Exactly;\r\n            }\r\n        }\r\n\r\n        let childWidthMeasureModeRef = { value: childWidthMeasureMode }\r\n        let childWidthRef = { value: childWidth }\r\n        let childHeightMeasureModeRef = { value: childHeightMeasureMode }\r\n        let childHeightRef = { value: childHeight }\r\n\r\n        YGConstrainMaxSizeForMode(child, YGFlexDirection.Row, ownerWidth, ownerWidth, childWidthMeasureModeRef, childWidthRef);\r\n        YGConstrainMaxSizeForMode(child, YGFlexDirection.Column, ownerHeight, ownerWidth, childHeightMeasureModeRef, childHeightRef);\r\n\r\n        YGLayoutNodeInternal(child,\r\n            childWidthRef.value,\r\n            childHeightRef.value,\r\n            direction,\r\n            childWidthMeasureModeRef.value,\r\n            childHeightMeasureModeRef.value,\r\n            ownerWidth,\r\n            ownerHeight,\r\n            false,\r\n            \"measure\",\r\n            config);\r\n\r\n        child.setLayoutComputedFlexBasis(new YGFloatOptional(YGFloatMax(\r\n            child.getLayout().measuredDimensions[dim[mainAxis]],\r\n            YGNodePaddingAndBorderForAxis(child, mainAxis, ownerWidth))));\r\n    }\r\n    child.setLayoutComputedFlexBasisGeneration(gCurrentGenerationCount);\r\n}\r\n\r\nexport function YGNodeAbsoluteLayoutChild(node: YGNode, child: YGNode, width: number, widthMode: YGMeasureMode, height: number, direction: YGDirection, config: YGConfig): void {\r\n    const mainAxis: YGFlexDirection = YGResolveFlexDirection(node.getStyle().flexDirection, direction);\r\n    const crossAxis: YGFlexDirection = YGFlexDirectionCross(mainAxis, direction);\r\n    const isMainAxisRow: boolean = YGFlexDirectionIsRow(mainAxis);\r\n\r\n    let childWidth: number = YGUndefined;\r\n    let childHeight: number = YGUndefined;\r\n    let childWidthMeasureMode: YGMeasureMode = YGMeasureMode.Undefined;\r\n    let childHeightMeasureMode: YGMeasureMode = YGMeasureMode.Undefined;\r\n\r\n    const marginRow: number = YGUnwrapFloatOptional(child.getMarginForAxis(YGFlexDirection.Row, width));\r\n    const marginColumn: number = YGUnwrapFloatOptional(child.getMarginForAxis(YGFlexDirection.Column, width));\r\n\r\n    if (YGNodeIsStyleDimDefined(child, YGFlexDirection.Row, width)) {\r\n        childWidth = YGUnwrapFloatOptional(YGResolveValue(child.getResolvedDimension(YGDimension.Width), width)) + marginRow;\r\n    } else {\r\n        if (child.isLeadingPositionDefined(YGFlexDirection.Row) && child.isTrailingPosDefined(YGFlexDirection.Row)) {\r\n            childWidth = node.getLayout().measuredDimensions[YGDimension.Width] -\r\n                (node.getLeadingBorder(YGFlexDirection.Row) +\r\n                    node.getTrailingBorder(YGFlexDirection.Row)) -\r\n                YGUnwrapFloatOptional(child.getLeadingPosition(YGFlexDirection.Row, width).add(child.getTrailingPosition(YGFlexDirection.Row, width)));\r\n            childWidth = YGNodeBoundAxis(child, YGFlexDirection.Row, childWidth, width, width);\r\n        }\r\n    }\r\n\r\n    if (YGNodeIsStyleDimDefined(child, YGFlexDirection.Column, height)) {\r\n        childHeight =\r\n            YGUnwrapFloatOptional(YGResolveValue(child.getResolvedDimension(YGDimension.Height), height)) +\r\n            marginColumn;\r\n    } else {\r\n        if (child.isLeadingPositionDefined(YGFlexDirection.Column) && child.isTrailingPosDefined(YGFlexDirection.Column)) {\r\n            childHeight =\r\n                node.getLayout().measuredDimensions[YGDimension.Height] -\r\n                (node.getLeadingBorder(YGFlexDirection.Column) +\r\n                    node.getTrailingBorder(YGFlexDirection.Column)) -\r\n                YGUnwrapFloatOptional(\r\n                    child.getLeadingPosition(YGFlexDirection.Column, height).add(\r\n                        child.getTrailingPosition(YGFlexDirection.Column, height)));\r\n            childHeight = YGNodeBoundAxis(child, YGFlexDirection.Column, childHeight, height, width);\r\n        }\r\n    }\r\n\r\n    if (YGFloatIsUndefined(childWidth) ? !YGFloatIsUndefined(childHeight) : YGFloatIsUndefined(childHeight)) { // if( foo ? !bar : bar ) { XOR ^ REMOVED\r\n        if (!child.getStyle().aspectRatio.isUndefined()) {\r\n            if (YGFloatIsUndefined(childWidth)) {\r\n                childWidth = marginRow + (childHeight - marginColumn) * child.getStyle().aspectRatio.getValue();\r\n            } else if (YGFloatIsUndefined(childHeight)) {\r\n                childHeight = marginColumn + (childWidth - marginRow) / child.getStyle().aspectRatio.getValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    if (YGFloatIsUndefined(childWidth) || YGFloatIsUndefined(childHeight)) {\r\n        childWidthMeasureMode = YGFloatIsUndefined(childWidth) ? YGMeasureMode.Undefined : YGMeasureMode.Exactly;\r\n        childHeightMeasureMode = YGFloatIsUndefined(childHeight) ? YGMeasureMode.Undefined : YGMeasureMode.Exactly;\r\n\r\n        if (!isMainAxisRow && YGFloatIsUndefined(childWidth) && widthMode != YGMeasureMode.Undefined && !YGFloatIsUndefined(width) && width > 0) {\r\n            childWidth = width;\r\n            childWidthMeasureMode = YGMeasureMode.AtMost;\r\n        }\r\n\r\n        YGLayoutNodeInternal(child,\r\n            childWidth,\r\n            childHeight,\r\n            direction,\r\n            childWidthMeasureMode,\r\n            childHeightMeasureMode,\r\n            childWidth,\r\n            childHeight,\r\n            false,\r\n            \"abs-measure\",\r\n            config);\r\n\r\n        childWidth = child.getLayout().measuredDimensions[YGDimension.Width] +\r\n            YGUnwrapFloatOptional(child.getMarginForAxis(YGFlexDirection.Row, width));\r\n        childHeight = child.getLayout().measuredDimensions[YGDimension.Height] +\r\n            YGUnwrapFloatOptional(child.getMarginForAxis(YGFlexDirection.Column, width));\r\n    }\r\n\r\n    YGLayoutNodeInternal(child,\r\n        childWidth,\r\n        childHeight,\r\n        direction,\r\n        YGMeasureMode.Exactly,\r\n        YGMeasureMode.Exactly,\r\n        childWidth,\r\n        childHeight,\r\n        true,\r\n        \"abs-layout\",\r\n        config);\r\n\r\n    if (child.isTrailingPosDefined(mainAxis) && !child.isLeadingPositionDefined(mainAxis)) {\r\n        child.setLayoutPosition(\r\n            node.getLayout().measuredDimensions[dim[mainAxis]] -\r\n            child.getLayout().measuredDimensions[dim[mainAxis]] -\r\n            node.getTrailingBorder(mainAxis) -\r\n            YGUnwrapFloatOptional(child.getTrailingMargin(mainAxis, width)) -\r\n            YGUnwrapFloatOptional(child.getTrailingPosition(\r\n                mainAxis, isMainAxisRow ? width : height)),\r\n            leading[mainAxis]);\r\n    } else if (!child.isLeadingPositionDefined(mainAxis) && node.getStyle().justifyContent == YGJustify.Center) {\r\n        child.setLayoutPosition(\r\n            (node.getLayout().measuredDimensions[dim[mainAxis]] -\r\n                child.getLayout().measuredDimensions[dim[mainAxis]]) /\r\n            2.0,\r\n            leading[mainAxis]);\r\n    } else if (\r\n        !child.isLeadingPositionDefined(mainAxis) && node.getStyle().justifyContent == YGJustify.FlexEnd) {\r\n        child.setLayoutPosition(\r\n            (node.getLayout().measuredDimensions[dim[mainAxis]] -\r\n                child.getLayout().measuredDimensions[dim[mainAxis]]),\r\n            leading[mainAxis]);\r\n    }\r\n\r\n    if (child.isTrailingPosDefined(crossAxis) && !child.isLeadingPositionDefined(crossAxis)) {\r\n        child.setLayoutPosition(\r\n            node.getLayout().measuredDimensions[dim[crossAxis]] -\r\n            child.getLayout().measuredDimensions[dim[crossAxis]] -\r\n            node.getTrailingBorder(crossAxis) -\r\n            YGUnwrapFloatOptional(child.getTrailingMargin(crossAxis, width)) -\r\n            YGUnwrapFloatOptional(child.getTrailingPosition(\r\n                crossAxis, isMainAxisRow ? height : width)),\r\n            leading[crossAxis]);\r\n\r\n    } else if (!child.isLeadingPositionDefined(crossAxis) && YGNodeAlignItem(node, child) == YGAlign.Center) {\r\n        child.setLayoutPosition(\r\n            (node.getLayout().measuredDimensions[dim[crossAxis]] -\r\n                child.getLayout().measuredDimensions[dim[crossAxis]]) /\r\n            2.0,\r\n            leading[crossAxis]);\r\n    } else if (!child.isLeadingPositionDefined(crossAxis) &&\r\n        (YGNodeAlignItem(node, child) == YGAlign.FlexEnd ? !(node.getStyle().flexWrap == YGWrap.WrapReverse) : (node.getStyle().flexWrap == YGWrap.WrapReverse))) { // XOR\r\n        child.setLayoutPosition(\r\n            (node.getLayout().measuredDimensions[dim[crossAxis]] -\r\n                child.getLayout().measuredDimensions[dim[crossAxis]]),\r\n            leading[crossAxis]);\r\n    }\r\n}\r\n\r\nexport function YGNodeWithMeasureFuncSetMeasuredDimensions(node: YGNode, availableWidth: number, availableHeight: number, widthMeasureMode: YGMeasureMode, heightMeasureMode: YGMeasureMode, ownerWidth: number, ownerHeight: number): void {\r\n    YGAssertWithNode(node, node.getMeasure() != null, \"Expected node to have custom measure function\");\r\n\r\n    const paddingAndBorderAxisRow: number = YGNodePaddingAndBorderForAxis(node, YGFlexDirection.Row, availableWidth);\r\n    const paddingAndBorderAxisColumn: number = YGNodePaddingAndBorderForAxis(node, YGFlexDirection.Column, availableWidth);\r\n    const marginAxisRow: number = YGUnwrapFloatOptional(node.getMarginForAxis(YGFlexDirection.Row, availableWidth));\r\n    const marginAxisColumn: number = YGUnwrapFloatOptional(node.getMarginForAxis(YGFlexDirection.Column, availableWidth));\r\n    const innerWidth: number = YGFloatIsUndefined(availableWidth)\r\n        ? availableWidth\r\n        : YGFloatMax(0, availableWidth - marginAxisRow - paddingAndBorderAxisRow);\r\n    const innerHeight: number = YGFloatIsUndefined(availableHeight)\r\n        ? availableHeight\r\n        : YGFloatMax(0, availableHeight - marginAxisColumn - paddingAndBorderAxisColumn);\r\n\r\n    if (widthMeasureMode == YGMeasureMode.Exactly && heightMeasureMode == YGMeasureMode.Exactly) {\r\n        node.setLayoutMeasuredDimension(\r\n            YGNodeBoundAxis(\r\n                node,\r\n                YGFlexDirection.Row,\r\n                availableWidth - marginAxisRow,\r\n                ownerWidth,\r\n                ownerWidth),\r\n            YGDimension.Width);\r\n\r\n        node.setLayoutMeasuredDimension(\r\n            YGNodeBoundAxis(\r\n                node,\r\n                YGFlexDirection.Column,\r\n                availableHeight - marginAxisColumn,\r\n                ownerHeight,\r\n                ownerWidth),\r\n            YGDimension.Height);\r\n    } else {\r\n\r\n        const measuredSize: YGSize = node.getMeasure()(node, innerWidth, widthMeasureMode, innerHeight, heightMeasureMode);\r\n\r\n        node.setLayoutMeasuredDimension(\r\n            YGNodeBoundAxis(\r\n                node,\r\n                YGFlexDirection.Row,\r\n                (widthMeasureMode == YGMeasureMode.Undefined ||\r\n                    widthMeasureMode == YGMeasureMode.AtMost)\r\n                    ? measuredSize.width + paddingAndBorderAxisRow\r\n                    : availableWidth - marginAxisRow,\r\n                ownerWidth,\r\n                ownerWidth),\r\n            YGDimension.Width);\r\n\r\n        node.setLayoutMeasuredDimension(\r\n            YGNodeBoundAxis(\r\n                node,\r\n                YGFlexDirection.Column,\r\n                (heightMeasureMode == YGMeasureMode.Undefined ||\r\n                    heightMeasureMode == YGMeasureMode.AtMost)\r\n                    ? measuredSize.height + paddingAndBorderAxisColumn\r\n                    : availableHeight - marginAxisColumn,\r\n                ownerHeight,\r\n                ownerWidth),\r\n            YGDimension.Height);\r\n    }\r\n}\r\n\r\nexport function YGNodeEmptyContainerSetMeasuredDimensions(node: YGNode, availableWidth: number, availableHeight: number, widthMeasureMode: YGMeasureMode, heightMeasureMode: YGMeasureMode, ownerWidth: number, ownerHeight: number): void {\r\n    const paddingAndBorderAxisRow: number = YGNodePaddingAndBorderForAxis(node, YGFlexDirection.Row, ownerWidth);\r\n    const paddingAndBorderAxisColumn: number = YGNodePaddingAndBorderForAxis(node, YGFlexDirection.Column, ownerWidth);\r\n    const marginAxisRow: number = YGUnwrapFloatOptional(node.getMarginForAxis(YGFlexDirection.Row, ownerWidth));\r\n    const marginAxisColumn: number = YGUnwrapFloatOptional(node.getMarginForAxis(YGFlexDirection.Column, ownerWidth));\r\n\r\n    node.setLayoutMeasuredDimension(\r\n        YGNodeBoundAxis(\r\n            node,\r\n            YGFlexDirection.Row,\r\n            (widthMeasureMode == YGMeasureMode.Undefined ||\r\n                widthMeasureMode == YGMeasureMode.AtMost)\r\n                ? paddingAndBorderAxisRow\r\n                : availableWidth - marginAxisRow,\r\n            ownerWidth,\r\n            ownerWidth),\r\n        YGDimension.Width);\r\n\r\n    node.setLayoutMeasuredDimension(\r\n        YGNodeBoundAxis(\r\n            node,\r\n            YGFlexDirection.Column,\r\n            (heightMeasureMode == YGMeasureMode.Undefined ||\r\n                heightMeasureMode == YGMeasureMode.AtMost)\r\n                ? paddingAndBorderAxisColumn\r\n                : availableHeight - marginAxisColumn,\r\n            ownerHeight,\r\n            ownerWidth),\r\n        YGDimension.Height);\r\n}\r\n\r\nexport function YGNodeFixedSizeSetMeasuredDimensions(node: YGNode, availableWidth: number, availableHeight: number, widthMeasureMode: YGMeasureMode, heightMeasureMode: YGMeasureMode, ownerWidth: number, ownerHeight: number) {\r\n    if ((!YGFloatIsUndefined(availableWidth) && widthMeasureMode == YGMeasureMode.AtMost && availableWidth <= 0) ||\r\n        (!YGFloatIsUndefined(availableHeight) && heightMeasureMode == YGMeasureMode.AtMost && availableHeight <= 0) ||\r\n        (widthMeasureMode == YGMeasureMode.Exactly && heightMeasureMode == YGMeasureMode.Exactly)) {\r\n        const marginAxisColumn: number = YGUnwrapFloatOptional(node.getMarginForAxis(YGFlexDirection.Column, ownerWidth));\r\n        const marginAxisRow: number = YGUnwrapFloatOptional(node.getMarginForAxis(YGFlexDirection.Row, ownerWidth));\r\n\r\n        node.setLayoutMeasuredDimension(\r\n            YGNodeBoundAxis(\r\n                node,\r\n                YGFlexDirection.Row,\r\n                YGFloatIsUndefined(availableWidth) ||\r\n                    (widthMeasureMode == YGMeasureMode.AtMost && availableWidth < 0)\r\n                    ? 0\r\n                    : availableWidth - marginAxisRow,\r\n                ownerWidth,\r\n                ownerWidth),\r\n            YGDimension.Width);\r\n\r\n        node.setLayoutMeasuredDimension(\r\n            YGNodeBoundAxis(\r\n                node,\r\n                YGFlexDirection.Column,\r\n                YGFloatIsUndefined(availableHeight) ||\r\n                    (heightMeasureMode == YGMeasureMode.AtMost && availableHeight < 0)\r\n                    ? 0\r\n                    : availableHeight - marginAxisColumn,\r\n                ownerHeight,\r\n                ownerWidth),\r\n            YGDimension.Height);\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function YGZeroOutLayoutRecursivly(node: YGNode): void {\r\n    node.getLayout().clean()\r\n    node.setHasNewLayout(true);\r\n    node.cloneChildrenIfNeeded();\r\n\r\n    const childCount: number = YGNodeGetChildCount(node);\r\n    for (let i = 0; i < childCount; i++) {\r\n        const child: YGNode = node.getChild(i);\r\n        YGZeroOutLayoutRecursivly(child);\r\n    }\r\n}\r\n\r\nexport function YGNodeCalculateAvailableInnerDim(node: YGNode, axis: YGFlexDirection, availableDim: number, ownerDim: number): number {\r\n    const direction: YGFlexDirection = YGFlexDirectionIsRow(axis) ? YGFlexDirection.Row : YGFlexDirection.Column;\r\n    const dimension: YGDimension = YGFlexDirectionIsRow(axis) ? YGDimension.Width : YGDimension.Height;\r\n    const margin: number = YGUnwrapFloatOptional(node.getMarginForAxis(direction, ownerDim));\r\n    const paddingAndBorder: number = YGNodePaddingAndBorderForAxis(node, direction, ownerDim);\r\n\r\n    let availableInnerDim: number = availableDim - margin - paddingAndBorder;\r\n    if (!YGFloatIsUndefined(availableInnerDim)) {\r\n        const minDimensionOptional: YGFloatOptional = YGResolveValue(node.getStyle().minDimensions[dimension], ownerDim);\r\n        const minInnerDim: number = minDimensionOptional.isUndefined()\r\n            ? 0.0\r\n            : minDimensionOptional.getValue() - paddingAndBorder;\r\n\r\n        const maxDimensionOptional: YGFloatOptional = YGResolveValue(node.getStyle().maxDimensions[dimension], ownerDim);\r\n\r\n        const maxInnerDim: number = maxDimensionOptional.isUndefined()\r\n            ? Number.MAX_VALUE\r\n            : maxDimensionOptional.getValue() - paddingAndBorder;\r\n        availableInnerDim = YGFloatMax(YGFloatMin(availableInnerDim, maxInnerDim), minInnerDim);\r\n    }\r\n\r\n    return availableInnerDim;\r\n}\r\n\r\nexport function YGNodeComputeFlexBasisForChildren(\r\n    node: YGNode,\r\n    availableInnerWidth: number,\r\n    availableInnerHeight: number,\r\n    widthMeasureMode: YGMeasureMode,\r\n    heightMeasureMode: YGMeasureMode,\r\n    direction: YGDirection,\r\n    mainAxis: YGFlexDirection,\r\n    config: YGConfig,\r\n    performLayout: boolean,\r\n    totalOuterFlexBasisRef: { value: number }) {\r\n\r\n    let singleFlexChild: YGNode = null;\r\n    const children: Array<YGNode> = node.getChildren();\r\n    const measureModeMainDim: YGMeasureMode = YGFlexDirectionIsRow(mainAxis) ? widthMeasureMode : heightMeasureMode;\r\n\r\n    if (measureModeMainDim == YGMeasureMode.Exactly) {\r\n        for (let i = 0; i < children.length; ++i) {\r\n            const child: YGNode = children[i];\r\n            if (child.isNodeFlexible()) {\r\n                if (singleFlexChild != null ||\r\n                    YGFloatsEqual(child.resolveFlexGrow(), 0.0) ||\r\n                    YGFloatsEqual(child.resolveFlexShrink(), 0.0)) {\r\n                    singleFlexChild = null;\r\n                    break;\r\n                } else {\r\n                    singleFlexChild = child;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < children.length; ++i) {\r\n        const child: YGNode = children[i];\r\n        child.resolveDimension();\r\n        if (child.getStyle().display == YGDisplay.None) {\r\n            YGZeroOutLayoutRecursivly(child);\r\n            child.setHasNewLayout(true);\r\n            child.setDirty(false);\r\n            continue;\r\n        }\r\n        if (performLayout) {\r\n            const childDirection: YGDirection = child.resolveDirection(direction);\r\n            const mainDim: number = YGFlexDirectionIsRow(mainAxis)\r\n                ? availableInnerWidth\r\n                : availableInnerHeight;\r\n            const crossDim: number = YGFlexDirectionIsRow(mainAxis)\r\n                ? availableInnerHeight\r\n                : availableInnerWidth;\r\n            child.setPosition(childDirection, mainDim, crossDim, availableInnerWidth);\r\n        }\r\n\r\n        if (child.getStyle().positionType == YGPositionType.Absolute) {\r\n            continue;\r\n        }\r\n        if (child == singleFlexChild) {\r\n            child.setLayoutComputedFlexBasisGeneration(gCurrentGenerationCount);\r\n            child.setLayoutComputedFlexBasis(new YGFloatOptional(0));\r\n        } else {\r\n            YGNodeComputeFlexBasisForChild(\r\n                node,\r\n                child,\r\n                availableInnerWidth,\r\n                widthMeasureMode,\r\n                availableInnerHeight,\r\n                availableInnerWidth,\r\n                availableInnerHeight,\r\n                heightMeasureMode,\r\n                direction,\r\n                config);\r\n        }\r\n\r\n        totalOuterFlexBasisRef.value += YGUnwrapFloatOptional(\r\n            child.getLayout().computedFlexBasis.add(\r\n                child.getMarginForAxis(mainAxis, availableInnerWidth)));\r\n    }\r\n}\r\n\r\nexport function YGCalculateCollectFlexItemsRowValues(\r\n    node: YGNode,\r\n    ownerDirection: YGDirection,\r\n    mainAxisownerSize: number,\r\n    availableInnerWidth: number,\r\n    availableInnerMainDim: number,\r\n    startOfLineIndex: number,\r\n    lineCount: number): YGCollectFlexItemsRowValues {\r\n    const flexAlgoRowMeasurement: YGCollectFlexItemsRowValues = new YGCollectFlexItemsRowValues();\r\n    //flexAlgoRowMeasurement.relativeChildren = new Array(node.getChildren().length);\r\n\r\n    let sizeConsumedOnCurrentLineIncludingMinConstraint: number = 0;\r\n    const mainAxis: YGFlexDirection = YGResolveFlexDirection(node.getStyle().flexDirection, node.resolveDirection(ownerDirection));\r\n    const isNodeFlexWrap: boolean = node.getStyle().flexWrap != YGWrap.NoWrap;\r\n    let endOfLineIndex = startOfLineIndex;\r\n    for (; endOfLineIndex < node.getChildrenCount(); endOfLineIndex++) {\r\n        const child: YGNode = node.getChild(endOfLineIndex);\r\n        if (child.getStyle().display == YGDisplay.None ||\r\n            child.getStyle().positionType == YGPositionType.Absolute) {\r\n            continue;\r\n        }\r\n        child.setLineIndex(lineCount);\r\n\r\n        const childMarginMainAxis: number = YGUnwrapFloatOptional(child.getMarginForAxis(mainAxis, availableInnerWidth));\r\n\r\n        const flexBasisWithMinAndMaxConstraints: number =\r\n            YGUnwrapFloatOptional(YGNodeBoundAxisWithinMinAndMax(\r\n                child,\r\n                mainAxis,\r\n                YGUnwrapFloatOptional(child.getLayout().computedFlexBasis),\r\n                mainAxisownerSize));\r\n\r\n        if (sizeConsumedOnCurrentLineIncludingMinConstraint +\r\n            flexBasisWithMinAndMaxConstraints + childMarginMainAxis >\r\n            availableInnerMainDim && isNodeFlexWrap && flexAlgoRowMeasurement.itemsOnLine > 0) {\r\n            break;\r\n        }\r\n\r\n        sizeConsumedOnCurrentLineIncludingMinConstraint += flexBasisWithMinAndMaxConstraints + childMarginMainAxis;\r\n        flexAlgoRowMeasurement.sizeConsumedOnCurrentLine += flexBasisWithMinAndMaxConstraints + childMarginMainAxis;\r\n        flexAlgoRowMeasurement.itemsOnLine++;\r\n\r\n        if (child.isNodeFlexible()) {\r\n            flexAlgoRowMeasurement.totalFlexGrowFactors += child.resolveFlexGrow();\r\n            flexAlgoRowMeasurement.totalFlexShrinkScaledFactors += (-child.resolveFlexShrink()) * YGUnwrapFloatOptional(child.getLayout().computedFlexBasis);\r\n        }\r\n\r\n        flexAlgoRowMeasurement.relativeChildren.push(child);\r\n    }\r\n\r\n    if (flexAlgoRowMeasurement.totalFlexGrowFactors > 0 &&\r\n        flexAlgoRowMeasurement.totalFlexGrowFactors < 1) {\r\n        flexAlgoRowMeasurement.totalFlexGrowFactors = 1;\r\n    }\r\n\r\n    if (flexAlgoRowMeasurement.totalFlexShrinkScaledFactors > 0 &&\r\n        flexAlgoRowMeasurement.totalFlexShrinkScaledFactors < 1) {\r\n        flexAlgoRowMeasurement.totalFlexShrinkScaledFactors = 1;\r\n    }\r\n\r\n    flexAlgoRowMeasurement.endOfLineIndex = endOfLineIndex;\r\n    return flexAlgoRowMeasurement;\r\n}\r\n\r\nexport function YGDistributeFreeSpaceSecondPass(\r\n    collectedFlexItemsValues: YGCollectFlexItemsRowValues,\r\n    node: YGNode,\r\n    mainAxis: YGFlexDirection,\r\n    crossAxis: YGFlexDirection,\r\n    mainAxisownerSize: number,\r\n    availableInnerMainDim: number,\r\n    availableInnerCrossDim: number,\r\n    availableInnerWidth: number,\r\n    availableInnerHeight: number,\r\n    flexBasisOverflows: boolean,\r\n    measureModeCrossDim: YGMeasureMode,\r\n    performLayout: boolean,\r\n    config: YGConfig): number {\r\n    let childFlexBasis: number = 0;\r\n    let flexShrinkScaledFactor: number = 0;\r\n    let flexGrowFactor: number = 0;\r\n    let deltaFreeSpace: number = 0;\r\n    let isMainAxisRow: boolean = YGFlexDirectionIsRow(mainAxis);\r\n    let isNodeFlexWrap: boolean = node.getStyle().flexWrap != YGWrap.NoWrap;\r\n\r\n    for (let i: number = 0; i < collectedFlexItemsValues.relativeChildren.length; ++i) {\r\n        const currentRelativeChild: YGNode = collectedFlexItemsValues.relativeChildren[i]\r\n        childFlexBasis = YGUnwrapFloatOptional(YGNodeBoundAxisWithinMinAndMax(\r\n            currentRelativeChild,\r\n            mainAxis,\r\n            YGUnwrapFloatOptional(\r\n                currentRelativeChild.getLayout().computedFlexBasis),\r\n            mainAxisownerSize));\r\n        let updatedMainSize: number = childFlexBasis;\r\n\r\n        if (!YGFloatIsUndefined(collectedFlexItemsValues.remainingFreeSpace) &&\r\n            collectedFlexItemsValues.remainingFreeSpace < 0) {\r\n            flexShrinkScaledFactor = -currentRelativeChild.resolveFlexShrink() * childFlexBasis;\r\n\r\n            if (flexShrinkScaledFactor != 0) {\r\n                let childSize: number;\r\n\r\n                if (!YGFloatIsUndefined(\r\n                    collectedFlexItemsValues.totalFlexShrinkScaledFactors) &&\r\n                    collectedFlexItemsValues.totalFlexShrinkScaledFactors == 0) {\r\n                    childSize = childFlexBasis + flexShrinkScaledFactor;\r\n                } else {\r\n                    childSize = childFlexBasis +\r\n                        (collectedFlexItemsValues.remainingFreeSpace /\r\n                            collectedFlexItemsValues.totalFlexShrinkScaledFactors) *\r\n                        flexShrinkScaledFactor;\r\n                }\r\n\r\n                updatedMainSize = YGNodeBoundAxis(\r\n                    currentRelativeChild,\r\n                    mainAxis,\r\n                    childSize,\r\n                    availableInnerMainDim,\r\n                    availableInnerWidth);\r\n            }\r\n        } else if (\r\n            !YGFloatIsUndefined(collectedFlexItemsValues.remainingFreeSpace) &&\r\n            collectedFlexItemsValues.remainingFreeSpace > 0) {\r\n            flexGrowFactor = currentRelativeChild.resolveFlexGrow();\r\n            if (!YGFloatIsUndefined(flexGrowFactor) && flexGrowFactor != 0) {\r\n                updatedMainSize = YGNodeBoundAxis(\r\n                    currentRelativeChild,\r\n                    mainAxis,\r\n                    childFlexBasis +\r\n                    (collectedFlexItemsValues.remainingFreeSpace /\r\n                        collectedFlexItemsValues.totalFlexGrowFactors) *\r\n                    flexGrowFactor,\r\n                    availableInnerMainDim,\r\n                    availableInnerWidth);\r\n            }\r\n        }\r\n\r\n        deltaFreeSpace += updatedMainSize - childFlexBasis;\r\n\r\n        const marginMain: number = YGUnwrapFloatOptional(\r\n            currentRelativeChild.getMarginForAxis(mainAxis, availableInnerWidth));\r\n        const marginCross: number = YGUnwrapFloatOptional(\r\n            currentRelativeChild.getMarginForAxis(crossAxis, availableInnerWidth));\r\n\r\n        let childCrossSize: number;\r\n        let childMainSize: number = updatedMainSize + marginMain;\r\n        let childCrossMeasureMode: YGMeasureMode;\r\n        let childMainMeasureMode: YGMeasureMode = YGMeasureMode.Exactly;\r\n\r\n        if (!currentRelativeChild.getStyle().aspectRatio.isUndefined()) {\r\n            childCrossSize = isMainAxisRow ? (childMainSize - marginMain) /\r\n                currentRelativeChild.getStyle().aspectRatio.getValue()\r\n                : (childMainSize - marginMain) *\r\n                currentRelativeChild.getStyle().aspectRatio.getValue();\r\n            childCrossMeasureMode = YGMeasureMode.Exactly;\r\n\r\n            childCrossSize += marginCross;\r\n        } else if (\r\n            !YGFloatIsUndefined(availableInnerCrossDim) &&\r\n            !YGNodeIsStyleDimDefined(\r\n                currentRelativeChild, crossAxis, availableInnerCrossDim) &&\r\n            measureModeCrossDim == YGMeasureMode.Exactly &&\r\n            !(isNodeFlexWrap && flexBasisOverflows) &&\r\n            YGNodeAlignItem(node, currentRelativeChild) == YGAlign.Stretch &&\r\n            currentRelativeChild.marginLeadingValue(crossAxis).unit !=\r\n            YGUnit.Auto &&\r\n            currentRelativeChild.marginTrailingValue(crossAxis).unit !=\r\n            YGUnit.Auto) {\r\n            childCrossSize = availableInnerCrossDim;\r\n            childCrossMeasureMode = YGMeasureMode.Exactly;\r\n        } else if (!YGNodeIsStyleDimDefined(\r\n            currentRelativeChild, crossAxis, availableInnerCrossDim)) {\r\n            childCrossSize = availableInnerCrossDim;\r\n            childCrossMeasureMode = YGFloatIsUndefined(childCrossSize)\r\n                ? YGMeasureMode.Undefined\r\n                : YGMeasureMode.AtMost;\r\n        } else {\r\n            childCrossSize =\r\n                YGUnwrapFloatOptional(YGResolveValue(\r\n                    currentRelativeChild.getResolvedDimension(dim[crossAxis]),\r\n                    availableInnerCrossDim)) +\r\n                marginCross;\r\n            const isLoosePercentageMeasurement: boolean =\r\n                currentRelativeChild.getResolvedDimension(dim[crossAxis]).unit ==\r\n                YGUnit.Percent &&\r\n                measureModeCrossDim != YGMeasureMode.Exactly;\r\n            childCrossMeasureMode =\r\n                YGFloatIsUndefined(childCrossSize) || isLoosePercentageMeasurement\r\n                    ? YGMeasureMode.Undefined\r\n                    : YGMeasureMode.Exactly;\r\n        }\r\n\r\n        let childMainMeasureModeRef = { value: childMainMeasureMode }\r\n        let childMainSizeRef = { value: childMainSize }\r\n        let childCrossMeasureModeRef = { value: childCrossMeasureMode }\r\n        let childCrossSizeRef = { value: childCrossSize }\r\n\r\n        YGConstrainMaxSizeForMode(\r\n            currentRelativeChild,\r\n            mainAxis,\r\n            availableInnerMainDim,\r\n            availableInnerWidth,\r\n            childMainMeasureModeRef,\r\n            childMainSizeRef);\r\n        \r\n        YGConstrainMaxSizeForMode(\r\n            currentRelativeChild,\r\n            crossAxis,\r\n            availableInnerCrossDim,\r\n            availableInnerWidth,\r\n            childCrossMeasureModeRef,\r\n            childCrossSizeRef);\r\n\r\n        childMainMeasureMode = childMainMeasureModeRef.value\r\n        childMainSize = childMainSizeRef.value\r\n        childCrossMeasureMode = childCrossMeasureModeRef.value\r\n        childCrossSize = childCrossSizeRef.value\r\n\r\n        const requiresStretchLayout: boolean =\r\n            !YGNodeIsStyleDimDefined(currentRelativeChild, crossAxis, availableInnerCrossDim) &&\r\n            YGNodeAlignItem(node, currentRelativeChild) == YGAlign.Stretch &&\r\n            currentRelativeChild.marginLeadingValue(crossAxis).unit != YGUnit.Auto &&\r\n            currentRelativeChild.marginTrailingValue(crossAxis).unit != YGUnit.Auto;\r\n\r\n        const childWidth: number = isMainAxisRow ? childMainSize : childCrossSize;\r\n        const childHeight: number = !isMainAxisRow ? childMainSize : childCrossSize;\r\n\r\n        const childWidthMeasureMode: YGMeasureMode =\r\n            isMainAxisRow ? childMainMeasureMode : childCrossMeasureMode;\r\n        const childHeightMeasureMode: YGMeasureMode =\r\n            !isMainAxisRow ? childMainMeasureMode : childCrossMeasureMode;\r\n\r\n        YGLayoutNodeInternal(\r\n            currentRelativeChild,\r\n            childWidth,\r\n            childHeight,\r\n            node.getLayout().direction,\r\n            childWidthMeasureMode,\r\n            childHeightMeasureMode,\r\n            availableInnerWidth,\r\n            availableInnerHeight,\r\n            performLayout && !requiresStretchLayout,\r\n            \"flex\",\r\n            config);\r\n\r\n        node.setLayoutHadOverflow(\r\n            node.getLayout().hadOverflow ||\r\n            currentRelativeChild.getLayout().hadOverflow);\r\n    }\r\n\r\n    return deltaFreeSpace;\r\n}\r\n\r\n\r\nexport function YGDistributeFreeSpaceFirstPass(\r\n    collectedFlexItemsValues: YGCollectFlexItemsRowValues,\r\n    mainAxis: YGFlexDirection,\r\n    mainAxisownerSize: number,\r\n    availableInnerMainDim: number,\r\n    availableInnerWidth: number): void {\r\n    let flexShrinkScaledFactor: number = 0;\r\n    let flexGrowFactor: number = 0;\r\n    let baseMainSize: number = 0;\r\n    let boundMainSize: number = 0;\r\n    let deltaFreeSpace: number = 0;\r\n\r\n    for (let i: number = 0; i < collectedFlexItemsValues.relativeChildren.length; ++i) {\r\n        const currentRelativeChild: YGNode = collectedFlexItemsValues.relativeChildren[i]\r\n        const childFlexBasis: number = YGUnwrapFloatOptional(YGNodeBoundAxisWithinMinAndMax(\r\n            currentRelativeChild,\r\n            mainAxis,\r\n            YGUnwrapFloatOptional(currentRelativeChild.getLayout().computedFlexBasis),\r\n            mainAxisownerSize));\r\n\r\n        if (collectedFlexItemsValues.remainingFreeSpace < 0) {\r\n            flexShrinkScaledFactor =\r\n                (-currentRelativeChild.resolveFlexShrink()) * childFlexBasis;\r\n            if (!YGFloatIsUndefined(flexShrinkScaledFactor) &&\r\n                flexShrinkScaledFactor != 0) {\r\n                baseMainSize = childFlexBasis +\r\n                    collectedFlexItemsValues.remainingFreeSpace /\r\n                    collectedFlexItemsValues.totalFlexShrinkScaledFactors *\r\n                    flexShrinkScaledFactor;\r\n                boundMainSize = YGNodeBoundAxis(\r\n                    currentRelativeChild,\r\n                    mainAxis,\r\n                    baseMainSize,\r\n                    availableInnerMainDim,\r\n                    availableInnerWidth);\r\n                if (!YGFloatIsUndefined(baseMainSize) &&\r\n                    !YGFloatIsUndefined(boundMainSize) &&\r\n                    baseMainSize != boundMainSize) {\r\n                    deltaFreeSpace += boundMainSize - childFlexBasis;\r\n                    collectedFlexItemsValues.totalFlexShrinkScaledFactors -=\r\n                        flexShrinkScaledFactor;\r\n                }\r\n            }\r\n        } else if (\r\n            !YGFloatIsUndefined(collectedFlexItemsValues.remainingFreeSpace) &&\r\n            collectedFlexItemsValues.remainingFreeSpace > 0) {\r\n            flexGrowFactor = currentRelativeChild.resolveFlexGrow();\r\n            if (!YGFloatIsUndefined(flexGrowFactor) && flexGrowFactor != 0) {\r\n                baseMainSize = childFlexBasis +\r\n                    collectedFlexItemsValues.remainingFreeSpace /\r\n                    collectedFlexItemsValues.totalFlexGrowFactors * flexGrowFactor;\r\n                boundMainSize = YGNodeBoundAxis(\r\n                    currentRelativeChild,\r\n                    mainAxis,\r\n                    baseMainSize,\r\n                    availableInnerMainDim,\r\n                    availableInnerWidth);\r\n\r\n                if (!YGFloatIsUndefined(baseMainSize) &&\r\n                    !YGFloatIsUndefined(boundMainSize) &&\r\n                    baseMainSize != boundMainSize) {\r\n                    deltaFreeSpace += boundMainSize - childFlexBasis;\r\n                    collectedFlexItemsValues.totalFlexGrowFactors -= flexGrowFactor;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    collectedFlexItemsValues.remainingFreeSpace -= deltaFreeSpace;\r\n}\r\n\r\nexport function YGResolveFlexibleLength(\r\n    node: YGNode,\r\n    collectedFlexItemsValues: YGCollectFlexItemsRowValues,\r\n    mainAxis: YGFlexDirection,\r\n    crossAxis: YGFlexDirection,\r\n    mainAxisownerSize: number,\r\n    availableInnerMainDim: number,\r\n    availableInnerCrossDim: number,\r\n    availableInnerWidth: number,\r\n    availableInnerHeight: number,\r\n    flexBasisOverflows: boolean,\r\n    measureModeCrossDim: YGMeasureMode,\r\n    performLayout: boolean,\r\n    config: YGConfig): void {\r\n    const originalFreeSpace: number = collectedFlexItemsValues.remainingFreeSpace;\r\n\r\n    YGDistributeFreeSpaceFirstPass(\r\n        collectedFlexItemsValues,\r\n        mainAxis,\r\n        mainAxisownerSize,\r\n        availableInnerMainDim,\r\n        availableInnerWidth);\r\n\r\n    const distributedFreeSpace: number = YGDistributeFreeSpaceSecondPass(\r\n        collectedFlexItemsValues,\r\n        node,\r\n        mainAxis,\r\n        crossAxis,\r\n        mainAxisownerSize,\r\n        availableInnerMainDim,\r\n        availableInnerCrossDim,\r\n        availableInnerWidth,\r\n        availableInnerHeight,\r\n        flexBasisOverflows,\r\n        measureModeCrossDim,\r\n        performLayout,\r\n        config);\r\n\r\n    collectedFlexItemsValues.remainingFreeSpace =\r\n        originalFreeSpace - distributedFreeSpace;\r\n}\r\n\r\nexport function YGJustifyMainAxis(\r\n    node: YGNode,\r\n    collectedFlexItemsValues: YGCollectFlexItemsRowValues,\r\n    startOfLineIndex: number,\r\n    mainAxis: YGFlexDirection,\r\n    crossAxis: YGFlexDirection,\r\n    measureModeMainDim: YGMeasureMode,\r\n    measureModeCrossDim: YGMeasureMode,\r\n    mainAxisownerSize: number,\r\n    ownerWidth: number,\r\n    availableInnerMainDim: number,\r\n    availableInnerCrossDim: number,\r\n    availableInnerWidth: number,\r\n    performLayout: boolean): void {\r\n\r\n    const style: YGStyle = node.getStyle();\r\n    if (measureModeMainDim == YGMeasureMode.AtMost &&\r\n        collectedFlexItemsValues.remainingFreeSpace > 0) {\r\n        if (style.minDimensions[dim[mainAxis]].unit != YGUnit.Undefined &&\r\n            !YGResolveValue(style.minDimensions[dim[mainAxis]], mainAxisownerSize)\r\n                .isUndefined()) {\r\n            collectedFlexItemsValues.remainingFreeSpace = YGFloatMax(\r\n                0,\r\n                YGUnwrapFloatOptional(YGResolveValue(\r\n                    style.minDimensions[dim[mainAxis]], mainAxisownerSize)) -\r\n                (availableInnerMainDim -\r\n                    collectedFlexItemsValues.remainingFreeSpace));\r\n        } else {\r\n            collectedFlexItemsValues.remainingFreeSpace = 0;\r\n        }\r\n    }\r\n\r\n    let numberOfAutoMarginsOnCurrentLine: number = 0;\r\n    for (let i: number = startOfLineIndex;\r\n        i < collectedFlexItemsValues.endOfLineIndex;\r\n        i++) {\r\n        const child: YGNode = node.getChild(i);\r\n        if (child.getStyle().positionType == YGPositionType.Relative) {\r\n            if (child.marginLeadingValue(mainAxis).unit == YGUnit.Auto) {\r\n                numberOfAutoMarginsOnCurrentLine++;\r\n            }\r\n            if (child.marginTrailingValue(mainAxis).unit == YGUnit.Auto) {\r\n                numberOfAutoMarginsOnCurrentLine++;\r\n            }\r\n        }\r\n    }\r\n    let leadingMainDim: number = 0;\r\n    let betweenMainDim: number = 0;\r\n    const justifyContent: YGJustify = node.getStyle().justifyContent;\r\n\r\n    if (numberOfAutoMarginsOnCurrentLine == 0) {\r\n        switch (justifyContent) {\r\n            case YGJustify.Center:\r\n                leadingMainDim = collectedFlexItemsValues.remainingFreeSpace / 2;\r\n                break;\r\n            case YGJustify.FlexEnd:\r\n                leadingMainDim = collectedFlexItemsValues.remainingFreeSpace;\r\n                break;\r\n            case YGJustify.SpaceBetween:\r\n                if (collectedFlexItemsValues.itemsOnLine > 1) {\r\n                    betweenMainDim =\r\n                        YGFloatMax(collectedFlexItemsValues.remainingFreeSpace, 0) /\r\n                        (collectedFlexItemsValues.itemsOnLine - 1);\r\n                } else {\r\n                    betweenMainDim = 0;\r\n                }\r\n                break;\r\n            case YGJustify.SpaceEvenly:\r\n\r\n                betweenMainDim = collectedFlexItemsValues.remainingFreeSpace /\r\n                    (collectedFlexItemsValues.itemsOnLine + 1);\r\n                leadingMainDim = betweenMainDim;\r\n                break;\r\n            case YGJustify.SpaceAround:\r\n\r\n                betweenMainDim = collectedFlexItemsValues.remainingFreeSpace /\r\n                    collectedFlexItemsValues.itemsOnLine;\r\n                leadingMainDim = betweenMainDim / 2;\r\n                break;\r\n            case YGJustify.FlexStart:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const leadingPaddingAndBorderMain: number = YGUnwrapFloatOptional(\r\n        node.getLeadingPaddingAndBorder(mainAxis, ownerWidth));\r\n    collectedFlexItemsValues.mainDim =\r\n        leadingPaddingAndBorderMain + leadingMainDim;\r\n    collectedFlexItemsValues.crossDim = 0;\r\n\r\n    for (let i: number = startOfLineIndex;\r\n        i < collectedFlexItemsValues.endOfLineIndex;\r\n        i++) {\r\n        const child: YGNode = node.getChild(i);\r\n        const childStyle: YGStyle = child.getStyle();\r\n        const childLayout: YGLayout = child.getLayout();\r\n        if (childStyle.display == YGDisplay.None) {\r\n            continue;\r\n        }\r\n        if (childStyle.positionType == YGPositionType.Absolute &&\r\n            child.isLeadingPositionDefined(mainAxis)) {\r\n            if (performLayout) {\r\n                child.setLayoutPosition(\r\n                    YGUnwrapFloatOptional(\r\n                        child.getLeadingPosition(mainAxis, availableInnerMainDim)) +\r\n                    node.getLeadingBorder(mainAxis) +\r\n                    YGUnwrapFloatOptional(\r\n                        child.getLeadingMargin(mainAxis, availableInnerWidth)),\r\n                    pos[mainAxis]);\r\n            }\r\n        } else {\r\n            if (childStyle.positionType == YGPositionType.Relative) {\r\n                if (child.marginLeadingValue(mainAxis).unit == YGUnit.Auto) {\r\n                    collectedFlexItemsValues.mainDim +=\r\n                        collectedFlexItemsValues.remainingFreeSpace /\r\n                        numberOfAutoMarginsOnCurrentLine;\r\n                }\r\n\r\n                if (performLayout) {\r\n                    child.setLayoutPosition(\r\n                        childLayout.position[pos[mainAxis] as number] +\r\n                        collectedFlexItemsValues.mainDim,\r\n                        pos[mainAxis]);\r\n                }\r\n\r\n                if (child.marginTrailingValue(mainAxis).unit == YGUnit.Auto) {\r\n                    collectedFlexItemsValues.mainDim +=\r\n                        collectedFlexItemsValues.remainingFreeSpace /\r\n                        numberOfAutoMarginsOnCurrentLine;\r\n                }\r\n                const canSkipFlex: boolean =\r\n                    !performLayout && measureModeCrossDim == YGMeasureMode.Exactly;\r\n                if (canSkipFlex) {\r\n                    collectedFlexItemsValues.mainDim += betweenMainDim +\r\n                        YGUnwrapFloatOptional(child.getMarginForAxis(\r\n                            mainAxis, availableInnerWidth)) +\r\n                        YGUnwrapFloatOptional(childLayout.computedFlexBasis);\r\n                    collectedFlexItemsValues.crossDim = availableInnerCrossDim;\r\n                } else {\r\n                    collectedFlexItemsValues.mainDim += betweenMainDim +\r\n                        YGNodeDimWithMargin(child, mainAxis, availableInnerWidth); collectedFlexItemsValues.crossDim = YGFloatMax(\r\n                            collectedFlexItemsValues.crossDim,\r\n                            YGNodeDimWithMargin(child, crossAxis, availableInnerWidth));\r\n                }\r\n            } else if (performLayout) {\r\n                child.setLayoutPosition(\r\n                    childLayout.position[pos[mainAxis] as number] +\r\n                    node.getLeadingBorder(mainAxis) + leadingMainDim,\r\n                    pos[mainAxis]);\r\n            }\r\n        }\r\n    }\r\n    collectedFlexItemsValues.mainDim += YGUnwrapFloatOptional(\r\n        node.getTrailingPaddingAndBorder(mainAxis, ownerWidth));\r\n}\r\n\r\nexport function YGNodelayoutImpl(node: YGNode,\r\n    availableWidth: number,\r\n    availableHeight: number,\r\n    ownerDirection: YGDirection,\r\n    widthMeasureMode: YGMeasureMode,\r\n    heightMeasureMode: YGMeasureMode,\r\n    ownerWidth: number,\r\n    ownerHeight: number,\r\n    performLayout: boolean,\r\n    config: YGConfig): void {\r\n\r\n    YGAssertWithNode(node, YGFloatIsUndefined(availableWidth) ? widthMeasureMode == YGMeasureMode.Undefined\r\n        : true, \"availableWidth is indefinite so widthMeasureMode must be YGMeasureMode.Undefined\");\r\n    YGAssertWithNode(node,\r\n        YGFloatIsUndefined(availableHeight) ? heightMeasureMode == YGMeasureMode.Undefined\r\n            : true, \"availableHeight is indefinite so heightMeasureMode must be YGMeasureMode.Undefined\");\r\n\r\n    const direction: YGDirection = node.resolveDirection(ownerDirection);\r\n    node.setLayoutDirection(direction);\r\n\r\n    const flexRowDirection: YGFlexDirection = YGResolveFlexDirection(YGFlexDirection.Row, direction);\r\n    const flexColumnDirection: YGFlexDirection = YGResolveFlexDirection(YGFlexDirection.Column, direction);\r\n\r\n    node.setLayoutMargin(\r\n        YGUnwrapFloatOptional(\r\n            node.getLeadingMargin(flexRowDirection, ownerWidth)),\r\n        YGEdge.Start);\r\n    node.setLayoutMargin(\r\n        YGUnwrapFloatOptional(\r\n            node.getTrailingMargin(flexRowDirection, ownerWidth)),\r\n        YGEdge.End);\r\n    node.setLayoutMargin(\r\n        YGUnwrapFloatOptional(\r\n            node.getLeadingMargin(flexColumnDirection, ownerWidth)),\r\n        YGEdge.Top);\r\n    node.setLayoutMargin(\r\n        YGUnwrapFloatOptional(\r\n            node.getTrailingMargin(flexColumnDirection, ownerWidth)),\r\n        YGEdge.Bottom);\r\n\r\n    node.setLayoutBorder(node.getLeadingBorder(flexRowDirection), YGEdge.Start);\r\n    node.setLayoutBorder(node.getTrailingBorder(flexRowDirection), YGEdge.End);\r\n    node.setLayoutBorder(node.getLeadingBorder(flexColumnDirection), YGEdge.Top);\r\n    node.setLayoutBorder(node.getTrailingBorder(flexColumnDirection), YGEdge.Bottom);\r\n\r\n    node.setLayoutPadding(\r\n        YGUnwrapFloatOptional(\r\n            node.getLeadingPadding(flexRowDirection, ownerWidth)),\r\n        YGEdge.Start);\r\n    node.setLayoutPadding(\r\n        YGUnwrapFloatOptional(\r\n            node.getTrailingPadding(flexRowDirection, ownerWidth)),\r\n        YGEdge.End);\r\n    node.setLayoutPadding(\r\n        YGUnwrapFloatOptional(\r\n            node.getLeadingPadding(flexColumnDirection, ownerWidth)),\r\n        YGEdge.Top);\r\n    node.setLayoutPadding(\r\n        YGUnwrapFloatOptional(\r\n            node.getTrailingPadding(flexColumnDirection, ownerWidth)),\r\n        YGEdge.Bottom);\r\n\r\n    if (node.getMeasure() != null) {\r\n        YGNodeWithMeasureFuncSetMeasuredDimensions(node,\r\n            availableWidth,\r\n            availableHeight,\r\n            widthMeasureMode,\r\n            heightMeasureMode,\r\n            ownerWidth,\r\n            ownerHeight);\r\n        return;\r\n    }\r\n\r\n    const childCount: number = YGNodeGetChildCount(node);\r\n    if (childCount == 0) {\r\n        YGNodeEmptyContainerSetMeasuredDimensions(node,\r\n            availableWidth,\r\n            availableHeight,\r\n            widthMeasureMode,\r\n            heightMeasureMode,\r\n            ownerWidth,\r\n            ownerHeight);\r\n        return;\r\n    }\r\n    if (!performLayout && YGNodeFixedSizeSetMeasuredDimensions(node,\r\n        availableWidth,\r\n        availableHeight,\r\n        widthMeasureMode,\r\n        heightMeasureMode,\r\n        ownerWidth,\r\n        ownerHeight)) {\r\n        return;\r\n    }\r\n\r\n    node.cloneChildrenIfNeeded();\r\n    node.setLayoutHadOverflow(false);\r\n    const mainAxis: YGFlexDirection = YGResolveFlexDirection(node.getStyle().flexDirection, direction);\r\n    const crossAxis: YGFlexDirection = YGFlexDirectionCross(mainAxis, direction);\r\n    const isMainAxisRow: boolean = YGFlexDirectionIsRow(mainAxis);\r\n    const isNodeFlexWrap: boolean = node.getStyle().flexWrap != YGWrap.NoWrap;\r\n\r\n    const mainAxisownerSize: number = isMainAxisRow ? ownerWidth : ownerHeight;\r\n    const crossAxisownerSize: number = isMainAxisRow ? ownerHeight : ownerWidth;\r\n\r\n    const leadingPaddingAndBorderCross: number = YGUnwrapFloatOptional(node.getLeadingPaddingAndBorder(crossAxis, ownerWidth));\r\n    const paddingAndBorderAxisMain: number = YGNodePaddingAndBorderForAxis(node, mainAxis, ownerWidth);\r\n    const paddingAndBorderAxisCross: number = YGNodePaddingAndBorderForAxis(node, crossAxis, ownerWidth);\r\n\r\n    let measureModeMainDim: YGMeasureMode = isMainAxisRow ? widthMeasureMode : heightMeasureMode;\r\n    let measureModeCrossDim: YGMeasureMode = isMainAxisRow ? heightMeasureMode : widthMeasureMode;\r\n\r\n    const paddingAndBorderAxisRow: number =\r\n        isMainAxisRow ? paddingAndBorderAxisMain : paddingAndBorderAxisCross;\r\n    const paddingAndBorderAxisColumn: number =\r\n        isMainAxisRow ? paddingAndBorderAxisCross : paddingAndBorderAxisMain;\r\n\r\n    const marginAxisRow: number = YGUnwrapFloatOptional(\r\n        node.getMarginForAxis(YGFlexDirection.Row, ownerWidth));\r\n    const marginAxisColumn: number = YGUnwrapFloatOptional(\r\n        node.getMarginForAxis(YGFlexDirection.Column, ownerWidth));\r\n\r\n    const minInnerWidth: number =\r\n        YGUnwrapFloatOptional(YGResolveValue(node.getStyle().minDimensions[YGDimension.Width], ownerWidth)) -\r\n        paddingAndBorderAxisRow;\r\n    const maxInnerWidth: number =\r\n        YGUnwrapFloatOptional(YGResolveValue(node.getStyle().maxDimensions[YGDimension.Width], ownerWidth)) -\r\n        paddingAndBorderAxisRow;\r\n    const minInnerHeight: number =\r\n        YGUnwrapFloatOptional(YGResolveValue(node.getStyle().minDimensions[YGDimension.Height], ownerHeight)) -\r\n        paddingAndBorderAxisColumn;\r\n    const maxInnerHeight: number =\r\n        YGUnwrapFloatOptional(YGResolveValue(node.getStyle().maxDimensions[YGDimension.Height], ownerHeight)) -\r\n        paddingAndBorderAxisColumn;\r\n\r\n    const minInnerMainDim: number = isMainAxisRow ? minInnerWidth : minInnerHeight;\r\n    const maxInnerMainDim: number = isMainAxisRow ? maxInnerWidth : maxInnerHeight;\r\n    const availableInnerWidth: number = YGNodeCalculateAvailableInnerDim(\r\n        node, YGFlexDirection.Row, availableWidth, ownerWidth);\r\n    const availableInnerHeight: number = YGNodeCalculateAvailableInnerDim(\r\n        node, YGFlexDirection.Column, availableHeight, ownerHeight);\r\n\r\n    let availableInnerMainDim: number =\r\n        isMainAxisRow ? availableInnerWidth : availableInnerHeight;\r\n    let availableInnerCrossDim: number =\r\n        isMainAxisRow ? availableInnerHeight : availableInnerWidth;\r\n\r\n    const totalOuterFlexBasis: { value: number } = { value: 0 };\r\n\r\n    YGNodeComputeFlexBasisForChildren(\r\n        node,\r\n        availableInnerWidth,\r\n        availableInnerHeight,\r\n        widthMeasureMode,\r\n        heightMeasureMode,\r\n        direction,\r\n        mainAxis,\r\n        config,\r\n        performLayout,\r\n        totalOuterFlexBasis);\r\n\r\n    const flexBasisOverflows: boolean = measureModeMainDim == YGMeasureMode.Undefined\r\n        ? false\r\n        : totalOuterFlexBasis.value > availableInnerMainDim;\r\n    if (isNodeFlexWrap && flexBasisOverflows &&\r\n        measureModeMainDim == YGMeasureMode.AtMost) {\r\n        measureModeMainDim = YGMeasureMode.Exactly;\r\n    }\r\n\r\n    let startOfLineIndex: number = 0;\r\n    let endOfLineIndex: number = 0;\r\n    let lineCount: number = 0;\r\n    let totalLineCrossDim: number = 0;\r\n    let maxLineMainDim: number = 0;\r\n\r\n    let collectedFlexItemsValues: YGCollectFlexItemsRowValues;\r\n    for (; endOfLineIndex < childCount;\r\n        lineCount++ , startOfLineIndex = endOfLineIndex) {\r\n        collectedFlexItemsValues = YGCalculateCollectFlexItemsRowValues(\r\n            node,\r\n            ownerDirection,\r\n            mainAxisownerSize,\r\n            availableInnerWidth,\r\n            availableInnerMainDim,\r\n            startOfLineIndex,\r\n            lineCount);\r\n        endOfLineIndex = collectedFlexItemsValues.endOfLineIndex;\r\n        const canSkipFlex: boolean = !performLayout && measureModeCrossDim == YGMeasureMode.Exactly;\r\n        let sizeBasedOnContent: boolean = false;\r\n\r\n        if (measureModeMainDim != YGMeasureMode.Exactly) {\r\n            if (!YGFloatIsUndefined(minInnerMainDim) &&\r\n                collectedFlexItemsValues.sizeConsumedOnCurrentLine <\r\n                minInnerMainDim) {\r\n                availableInnerMainDim = minInnerMainDim;\r\n            } else if (\r\n                !YGFloatIsUndefined(maxInnerMainDim) &&\r\n                collectedFlexItemsValues.sizeConsumedOnCurrentLine >\r\n                maxInnerMainDim) {\r\n                availableInnerMainDim = maxInnerMainDim;\r\n            } else {\r\n                if (!node.getConfig().useLegacyStretchBehaviour &&\r\n                    ((YGFloatIsUndefined(\r\n                        collectedFlexItemsValues.totalFlexGrowFactors) &&\r\n                        collectedFlexItemsValues.totalFlexGrowFactors == 0) ||\r\n                        (YGFloatIsUndefined(node.resolveFlexGrow()) &&\r\n                            node.resolveFlexGrow() == 0))) {\r\n                    availableInnerMainDim =\r\n                        collectedFlexItemsValues.sizeConsumedOnCurrentLine;\r\n                }\r\n\r\n                if (node.getConfig().useLegacyStretchBehaviour) {\r\n                    node.setLayoutDidUseLegacyFlag(true);\r\n                }\r\n                sizeBasedOnContent = !node.getConfig().useLegacyStretchBehaviour;\r\n            }\r\n        }\r\n\r\n        if (!sizeBasedOnContent && !YGFloatIsUndefined(availableInnerMainDim)) {\r\n            collectedFlexItemsValues.remainingFreeSpace = availableInnerMainDim -\r\n                collectedFlexItemsValues.sizeConsumedOnCurrentLine;\r\n        } else if (collectedFlexItemsValues.sizeConsumedOnCurrentLine < 0) {\r\n            collectedFlexItemsValues.remainingFreeSpace =\r\n                -collectedFlexItemsValues.sizeConsumedOnCurrentLine;\r\n        }\r\n\r\n        if (!canSkipFlex) {\r\n            YGResolveFlexibleLength(\r\n                node,\r\n                collectedFlexItemsValues,\r\n                mainAxis,\r\n                crossAxis,\r\n                mainAxisownerSize,\r\n                availableInnerMainDim,\r\n                availableInnerCrossDim,\r\n                availableInnerWidth,\r\n                availableInnerHeight,\r\n                flexBasisOverflows,\r\n                measureModeCrossDim,\r\n                performLayout,\r\n                config);\r\n        }\r\n\r\n        node.setLayoutHadOverflow(\r\n            node.getLayout().hadOverflow ||\r\n            (collectedFlexItemsValues.remainingFreeSpace < 0));\r\n\r\n        YGJustifyMainAxis(\r\n            node,\r\n            collectedFlexItemsValues,\r\n            startOfLineIndex,\r\n            mainAxis,\r\n            crossAxis,\r\n            measureModeMainDim,\r\n            measureModeCrossDim,\r\n            mainAxisownerSize,\r\n            ownerWidth,\r\n            availableInnerMainDim,\r\n            availableInnerCrossDim,\r\n            availableInnerWidth,\r\n            performLayout);\r\n\r\n        let containerCrossAxis: number = availableInnerCrossDim;\r\n        if (measureModeCrossDim == YGMeasureMode.Undefined ||\r\n            measureModeCrossDim == YGMeasureMode.AtMost) {\r\n\r\n            containerCrossAxis =\r\n                YGNodeBoundAxis(\r\n                    node,\r\n                    crossAxis,\r\n                    collectedFlexItemsValues.crossDim + paddingAndBorderAxisCross,\r\n                    crossAxisownerSize,\r\n                    ownerWidth) -\r\n                paddingAndBorderAxisCross;\r\n        }\r\n\r\n        if (!isNodeFlexWrap && measureModeCrossDim == YGMeasureMode.Exactly) {\r\n            collectedFlexItemsValues.crossDim = availableInnerCrossDim;\r\n        }\r\n\r\n        collectedFlexItemsValues.crossDim =\r\n            YGNodeBoundAxis(\r\n                node,\r\n                crossAxis,\r\n                collectedFlexItemsValues.crossDim + paddingAndBorderAxisCross,\r\n                crossAxisownerSize,\r\n                ownerWidth) -\r\n            paddingAndBorderAxisCross;\r\n\r\n        if (performLayout) {\r\n            for (let i = startOfLineIndex; i < endOfLineIndex; i++) {\r\n                const child: YGNode = node.getChild(i);\r\n                if (child.getStyle().display == YGDisplay.None) {\r\n                    continue;\r\n                }\r\n                if (child.getStyle().positionType == YGPositionType.Absolute) {\r\n                    const isChildLeadingPosDefined: boolean =\r\n                        child.isLeadingPositionDefined(crossAxis);\r\n                    if (isChildLeadingPosDefined) {\r\n                        child.setLayoutPosition(\r\n                            YGUnwrapFloatOptional(child.getLeadingPosition(\r\n                                crossAxis, availableInnerCrossDim)) +\r\n                            node.getLeadingBorder(crossAxis) +\r\n                            YGUnwrapFloatOptional(child.getLeadingMargin(\r\n                                crossAxis, availableInnerWidth)),\r\n                            pos[crossAxis]);\r\n                    }\r\n\r\n                    if (!isChildLeadingPosDefined ||\r\n                        YGFloatIsUndefined(child.getLayout().position[pos[crossAxis] as number])) {\r\n                        child.setLayoutPosition(\r\n                            node.getLeadingBorder(crossAxis) +\r\n                            YGUnwrapFloatOptional(child.getLeadingMargin(\r\n                                crossAxis, availableInnerWidth)),\r\n                            pos[crossAxis]);\r\n                    }\r\n                } else {\r\n                    let leadingCrossDim: number = leadingPaddingAndBorderCross;\r\n                    const alignItem: YGAlign = YGNodeAlignItem(node, child);\r\n                    if (alignItem == YGAlign.Stretch &&\r\n                        child.marginLeadingValue(crossAxis).unit != YGUnit.Auto &&\r\n                        child.marginTrailingValue(crossAxis).unit != YGUnit.Auto) {\r\n                        if (!YGNodeIsStyleDimDefined(child, crossAxis, availableInnerCrossDim)) {\r\n                            let childMainSize: number =\r\n                                child.getLayout().measuredDimensions[dim[mainAxis]];\r\n                            let childCrossSize: number =\r\n                                !child.getStyle().aspectRatio.isUndefined()\r\n                                    ? ((YGUnwrapFloatOptional(child.getMarginForAxis(\r\n                                        crossAxis, availableInnerWidth)) +\r\n                                        (isMainAxisRow ? childMainSize /\r\n                                            child.getStyle().aspectRatio.getValue()\r\n                                            : childMainSize *\r\n                                            child.getStyle().aspectRatio.getValue())))\r\n                                    : collectedFlexItemsValues.crossDim;\r\n\r\n                            childMainSize += YGUnwrapFloatOptional(\r\n                                child.getMarginForAxis(mainAxis, availableInnerWidth));\r\n\r\n                            let childMainMeasureMode: YGMeasureMode = YGMeasureMode.Exactly;\r\n                            let childCrossMeasureMode: YGMeasureMode = YGMeasureMode.Exactly;\r\n\r\n                            let childMainMeasureModeRef = { value: childMainMeasureMode }\r\n                            let childMainSizeRef = { value: childMainSize }\r\n                            let childCrossMeasureModeRef = { value: childCrossMeasureMode }\r\n                            let childCrossSizeRef = { value: childCrossSize }\r\n\r\n                            YGConstrainMaxSizeForMode(child,\r\n                                mainAxis,\r\n                                availableInnerMainDim,\r\n                                availableInnerWidth,\r\n                                childMainMeasureModeRef,\r\n                                childMainSizeRef);\r\n                            YGConstrainMaxSizeForMode(child,\r\n                                crossAxis,\r\n                                availableInnerCrossDim,\r\n                                availableInnerWidth,\r\n                                childCrossMeasureModeRef,\r\n                                childCrossSizeRef);\r\n\r\n                            childMainMeasureMode = childMainMeasureModeRef.value\r\n                            childMainSize = childMainSizeRef.value\r\n                            childCrossMeasureMode = childCrossMeasureModeRef.value\r\n                            childCrossSize = childCrossSizeRef.value\r\n\r\n                            const childWidth: number = isMainAxisRow ? childMainSize : childCrossSize;\r\n                            const childHeight: number = !isMainAxisRow ? childMainSize : childCrossSize;\r\n\r\n                            const childWidthMeasureMode: YGMeasureMode =\r\n                                YGFloatIsUndefined(childWidth) ? YGMeasureMode.Undefined\r\n                                    : YGMeasureMode.Exactly;\r\n                            const childHeightMeasureMode: YGMeasureMode =\r\n                                YGFloatIsUndefined(childHeight) ? YGMeasureMode.Undefined\r\n                                    : YGMeasureMode.Exactly;\r\n\r\n                            YGLayoutNodeInternal(\r\n                                child,\r\n                                childWidth,\r\n                                childHeight,\r\n                                direction,\r\n                                childWidthMeasureMode,\r\n                                childHeightMeasureMode,\r\n                                availableInnerWidth,\r\n                                availableInnerHeight,\r\n                                true,\r\n                                \"stretch\",\r\n                                config);\r\n                        }\r\n                    } else {\r\n                        const remainingCrossDim: number = containerCrossAxis -\r\n                            YGNodeDimWithMargin(child, crossAxis, availableInnerWidth);\r\n\r\n                        if (child.marginLeadingValue(crossAxis).unit == YGUnit.Auto &&\r\n                            child.marginTrailingValue(crossAxis).unit == YGUnit.Auto) {\r\n                            leadingCrossDim += YGFloatMax(0.0, remainingCrossDim / 2);\r\n                        } else if (\r\n                            child.marginTrailingValue(crossAxis).unit == YGUnit.Auto) {\r\n\r\n                        } else if (\r\n                            child.marginLeadingValue(crossAxis).unit == YGUnit.Auto) {\r\n                            leadingCrossDim += YGFloatMax(0.0, remainingCrossDim);\r\n                        } else if (alignItem == YGAlign.FlexStart) {\r\n                            // NO=OP\r\n                        } else if (alignItem == YGAlign.Center) {\r\n                            leadingCrossDim += remainingCrossDim / 2;\r\n                        } else {\r\n                            leadingCrossDim += remainingCrossDim;\r\n                        }\r\n                    }\r\n\r\n                    child.setLayoutPosition(\r\n                        child.getLayout().position[pos[crossAxis] as number] + totalLineCrossDim +\r\n                        leadingCrossDim,\r\n                        pos[crossAxis]);\r\n                }\r\n            }\r\n        }\r\n\r\n        totalLineCrossDim += collectedFlexItemsValues.crossDim;\r\n        maxLineMainDim = YGFloatMax(maxLineMainDim, collectedFlexItemsValues.mainDim);\r\n    }\r\n    if (performLayout && (lineCount > 1 || YGIsBaselineLayout(node)) &&\r\n        !YGFloatIsUndefined(availableInnerCrossDim)) {\r\n        const remainingAlignContentDim: number = availableInnerCrossDim - totalLineCrossDim;\r\n\r\n        let crossDimLead: number = 0;\r\n        let currentLead: number = leadingPaddingAndBorderCross;\r\n\r\n        switch (node.getStyle().alignContent) {\r\n            case YGAlign.FlexEnd:\r\n                currentLead += remainingAlignContentDim;\r\n                break;\r\n            case YGAlign.Center:\r\n                currentLead += remainingAlignContentDim / 2;\r\n                break;\r\n            case YGAlign.Stretch:\r\n                if (availableInnerCrossDim > totalLineCrossDim) {\r\n                    crossDimLead = remainingAlignContentDim / lineCount;\r\n                }\r\n                break;\r\n            case YGAlign.SpaceAround:\r\n                if (availableInnerCrossDim > totalLineCrossDim) {\r\n                    currentLead += remainingAlignContentDim / (2 * lineCount);\r\n                    if (lineCount > 1) {\r\n                        crossDimLead = remainingAlignContentDim / lineCount;\r\n                    }\r\n                } else {\r\n                    currentLead += remainingAlignContentDim / 2;\r\n                }\r\n                break;\r\n            case YGAlign.SpaceBetween:\r\n                if (availableInnerCrossDim > totalLineCrossDim && lineCount > 1) {\r\n                    crossDimLead = remainingAlignContentDim / (lineCount - 1);\r\n                }\r\n                break;\r\n            case YGAlign.Auto:\r\n            case YGAlign.FlexStart:\r\n            case YGAlign.Baseline:\r\n                break;\r\n        }\r\n\r\n        let endIndex: number = 0;\r\n        for (let i: number = 0; i < lineCount; i++) {\r\n            let startIndex: number = endIndex;\r\n            let ii: number;\r\n            let lineHeight: number = 0;\r\n            let maxAscentForCurrentLine: number = 0;\r\n            let maxDescentForCurrentLine: number = 0;\r\n\r\n            for (ii = startIndex; ii < childCount; ii++) {\r\n                const child: YGNode = node.getChild(ii);\r\n                if (child.getStyle().display == YGDisplay.None) {\r\n                    continue;\r\n                }\r\n                if (child.getStyle().positionType == YGPositionType.Relative) {\r\n                    if (child.getLineIndex() != i) {\r\n                        break;\r\n                    }\r\n                    if (YGNodeIsLayoutDimDefined(child, crossAxis)) {\r\n                        lineHeight = YGFloatMax(\r\n                            lineHeight,\r\n                            child.getLayout().measuredDimensions[dim[crossAxis]] +\r\n                            YGUnwrapFloatOptional(child.getMarginForAxis(\r\n                                crossAxis, availableInnerWidth)));\r\n                    }\r\n                    if (YGNodeAlignItem(node, child) == YGAlign.Baseline) {\r\n                        const ascent: number = YGBaseline(child) +\r\n                            YGUnwrapFloatOptional(child.getLeadingMargin(\r\n                                YGFlexDirection.Column, availableInnerWidth));\r\n                        const descent: number =\r\n                            child.getLayout().measuredDimensions[YGDimension.Height] +\r\n                            YGUnwrapFloatOptional(child.getMarginForAxis(\r\n                                YGFlexDirection.Column, availableInnerWidth)) -\r\n                            ascent;\r\n                        maxAscentForCurrentLine =\r\n                            YGFloatMax(maxAscentForCurrentLine, ascent);\r\n                        maxDescentForCurrentLine =\r\n                            YGFloatMax(maxDescentForCurrentLine, descent);\r\n                        lineHeight = YGFloatMax(\r\n                            lineHeight, maxAscentForCurrentLine + maxDescentForCurrentLine);\r\n                    }\r\n                }\r\n            }\r\n            endIndex = ii;\r\n            lineHeight += crossDimLead;\r\n\r\n            if (performLayout) {\r\n                for (ii = startIndex; ii < endIndex; ii++) {\r\n                    const child: YGNode = node.getChild(ii);\r\n                    if (child.getStyle().display == YGDisplay.None) {\r\n                        continue;\r\n                    }\r\n                    if (child.getStyle().positionType == YGPositionType.Relative) {\r\n                        switch (YGNodeAlignItem(node, child)) {\r\n                            case YGAlign.FlexStart: {\r\n                                child.setLayoutPosition(\r\n                                    currentLead +\r\n                                    YGUnwrapFloatOptional(child.getLeadingMargin(\r\n                                        crossAxis, availableInnerWidth)),\r\n                                    pos[crossAxis]);\r\n                                break;\r\n                            }\r\n                            case YGAlign.FlexEnd: {\r\n                                child.setLayoutPosition(\r\n                                    currentLead + lineHeight -\r\n                                    YGUnwrapFloatOptional(child.getTrailingMargin(\r\n                                        crossAxis, availableInnerWidth)) -\r\n                                    child.getLayout().measuredDimensions[dim[crossAxis]],\r\n                                    pos[crossAxis]);\r\n                                break;\r\n                            }\r\n                            case YGAlign.Center: {\r\n                                const childHeight: number =\r\n                                    child.getLayout().measuredDimensions[dim[crossAxis]];\r\n\r\n                                child.setLayoutPosition(\r\n                                    currentLead + (lineHeight - childHeight) / 2,\r\n                                    pos[crossAxis]);\r\n                                break;\r\n                            }\r\n                            case YGAlign.Stretch: {\r\n                                child.setLayoutPosition(\r\n                                    currentLead +\r\n                                    YGUnwrapFloatOptional(child.getLeadingMargin(\r\n                                        crossAxis, availableInnerWidth)),\r\n                                    pos[crossAxis]);\r\n\r\n                                if (!YGNodeIsStyleDimDefined(child, crossAxis, availableInnerCrossDim)) {\r\n                                    const childWidth: number = isMainAxisRow\r\n                                        ? (child.getLayout()\r\n                                            .measuredDimensions[YGDimension.Width] +\r\n                                            YGUnwrapFloatOptional(child.getMarginForAxis(\r\n                                                mainAxis, availableInnerWidth)))\r\n                                        : lineHeight;\r\n\r\n                                    const childHeight: number = !isMainAxisRow\r\n                                        ? (child.getLayout()\r\n                                            .measuredDimensions[YGDimension.Height] +\r\n                                            YGUnwrapFloatOptional(child.getMarginForAxis(\r\n                                                crossAxis, availableInnerWidth)))\r\n                                        : lineHeight;\r\n\r\n                                    if (!(YGFloatsEqual(\r\n                                        childWidth,\r\n                                        child.getLayout()\r\n                                            .measuredDimensions[YGDimension.Width]) &&\r\n                                        YGFloatsEqual(\r\n                                            childHeight,\r\n                                            child.getLayout()\r\n                                                .measuredDimensions[YGDimension.Height]))) {\r\n                                        YGLayoutNodeInternal(child,\r\n                                            childWidth,\r\n                                            childHeight,\r\n                                            direction,\r\n                                            YGMeasureMode.Exactly,\r\n                                            YGMeasureMode.Exactly,\r\n                                            availableInnerWidth,\r\n                                            availableInnerHeight,\r\n                                            true,\r\n                                            \"multiline-stretch\",\r\n                                            config);\r\n                                    }\r\n                                }\r\n                                break;\r\n                            }\r\n                            case YGAlign.Baseline: {\r\n                                child.setLayoutPosition(\r\n                                    currentLead + maxAscentForCurrentLine - YGBaseline(child) +\r\n                                    YGUnwrapFloatOptional(child.getLeadingPosition(\r\n                                        YGFlexDirection.Column, availableInnerCrossDim)),\r\n                                    YGEdge.Top);\r\n\r\n                                break;\r\n                            }\r\n                            case YGAlign.Auto:\r\n                            case YGAlign.SpaceBetween:\r\n                            case YGAlign.SpaceAround:\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            currentLead += lineHeight;\r\n        }\r\n    }\r\n\r\n    node.setLayoutMeasuredDimension(\r\n        YGNodeBoundAxis(\r\n            node,\r\n            YGFlexDirection.Row,\r\n            availableWidth - marginAxisRow,\r\n            ownerWidth,\r\n            ownerWidth),\r\n        YGDimension.Width);\r\n\r\n    node.setLayoutMeasuredDimension(\r\n        YGNodeBoundAxis(\r\n            node,\r\n            YGFlexDirection.Column,\r\n            availableHeight - marginAxisColumn,\r\n            ownerHeight,\r\n            ownerWidth),\r\n        YGDimension.Height);\r\n\r\n    if (measureModeMainDim == YGMeasureMode.Undefined ||\r\n        (node.getStyle().overflow != YGOverflow.Scroll &&\r\n            measureModeMainDim == YGMeasureMode.AtMost)) {\r\n        node.setLayoutMeasuredDimension(\r\n            YGNodeBoundAxis(\r\n                node, mainAxis, maxLineMainDim, mainAxisownerSize, ownerWidth),\r\n            dim[mainAxis]);\r\n\r\n    } else if (\r\n        measureModeMainDim == YGMeasureMode.AtMost &&\r\n        node.getStyle().overflow == YGOverflow.Scroll) {\r\n        node.setLayoutMeasuredDimension(\r\n            YGFloatMax(\r\n                YGFloatMin(\r\n                    availableInnerMainDim + paddingAndBorderAxisMain,\r\n                    YGUnwrapFloatOptional(YGNodeBoundAxisWithinMinAndMax(\r\n                        node, mainAxis, maxLineMainDim, mainAxisownerSize))),\r\n                paddingAndBorderAxisMain),\r\n            dim[mainAxis]);\r\n    }\r\n\r\n    if (measureModeCrossDim == YGMeasureMode.Undefined ||\r\n        (node.getStyle().overflow != YGOverflow.Scroll &&\r\n            measureModeCrossDim == YGMeasureMode.AtMost)) {\r\n        node.setLayoutMeasuredDimension(\r\n            YGNodeBoundAxis(\r\n                node,\r\n                crossAxis,\r\n                totalLineCrossDim + paddingAndBorderAxisCross,\r\n                crossAxisownerSize,\r\n                ownerWidth),\r\n            dim[crossAxis]);\r\n\r\n    } else if (\r\n        measureModeCrossDim == YGMeasureMode.AtMost &&\r\n        node.getStyle().overflow == YGOverflow.Scroll) {\r\n        node.setLayoutMeasuredDimension(\r\n            YGFloatMax(\r\n                YGFloatMin(\r\n                    availableInnerCrossDim + paddingAndBorderAxisCross,\r\n                    YGUnwrapFloatOptional(YGNodeBoundAxisWithinMinAndMax(\r\n                        node,\r\n                        crossAxis,\r\n                        totalLineCrossDim + paddingAndBorderAxisCross,\r\n                        crossAxisownerSize))),\r\n                paddingAndBorderAxisCross),\r\n            dim[crossAxis]);\r\n    }\r\n\r\n    if (performLayout && node.getStyle().flexWrap == YGWrap.WrapReverse) {\r\n        for (let i: number = 0; i < childCount; i++) {\r\n            const child: YGNode = YGNodeGetChild(node, i);\r\n            if (child.getStyle().positionType == YGPositionType.Relative) {\r\n                child.setLayoutPosition(\r\n                    node.getLayout().measuredDimensions[dim[crossAxis]] -\r\n                    child.getLayout().position[pos[crossAxis] as number] -\r\n                    child.getLayout().measuredDimensions[dim[crossAxis]],\r\n                    pos[crossAxis]);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (performLayout) {\r\n        const children: Array<YGNode> = node.getChildren();\r\n        for (let i = 0; i < children.length; ++i) {\r\n            const child: YGNode = children[i];\r\n\r\n            if (child.getStyle().positionType != YGPositionType.Absolute) {\r\n                continue;\r\n            }\r\n\r\n            YGNodeAbsoluteLayoutChild(\r\n                node,\r\n                child,\r\n                availableInnerWidth,\r\n                isMainAxisRow ? measureModeMainDim : measureModeCrossDim,\r\n                availableInnerHeight,\r\n                direction,\r\n                config);\r\n        }\r\n\r\n        const needsMainTrailingPos: boolean =\r\n            mainAxis == YGFlexDirection.RowReverse || mainAxis == YGFlexDirection.ColumnReverse;\r\n        const needsCrossTrailingPos: boolean =\r\n            crossAxis == YGFlexDirection.RowReverse || crossAxis == YGFlexDirection.ColumnReverse;\r\n\r\n        if (needsMainTrailingPos || needsCrossTrailingPos) {\r\n            for (let i = 0; i < childCount; i++) {\r\n                const child: YGNode = node.getChild(i);\r\n                if (child.getStyle().display == YGDisplay.None) {\r\n                    continue;\r\n                }\r\n\r\n                if (needsMainTrailingPos) {\r\n                    YGNodeSetChildTrailingPosition(node, child, mainAxis);\r\n                }\r\n\r\n                if (needsCrossTrailingPos) {\r\n                    YGNodeSetChildTrailingPosition(node, child, crossAxis);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet gDepth: number = 0;\r\nconst gPrintTree: boolean = false;\r\nconst gPrintChanges: boolean = false;\r\nconst gPrintSkips: boolean = false;\r\nconst spacer: string = \"                                                            \";\r\n\r\nexport function YGSpacer(level: number): string {\r\n    const spacerLen: number = spacer.length;\r\n    if (level > spacerLen) {\r\n        return spacer;\r\n    } else {\r\n        return spacer.substr(spacerLen - level);\r\n    }\r\n}\r\n\r\n\r\nexport function YGMeasureModeName(mode: YGMeasureMode, performLayout: boolean): string {\r\n    const kMeasureModeNames: Array<string> = [\"UNDEFINED\", \"EXACTLY\", \"AT_MOST\"];\r\n    const kLayoutModeNames: Array<string> = [\"LAY_UNDEFINED\", \"LAY_EXACTLY\", \"LAY_AT_\", \"MOST\"];\r\n\r\n    if (mode >= YGMeasureModeCount) {\r\n        return \"\";\r\n    }\r\n\r\n    return performLayout ? kLayoutModeNames[mode] : kMeasureModeNames[mode];\r\n}\r\n\r\nexport function YGMeasureModeSizeIsExactAndMatchesOldMeasuredSize(\r\n    sizeMode: YGMeasureMode,\r\n    size: number,\r\n    lastComputedSize: number): boolean {\r\n    return sizeMode == YGMeasureMode.Exactly && YGFloatsEqual(size, lastComputedSize);\r\n}\r\n\r\nexport function YGMeasureModeOldSizeIsUnspecifiedAndStillFits(\r\n    sizeMode: YGMeasureMode,\r\n    size: number,\r\n    lastSizeMode: YGMeasureMode,\r\n    lastComputedSize: number) {\r\n    return sizeMode == YGMeasureMode.AtMost && lastSizeMode == YGMeasureMode.Undefined &&\r\n        (size >= lastComputedSize || YGFloatsEqual(size, lastComputedSize));\r\n}\r\n\r\nexport function YGMeasureModeNewMeasureSizeIsStricterAndStillValid(\r\n    sizeMode: YGMeasureMode,\r\n    size: number,\r\n    lastSizeMode: YGMeasureMode,\r\n    lastSize: number,\r\n    lastComputedSize: number): boolean {\r\n    return lastSizeMode == YGMeasureMode.AtMost &&\r\n        sizeMode == YGMeasureMode.AtMost && !YGFloatIsUndefined(lastSize) &&\r\n        !YGFloatIsUndefined(size) && !YGFloatIsUndefined(lastComputedSize) &&\r\n        lastSize > size &&\r\n        (lastComputedSize <= size || YGFloatsEqual(size, lastComputedSize));\r\n}\r\n\r\nexport function YGRoundValueToPixelGrid(value: number,\r\n    pointScaleFactor: number,\r\n    forceCeil: boolean,\r\n    forceFloor: boolean) {\r\n\r\n    let scaledValue: number = value * pointScaleFactor;\r\n    const fractial: number = scaledValue % 1.0;\r\n\r\n    if (YGFloatsEqual(fractial, 0)) {\r\n        scaledValue = scaledValue - fractial;\r\n    } else if (YGFloatsEqual(fractial, 1.0)) {\r\n        scaledValue = scaledValue - fractial + 1.0;\r\n    } else if (forceCeil) {\r\n        scaledValue = scaledValue - fractial + 1.0;\r\n    } else if (forceFloor) {\r\n        scaledValue = scaledValue - fractial;\r\n    } else {\r\n        scaledValue = scaledValue - fractial +\r\n            (!YGFloatIsUndefined(fractial) &&\r\n                (fractial > 0.5 || YGFloatsEqual(fractial, 0.5))\r\n                ? 1.0\r\n                : 0.0);\r\n    }\r\n\r\n    return (YGFloatIsUndefined(scaledValue) ||\r\n        YGFloatIsUndefined(pointScaleFactor))\r\n        ? YGUndefined\r\n        : scaledValue / pointScaleFactor;\r\n}\r\n\r\nexport function YGNodeCanUseCachedMeasurement(\r\n    widthMode: YGMeasureMode,\r\n    width: number,\r\n    heightMode: YGMeasureMode,\r\n    height: number,\r\n    lastWidthMode: YGMeasureMode,\r\n    lastWidth: number,\r\n    lastHeightMode: YGMeasureMode,\r\n    lastHeight: number,\r\n    lastComputedWidth: number,\r\n    lastComputedHeight: number,\r\n    marginRow: number,\r\n    marginColumn: number,\r\n    config: YGConfig): boolean {\r\n    if ((!YGFloatIsUndefined(lastComputedHeight) && lastComputedHeight < 0) ||\r\n        (!YGFloatIsUndefined(lastComputedWidth) && lastComputedWidth < 0)) {\r\n        return false;\r\n    }\r\n\r\n    const useRoundedComparison: boolean =\r\n        config != null && config.pointScaleFactor != 0;\r\n    const effectiveWidth: number =\r\n        useRoundedComparison ? YGRoundValueToPixelGrid(width, config.pointScaleFactor, false, false)\r\n            : width;\r\n    const effectiveHeight: number =\r\n        useRoundedComparison ? YGRoundValueToPixelGrid(height, config.pointScaleFactor, false, false)\r\n            : height;\r\n    const effectiveLastWidth: number =\r\n        useRoundedComparison\r\n            ? YGRoundValueToPixelGrid(lastWidth, config.pointScaleFactor, false, false)\r\n            : lastWidth;\r\n    const effectiveLastHeight: number =\r\n        useRoundedComparison\r\n            ? YGRoundValueToPixelGrid(lastHeight, config.pointScaleFactor, false, false)\r\n            : lastHeight;\r\n\r\n    const hasSameWidthSpec: boolean =\r\n        lastWidthMode == widthMode && YGFloatsEqual(effectiveLastWidth, effectiveWidth);\r\n    const hasSameHeightSpec: boolean =\r\n        lastHeightMode == heightMode && YGFloatsEqual(effectiveLastHeight, effectiveHeight);\r\n\r\n    const widthIsCompatible: boolean =\r\n        hasSameWidthSpec || YGMeasureModeSizeIsExactAndMatchesOldMeasuredSize(widthMode,\r\n            width - marginRow,\r\n            lastComputedWidth) ||\r\n        YGMeasureModeOldSizeIsUnspecifiedAndStillFits(widthMode,\r\n            width - marginRow,\r\n            lastWidthMode,\r\n            lastComputedWidth) ||\r\n        YGMeasureModeNewMeasureSizeIsStricterAndStillValid(\r\n            widthMode, width - marginRow, lastWidthMode, lastWidth, lastComputedWidth);\r\n\r\n    const heightIsCompatible: boolean =\r\n        hasSameHeightSpec || YGMeasureModeSizeIsExactAndMatchesOldMeasuredSize(heightMode,\r\n            height - marginColumn,\r\n            lastComputedHeight) ||\r\n        YGMeasureModeOldSizeIsUnspecifiedAndStillFits(heightMode,\r\n            height - marginColumn,\r\n            lastHeightMode,\r\n            lastComputedHeight) ||\r\n        YGMeasureModeNewMeasureSizeIsStricterAndStillValid(\r\n            heightMode, height - marginColumn, lastHeightMode, lastHeight, lastComputedHeight);\r\n\r\n    return widthIsCompatible && heightIsCompatible;\r\n}\r\n\r\nexport function YGLayoutNodeInternal(\r\n    node: YGNode,\r\n    availableWidth: number,\r\n    availableHeight: number,\r\n    ownerDirection: YGDirection,\r\n    widthMeasureMode: YGMeasureMode,\r\n    heightMeasureMode: YGMeasureMode,\r\n    ownerWidth: number,\r\n    ownerHeight: number,\r\n    performLayout: boolean,\r\n    reason: string,\r\n    config: YGConfig) {\r\n    const layout: YGLayout = node.getLayout();\r\n\r\n    gDepth++;\r\n\r\n    const needToVisitNode: boolean =\r\n        (node.isDirty() && layout.generationCount != gCurrentGenerationCount) ||\r\n        layout.lastOwnerDirection != ownerDirection;\r\n\r\n    if (needToVisitNode) {\r\n        layout.nextCachedMeasurementsIndex = 0;\r\n        layout.cachedLayout.widthMeasureMode = (YGMeasureModeCount) - 1;\r\n        layout.cachedLayout.heightMeasureMode = (YGMeasureModeCount) - 1;\r\n        layout.cachedLayout.computedWidth = -1;\r\n        layout.cachedLayout.computedHeight = -1;\r\n    }\r\n\r\n    let cachedResults: YGCachedMeasurement = null;\r\n\r\n    if (node.getMeasure() != null) {\r\n        const marginAxisRow: number = YGUnwrapFloatOptional(\r\n            node.getMarginForAxis(YGFlexDirection.Row, ownerWidth));\r\n        const marginAxisColumn: number = YGUnwrapFloatOptional(\r\n            node.getMarginForAxis(YGFlexDirection.Column, ownerWidth));\r\n\r\n        if (YGNodeCanUseCachedMeasurement(widthMeasureMode,\r\n            availableWidth,\r\n            heightMeasureMode,\r\n            availableHeight,\r\n            layout.cachedLayout.widthMeasureMode,\r\n            layout.cachedLayout.availableWidth,\r\n            layout.cachedLayout.heightMeasureMode,\r\n            layout.cachedLayout.availableHeight,\r\n            layout.cachedLayout.computedWidth,\r\n            layout.cachedLayout.computedHeight,\r\n            marginAxisRow,\r\n            marginAxisColumn,\r\n            config)) {\r\n            cachedResults = layout.cachedLayout;\r\n        } else {\r\n            for (let i: number = 0; i < layout.nextCachedMeasurementsIndex; i++) {\r\n                if (YGNodeCanUseCachedMeasurement(widthMeasureMode,\r\n                    availableWidth,\r\n                    heightMeasureMode,\r\n                    availableHeight,\r\n                    layout.cachedMeasurements[i].widthMeasureMode,\r\n                    layout.cachedMeasurements[i].availableWidth,\r\n                    layout.cachedMeasurements[i].heightMeasureMode,\r\n                    layout.cachedMeasurements[i].availableHeight,\r\n                    layout.cachedMeasurements[i].computedWidth,\r\n                    layout.cachedMeasurements[i].computedHeight,\r\n                    marginAxisRow,\r\n                    marginAxisColumn,\r\n                    config)) {\r\n                    cachedResults = layout.cachedMeasurements[i];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    } else if (performLayout) {\r\n        if (YGFloatsEqual(layout.cachedLayout.availableWidth, availableWidth) &&\r\n            YGFloatsEqual(layout.cachedLayout.availableHeight, availableHeight) &&\r\n            layout.cachedLayout.widthMeasureMode == widthMeasureMode &&\r\n            layout.cachedLayout.heightMeasureMode == heightMeasureMode) {\r\n            cachedResults = layout.cachedLayout;\r\n        }\r\n    } else {\r\n        for (let i: number = 0; i < layout.nextCachedMeasurementsIndex; i++) {\r\n            if (YGFloatsEqual(layout.cachedMeasurements[i].availableWidth, availableWidth) &&\r\n                YGFloatsEqual(layout.cachedMeasurements[i].availableHeight, availableHeight) &&\r\n                layout.cachedMeasurements[i].widthMeasureMode == widthMeasureMode &&\r\n                layout.cachedMeasurements[i].heightMeasureMode == heightMeasureMode) {\r\n                cachedResults = layout.cachedMeasurements[i];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!needToVisitNode && cachedResults != null) {\r\n        layout.measuredDimensions[YGDimension.Width] = cachedResults.computedWidth;\r\n        layout.measuredDimensions[YGDimension.Height] = cachedResults.computedHeight;\r\n\r\n        if (gPrintChanges && gPrintSkips) {\r\n            YGLog(node, YGLogLevel.Verbose, \"%s%d.{[skipped] \", YGSpacer(gDepth), gDepth);\r\n            if (node.getPrintFunc() != null) {\r\n                node.getPrintFunc()(node);\r\n            }\r\n            YGLog(\r\n                node,\r\n                YGLogLevel.Verbose,\r\n                \"wm: %s, hm: %s, aw: %f ah: %f => d: (%f, %f) %s\\n\",\r\n                YGMeasureModeName(widthMeasureMode, performLayout),\r\n                YGMeasureModeName(heightMeasureMode, performLayout),\r\n                availableWidth,\r\n                availableHeight,\r\n                cachedResults.computedWidth,\r\n                cachedResults.computedHeight,\r\n                reason);\r\n        }\r\n    } else {\r\n        if (gPrintChanges) {\r\n            YGLog(\r\n                node,\r\n                YGLogLevel.Verbose,\r\n                \"%s%d.{%s\",\r\n                YGSpacer(gDepth),\r\n                gDepth,\r\n                needToVisitNode ? \"*\" : \"\");\r\n            if (node.getPrintFunc() != null) {\r\n                node.getPrintFunc()(node);\r\n            }\r\n            YGLog(\r\n                node,\r\n                YGLogLevel.Verbose,\r\n                \"wm: %s, hm: %s, aw: %f ah: %f %s\\n\",\r\n                YGMeasureModeName(widthMeasureMode, performLayout),\r\n                YGMeasureModeName(heightMeasureMode, performLayout),\r\n                availableWidth,\r\n                availableHeight,\r\n                reason);\r\n        }\r\n\r\n        YGNodelayoutImpl(node,\r\n            availableWidth,\r\n            availableHeight,\r\n            ownerDirection,\r\n            widthMeasureMode,\r\n            heightMeasureMode,\r\n            ownerWidth,\r\n            ownerHeight,\r\n            performLayout,\r\n            config);\r\n\r\n        if (gPrintChanges) {\r\n            YGLog(\r\n                node,\r\n                YGLogLevel.Verbose,\r\n                \"%s%d.}%s\",\r\n                YGSpacer(gDepth),\r\n                gDepth,\r\n                needToVisitNode ? \"*\" : \"\");\r\n            if (node.getPrintFunc() != null) {\r\n                node.getPrintFunc()(node);\r\n            }\r\n            YGLog(\r\n                node,\r\n                YGLogLevel.Verbose,\r\n                \"wm: %s, hm: %s, d: (%f, %f) %s\\n\",\r\n                YGMeasureModeName(widthMeasureMode, performLayout),\r\n                YGMeasureModeName(heightMeasureMode, performLayout),\r\n                layout.measuredDimensions[YGDimension.Width],\r\n                layout.measuredDimensions[YGDimension.Height],\r\n                reason);\r\n        }\r\n\r\n        layout.lastOwnerDirection = ownerDirection;\r\n\r\n        if (cachedResults == null) {\r\n            if (layout.nextCachedMeasurementsIndex == YG_MAX_CACHED_RESULT_COUNT) {\r\n                if (gPrintChanges) {\r\n                    YGLog(node, YGLogLevel.Verbose, \"Out of cache entries!\\n\");\r\n                }\r\n                layout.nextCachedMeasurementsIndex = 0;\r\n            }\r\n\r\n            let newCacheEntry: YGCachedMeasurement;\r\n            if (performLayout) {\r\n                newCacheEntry = layout.cachedLayout;\r\n            } else {\r\n                newCacheEntry = layout.cachedMeasurements[layout.nextCachedMeasurementsIndex];\r\n                layout.nextCachedMeasurementsIndex++;\r\n            }\r\n\r\n            newCacheEntry.availableWidth = availableWidth;\r\n            newCacheEntry.availableHeight = availableHeight;\r\n            newCacheEntry.widthMeasureMode = widthMeasureMode;\r\n            newCacheEntry.heightMeasureMode = heightMeasureMode;\r\n            newCacheEntry.computedWidth = layout.measuredDimensions[YGDimension.Width];\r\n            newCacheEntry.computedHeight = layout.measuredDimensions[YGDimension.Height];\r\n        }\r\n    }\r\n\r\n    if (performLayout) {\r\n        node.setLayoutDimension(\r\n            node.getLayout().measuredDimensions[YGDimension.Width],\r\n            YGDimension.Width);\r\n        node.setLayoutDimension(\r\n            node.getLayout().measuredDimensions[YGDimension.Height],\r\n            YGDimension.Height);\r\n\r\n        node.setHasNewLayout(true);\r\n        node.setDirty(false);\r\n    }\r\n\r\n    gDepth--;\r\n    layout.generationCount = gCurrentGenerationCount;\r\n    return (needToVisitNode || cachedResults == null);\r\n}\r\n\r\nexport function YGConfigSetPointScaleFactor(config: YGConfig, pixelsInPoint: number): void {\r\n    YGAssertWithConfig(config, pixelsInPoint >= 0.0, \"Scale factor should not be less than zero\");\r\n    if (pixelsInPoint == 0.0) {\r\n        config.pointScaleFactor = 0.0;\r\n    } else {\r\n        config.pointScaleFactor = pixelsInPoint;\r\n    }\r\n}\r\n\r\nfunction fmodf(x: number, y: number) {\r\n    return x % y;\r\n}\r\n\r\nexport function YGRoundToPixelGrid(node: YGNode, pointScaleFactor: number, absoluteLeft: number, absoluteTop: number): void {\r\n    if (pointScaleFactor == 0.0) {\r\n        return;\r\n    }\r\n\r\n    const nodeLeft: number = node.getLayout().position[YGEdge.Left];\r\n    const nodeTop: number = node.getLayout().position[YGEdge.Top];\r\n\r\n    const nodeWidth: number = node.getLayout().dimensions[YGDimension.Width];\r\n    const nodeHeight: number = node.getLayout().dimensions[YGDimension.Height];\r\n\r\n    const absoluteNodeLeft: number = absoluteLeft + nodeLeft;\r\n    const absoluteNodeTop: number = absoluteTop + nodeTop;\r\n\r\n    const absoluteNodeRight: number = absoluteNodeLeft + nodeWidth;\r\n    const absoluteNodeBottom: number = absoluteNodeTop + nodeHeight;\r\n\r\n    const textRounding: boolean = node.getNodeType() == YGNodeType.Text;\r\n\r\n    node.setLayoutPosition(\r\n        YGRoundValueToPixelGrid(nodeLeft, pointScaleFactor, false, textRounding),\r\n        YGEdge.Left);\r\n\r\n    node.setLayoutPosition(\r\n        YGRoundValueToPixelGrid(nodeTop, pointScaleFactor, false, textRounding),\r\n        YGEdge.Top);\r\n\r\n    const hasFractionalWidth: boolean = !YGFloatsEqual(fmodf(nodeWidth * pointScaleFactor, 1.0), 0) &&\r\n        !YGFloatsEqual(fmodf(nodeWidth * pointScaleFactor, 1.0), 1.0);\r\n    const hasFractionalHeight: boolean = !YGFloatsEqual(fmodf(nodeHeight * pointScaleFactor, 1.0), 0) &&\r\n        !YGFloatsEqual(fmodf(nodeHeight * pointScaleFactor, 1.0), 1.0);\r\n\r\n    node.setLayoutDimension(\r\n        YGRoundValueToPixelGrid(\r\n            absoluteNodeRight,\r\n            pointScaleFactor,\r\n            (textRounding && hasFractionalWidth),\r\n            (textRounding && !hasFractionalWidth)) -\r\n        YGRoundValueToPixelGrid(\r\n            absoluteNodeLeft, pointScaleFactor, false, textRounding),\r\n        YGDimension.Width);\r\n\r\n    node.setLayoutDimension(\r\n        YGRoundValueToPixelGrid(\r\n            absoluteNodeBottom,\r\n            pointScaleFactor,\r\n            (textRounding && hasFractionalHeight),\r\n            (textRounding && !hasFractionalHeight)) -\r\n        YGRoundValueToPixelGrid(\r\n            absoluteNodeTop, pointScaleFactor, false, textRounding),\r\n        YGDimension.Height);\r\n\r\n    const childCount: number = YGNodeGetChildCount(node);\r\n    for (let i = 0; i < childCount; i++) {\r\n        YGRoundToPixelGrid(\r\n            YGNodeGetChild(node, i),\r\n            pointScaleFactor,\r\n            absoluteNodeLeft,\r\n            absoluteNodeTop);\r\n    }\r\n}\r\n\r\nexport function YGNodeCalculateLayout(\r\n    node: YGNode,\r\n    ownerWidth: number,\r\n    ownerHeight: number,\r\n    ownerDirection: YGDirection): void {\r\n\r\n    gCurrentGenerationCount++;\r\n    node.resolveDimension();\r\n\r\n    let width: number = YGUndefined;\r\n    let widthMeasureMode: YGMeasureMode = YGMeasureMode.Undefined;\r\n\r\n    if (YGNodeIsStyleDimDefined(node, YGFlexDirection.Row, ownerWidth)) {\r\n        width = YGUnwrapFloatOptional(\r\n            YGResolveValue(\r\n                node.getResolvedDimension(dim[YGFlexDirection.Row]), ownerWidth).add(\r\n                    node.getMarginForAxis(YGFlexDirection.Row, ownerWidth)));\r\n        widthMeasureMode = YGMeasureMode.Exactly;\r\n    } else if (!YGResolveValue(\r\n        node.getStyle().maxDimensions[YGDimension.Width], ownerWidth)\r\n        .isUndefined()) {\r\n        width = YGUnwrapFloatOptional(YGResolveValue(\r\n            node.getStyle().maxDimensions[YGDimension.Width], ownerWidth));\r\n        widthMeasureMode = YGMeasureMode.AtMost;\r\n    } else {\r\n        width = ownerWidth;\r\n        widthMeasureMode = YGFloatIsUndefined(width) ? YGMeasureMode.Undefined\r\n            : YGMeasureMode.Exactly;\r\n    }\r\n\r\n    let height: number = YGUndefined;\r\n    let heightMeasureMode: YGMeasureMode = YGMeasureMode.Undefined;\r\n    if (YGNodeIsStyleDimDefined(node, YGFlexDirection.Column, ownerHeight)) {\r\n        height = YGUnwrapFloatOptional(\r\n            YGResolveValue(\r\n                node.getResolvedDimension(dim[YGFlexDirection.Column]),\r\n                ownerHeight).add(\r\n                    node.getMarginForAxis(YGFlexDirection.Column, ownerWidth)));\r\n        heightMeasureMode = YGMeasureMode.Exactly;\r\n    } else if (!YGResolveValue(\r\n        node.getStyle().maxDimensions[YGDimension.Height],\r\n        ownerHeight)\r\n        .isUndefined()) {\r\n        height = YGUnwrapFloatOptional(YGResolveValue(node.getStyle().maxDimensions[YGDimension.Height], ownerHeight));\r\n        heightMeasureMode = YGMeasureMode.AtMost;\r\n    } else {\r\n        height = ownerHeight;\r\n        heightMeasureMode = YGFloatIsUndefined(height) ? YGMeasureMode.Undefined\r\n            : YGMeasureMode.Exactly;\r\n    }\r\n    if (YGLayoutNodeInternal(\r\n        node,\r\n        width,\r\n        height,\r\n        ownerDirection,\r\n        widthMeasureMode,\r\n        heightMeasureMode,\r\n        ownerWidth,\r\n        ownerHeight,\r\n        true,\r\n        \"initial\",\r\n        node.getConfig())) {\r\n        node.setPosition(\r\n            node.getLayout().direction, ownerWidth, ownerHeight, ownerWidth);\r\n        YGRoundToPixelGrid(node, node.getConfig().pointScaleFactor, 0.0, 0.0);\r\n\r\n        if (gPrintTree) {\r\n            YGNodePrint(\r\n                node,\r\n                YGPrintOptions.Layout | YGPrintOptions.Children | YGPrintOptions.Style);\r\n        }\r\n    }\r\n\r\n    if (node.getConfig().shouldDiffLayoutWithoutLegacyStretchBehaviour &&\r\n        node.didUseLegacyFlag()) {\r\n        console.log('legacy config')\r\n        const originalNode: YGNode = YGNodeDeepClone(node);\r\n        originalNode.resolveDimension();\r\n\r\n        originalNode.markDirtyAndPropogateDownwards();\r\n        gCurrentGenerationCount++;\r\n\r\n        originalNode.setAndPropogateUseLegacyFlag(false);\r\n        if (YGLayoutNodeInternal(\r\n            originalNode,\r\n            width,\r\n            height,\r\n            ownerDirection,\r\n            widthMeasureMode,\r\n            heightMeasureMode,\r\n            ownerWidth,\r\n            ownerHeight,\r\n            true,\r\n            \"initial\",\r\n            originalNode.getConfig())) {\r\n            originalNode.setPosition(\r\n                originalNode.getLayout().direction,\r\n                ownerWidth,\r\n                ownerHeight,\r\n                ownerWidth);\r\n            YGRoundToPixelGrid(\r\n                originalNode,\r\n                originalNode.getConfig().pointScaleFactor,\r\n                0.0,\r\n                0.0);\r\n\r\n            node.setLayoutDoesLegacyFlagAffectsLayout(!originalNode.isLayoutTreeEqualToNode(node));\r\n\r\n            if (gPrintTree) {\r\n                YGNodePrint(\r\n                    originalNode,\r\n                    YGPrintOptions.Layout | YGPrintOptions.Children | YGPrintOptions.Style);\r\n            }\r\n        }\r\n\r\n        YGConfigFreeRecursive(originalNode);\r\n        YGNodeFreeRecursive(originalNode);\r\n    }\r\n}\r\n\r\n\r\nexport function YGConfigSetLogger(config: YGConfig, logger: YGLogger): void {\r\n    if (logger != null) {\r\n        config.logger = logger;\r\n    } else {\r\n        config.logger = YGDefaultLog;\r\n    }\r\n}\r\n\r\nexport function YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviour(\r\n    config: YGConfig,\r\n    shouldDiffLayout: boolean): void {\r\n    config.shouldDiffLayoutWithoutLegacyStretchBehaviour = shouldDiffLayout;\r\n}\r\n\r\nexport function YGVLog(config: YGConfig,\r\n    node: YGNode,\r\n    level: YGLogLevel,\r\n    format: string,\r\n    ...args: any[]) {\r\n\r\n    const logConfig: YGConfig = config != null ? config : YGConfigGetDefault();\r\n    logConfig.logger(logConfig, node, level, format, args);\r\n\r\n    if (level == YGLogLevel.Fatal) {\r\n        throw new Error('Abort Yoga');\r\n    }\r\n}\r\n\r\nexport function YGLogWithConfig(config: YGConfig, level: YGLogLevel, format: string, ...args: any[]): void {\r\n    YGVLog(config, null, level, format, args);\r\n}\r\n\r\nexport function YGLog(node: YGNode, level: YGLogLevel, format: string, ...args: any[]): void {\r\n    YGVLog(node == null ? null : node.getConfig(), node, level, format, args);\r\n}\r\n\r\nexport function YGAssert(condition: boolean, message: string) {\r\n    if (!condition) {\r\n        YGLog(null, YGLogLevel.Fatal, \"%s\\n\", message);\r\n        //console.assert(condition, message);\r\n    }\r\n}\r\n\r\nexport function YGAssertWithNode(node: YGNode, condition: boolean, message: string): void {\r\n    if (!condition) {\r\n        YGLog(node, YGLogLevel.Fatal, \"%s\\n\", message);\r\n        //console.log(node);\r\n        //console.assert(condition, message);\r\n    }\r\n}\r\n\r\nexport function YGAssertWithConfig(config: YGConfig, condition: boolean, message: string) {\r\n    if (!condition) {\r\n        YGLogWithConfig(config, YGLogLevel.Fatal, \"%s\\n\", message);\r\n        //console.log(config);\r\n        //console.assert(condition, message);\r\n    }\r\n}\r\n\r\nexport function YGConfigSetExperimentalFeatureEnabled(config: YGConfig,\r\n    feature: YGExperimentalFeature,\r\n    enabled: boolean): void {\r\n    config.experimentalFeatures[feature] = enabled;\r\n}\r\n\r\nexport function YGConfigIsExperimentalFeatureEnabled(config: YGConfig,\r\n    feature: YGExperimentalFeature) {\r\n    return config.experimentalFeatures[feature];\r\n}\r\n\r\nexport function YGConfigSetUseWebDefaults(config: YGConfig, enabled: boolean): void {\r\n    config.useWebDefaults = enabled;\r\n}\r\n\r\nexport function YGConfigSetUseLegacyStretchBehaviour(config: YGConfig,\r\n    useLegacyStretchBehaviour: boolean): void {\r\n    config.useLegacyStretchBehaviour = useLegacyStretchBehaviour;\r\n}\r\n\r\nexport function YGConfigGetUseWebDefaults(config: YGConfig): boolean {\r\n    return config.useWebDefaults;\r\n}\r\n\r\nexport function YGConfigSetContext(config: YGConfig, context: any): void {\r\n    config.context = context;\r\n}\r\n\r\nexport function YGConfigGetContext(config: YGConfig): any {\r\n    return config.context;\r\n}\r\n\r\nexport function YGConfigSetCloneNodeFunc(config: YGConfig, callback: YGCloneNodeFunc): void {\r\n    config.cloneNodeCallback = callback;\r\n}\r\n\r\nexport function YGTraverseChildrenPreOrder(children: Array<YGNode>, f: (node: YGNode) => void): void {\r\n    for (let i = 0; i < children.length; ++i) {\r\n        const node: YGNode = children[i];\r\n        f(node);\r\n        YGTraverseChildrenPreOrder(node.getChildren(), f);\r\n    }\r\n}\r\n\r\nexport function YGTraversePreOrder(node: YGNode, f: (node: YGNode) => void): void {\r\n    if (!node) {\r\n        return;\r\n    }\r\n    f(node);\r\n    YGTraverseChildrenPreOrder(node.getChildren(), f);\r\n}\r\n","export interface Vec2 {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport interface Vec3 extends Vec2 {\r\n    z: number;\r\n}\r\n\r\nexport interface Vec4 extends Vec3 {\r\n    w: number;\r\n}\r\n\r\nexport type EventHandler = (evt: Event)=>void;\r\nexport interface EventHandlerObject {\r\n    handleEvent: EventHandler;\r\n}\r\nexport type EventListener = EventHandler|EventHandlerObject;\r\n\r\nexport class Event {\r\n    private static readonly FLAG_STOP_PROPAGATION = (1<<0);\r\n    private static readonly FLAG_STOP_IMMEDIATE_PROPAGATION = (1<<1);\r\n    private static readonly FLAG_CANCELED = (1<<2);\r\n    private static readonly FLAG_DISPATCHED = (1<<3);\r\n    private _type: string;\r\n    private _flags: number;\r\n    private _bubbles: boolean;\r\n    private _cancelable: boolean;\r\n    private _target: unknown;\r\n    private _currentTarget: unknown;\r\n    private _timestamp: number;\r\n    constructor (type: string, initOptions?: { bubbles?: boolean, cancelable?: boolean }) {\r\n        this._type = type;\r\n        this._flags = 0;\r\n        this._bubbles = !!initOptions?.bubbles;\r\n        this._cancelable = !!initOptions?.cancelable;\r\n        this._target = null;\r\n        this._currentTarget = null;\r\n        this._timestamp = Date.now ();\r\n    }\r\n    get type (): string {\r\n        return this._type;\r\n    }\r\n    get bubbles (): boolean {\r\n        return this._bubbles;\r\n    }\r\n    get cancelable (): boolean {\r\n        return this._cancelable;\r\n    }\r\n    get cancelBubble (): boolean {\r\n        return !!(this._flags & Event.FLAG_STOP_PROPAGATION);\r\n    }\r\n    get cancelImmediate (): boolean {\r\n        return !!(this._flags & Event.FLAG_STOP_IMMEDIATE_PROPAGATION);\r\n    }\r\n    set cancelBubble (val: boolean) {\r\n        val && this.stopPropagation ();\r\n    }\r\n    get defaultPrevented (): boolean {\r\n        return !!(this._flags & Event.FLAG_CANCELED);\r\n    }\r\n    get target (): unknown {\r\n        return this._target;\r\n    }\r\n    get currentTarget (): unknown {\r\n        return this._currentTarget;\r\n    }\r\n    get timestamp (): number {\r\n        return this._timestamp;\r\n    }\r\n    preventDefault () {\r\n        this._flags |= Event.FLAG_CANCELED;\r\n    }\r\n    stopPropagation () {\r\n        this._flags |= Event.FLAG_STOP_PROPAGATION;\r\n    }\r\n    stopImmediatePropagation () {\r\n        this._flags |= Event.FLAG_STOP_PROPAGATION;\r\n        this._flags |= Event.FLAG_STOP_IMMEDIATE_PROPAGATION;\r\n    }\r\n    /** @internal */\r\n    _prepareDispatch (target: unknown) {\r\n        if (this._flags & Event.FLAG_DISPATCHED) {\r\n            throw new Error ('Failed to dispatch event: invalid event state');\r\n        }\r\n        this._target = target;\r\n        this._flags |= Event.FLAG_DISPATCHED;\r\n    }\r\n    /** @internal */\r\n    _invokeListener (listener: EventListener, thisObject: unknown) {\r\n        this._currentTarget = thisObject;\r\n        const handler: EventHandler = typeof listener === 'function' ? listener : listener.handleEvent;\r\n        handler.call (thisObject, this);\r\n        this._currentTarget = null;\r\n    }\r\n}\r\n\r\nexport interface EventTarget {\r\n    addEventListener (type: string, callback: EventListener): void;\r\n    removeEventListener (type: string, callback: EventListener): void;\r\n    dispatchEvent (evt: Event): boolean;\r\n}\r\n\r\nexport function eventtarget () {\r\n    return function (ctor: any) {\r\n        ctor.prototype.addEventListener = function (type: string, callback: EventListener) {\r\n            const listeners: { [type: string]: EventListener[] } = this.__listeners || {};\r\n            this.__listeners = listeners;\r\n            if (!(type in listeners)) {\r\n                listeners[type] = [];\r\n            }\r\n            listeners[type].push (callback);\r\n        };\r\n        ctor.prototype.removeEventListener = function (type: string, callback: EventListener) {\r\n            const listeners: { [type: string]: EventListener[] } = this.__listeners || {};\r\n            if (type in listeners) {\r\n                const stack = listeners[type] as EventListener[];\r\n                const index = stack.indexOf (callback);\r\n                if (index >= 0) {\r\n                    stack.splice (index, 1);\r\n                }\r\n            }\r\n        };\r\n        ctor.prototype.dispatchEvent = function (evt: Event) {\r\n            evt._prepareDispatch (this);\r\n            let obj = this;\r\n            while (obj) {\r\n                const listeners: { [type: string]: EventListener[] } = obj.__listeners || {};\r\n                if (evt.type in listeners) {\r\n                    const stack = listeners[evt.type].slice();\r\n                    for (let i = 0, l = stack.length; i < l; i++) {\r\n                        evt._invokeListener (stack[i], obj);\r\n                        if (evt.cancelImmediate) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (evt.bubbles && !evt.cancelBubble) {\r\n                    obj = obj.parentNode || obj.gui || null;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            return !evt.defaultPrevented;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface Texture {\r\n\r\n}\r\n\r\n/** @internal */\r\nexport function assert (expr: boolean, message?: string, fatal?: boolean) {\r\n    if (!expr) {\r\n        const msg = `Assertion failed: ${message}`;\r\n        console.log (msg);\r\n        if (fatal) {\r\n            throw new Error (msg);\r\n        }\r\n    }\r\n    return expr;\r\n}\r\n\r\n"],"sourceRoot":""}